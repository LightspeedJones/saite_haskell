
==================== FINAL INTERFACE ====================
2018-11-30 05:59:08.112272237 UTC

interface main:Foundation [family instance module] 8044
  interface hash: dbada6135a12d4bd8b8db31f06af6bdf
  ABI hash: 759822151ca21f88554c5d415722ac95
  export-list hash: bf35f3a755e4679019142bf94c9bfdc7
  orphan hash: abe2774bc5704a642c1463a785e881cd
  flag hash: cc0f342816f9b87265a6b89c32186f63
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: True
  where
exports:
  Foundation.migrateAll
  Foundation.resourcesApp
  Foundation.App{Foundation.App connPool}
  Foundation.Cliente{Foundation.Cliente clienteEndereco clienteLogin clienteNome clientePword clienteTelefone}
  Foundation.ClienteId
  Foundation.Form
  Foundation.Handler
  Foundation.ItemPedido{Foundation.ItemPedido itemPedidoPedidoid itemPedidoProdutoid itemPedidoVlunit}
  Foundation.ItemPedidoId
  Foundation.Pedido{Foundation.Pedido pedidoClienteid pedidoFinalizado pedidoHrpedido pedidoVltot}
  Foundation.PedidoId
  Foundation.Produto{Foundation.Produto produtoNome produtoTipoprodutoid produtoValor}
  Foundation.ProdutoId
  Foundation.TipoProduto{Foundation.TipoProduto tipoProdutoNometipo}
  Foundation.TipoProdutoId
  Foundation.Widget
  Database.Persist.Class.PersistEntity.EntityField{Foundation.ClienteEndereco Foundation.ClienteId Foundation.ClienteLogin Foundation.ClienteNome Foundation.ClientePword Foundation.ClienteTelefone Foundation.ItemPedidoId Foundation.ItemPedidoPedidoid Foundation.ItemPedidoProdutoid Foundation.ItemPedidoVlunit Foundation.PedidoClienteid Foundation.PedidoFinalizado Foundation.PedidoHrpedido Foundation.PedidoId Foundation.PedidoVltot Foundation.ProdutoId Foundation.ProdutoNome Foundation.ProdutoTipoprodutoid Foundation.ProdutoValor Foundation.TipoProdutoId Foundation.TipoProdutoNometipo}
  Database.Persist.Class.PersistEntity.Key{Foundation.ClienteKey Foundation.ItemPedidoKey Foundation.PedidoKey Foundation.ProdutoKey Foundation.TipoProdutoKey unClienteKey unItemPedidoKey unPedidoKey unProdutoKey unTipoProdutoKey}
  Database.Persist.Class.PersistEntity.Unique{Foundation.UniqueLogin}
  Yesod.Routes.Class.Route{Foundation.CardapioR Foundation.ClienteR Foundation.HomeR Foundation.LoginR Foundation.LogoutR}
module dependencies:
package dependencies: aeson-1.3.1.1 aeson-compat-0.3.9
                      ansi-terminal-0.8.2 appar-0.1.4 array-0.5.2.0 async-2.2.1
                      attoparsec-0.13.2.2 attoparsec-iso8601-1.0.1.0 auto-update-0.1.4
                      base-4.11.1.0 base-compat-0.10.5 base64-bytestring-1.0.0.1
                      basement-0.0.8 binary-0.8.5.1 blaze-builder-0.4.1.0
                      blaze-html-0.9.1.1 blaze-markup-0.8.2.2 bsb-http-chunked-0.0.0.4
                      byteable-0.1.1 byteorder-1.0.4 bytestring-0.10.8.2
                      case-insensitive-1.2.0.11 cereal-0.5.7.0 cipher-aes-0.2.11
                      clientsession-0.9.1.2 colour-2.3.4 conduit-1.3.1
                      conduit-extra-1.3.0 containers-0.5.11.0 cookie-0.4.4
                      cprng-aes-0.6.1 crypto-api-0.13.3 crypto-cipher-types-0.0.9
                      crypto-random-0.0.9 css-text-0.1.3.0 data-default-class-0.1.2.0
                      deepseq-1.4.3.0 directory-1.3.1.5 dlist-0.8.0.5 easy-file-0.2.2
                      email-validate-2.3.2.9 entropy-0.4.1.4 exceptions-0.10.0
                      fast-logger-2.4.11 filepath-1.4.2 ghc-boot-th-8.4.4
                      ghc-prim-0.5.2.0 hashable-1.2.7.0 haskell-src-exts-1.20.3
                      haskell-src-meta-0.8.0.3 http-api-data-0.3.8.1 http-date-0.0.8
                      http-types-0.12.2 http2-1.6.4 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.2 iproute-1.7.6 lifted-base-0.2.3.12
                      memory-0.14.18 monad-control-1.0.2.3 monad-logger-0.3.30
                      monad-loops-0.4.3 mono-traversable-1.0.9.0 mtl-2.2.2
                      network-2.6.3.6 network-byte-order-0.0.0.0 network-uri-2.6.1.0
                      old-locale-1.0.0.7 old-time-1.1.0.3 parsec-3.1.13.0
                      path-pieces-0.2.1 persistent-2.8.2 persistent-postgresql-2.8.2.0
                      persistent-template-2.5.4 postgresql-libpq-0.9.4.2
                      postgresql-simple-0.5.4.0 pretty-1.1.3.6 primitive-0.6.3.0
                      process-1.6.3.0 psqueues-0.2.7.0 random-1.1 resource-pool-0.2.3.2
                      resourcet-1.2.2 scientific-0.3.6.2 securemem-0.1.10
                      shakespeare-2.0.20 silently-1.2.5 simple-sendfile-0.2.27
                      skein-1.0.9.4 split-0.2.3.3 stm-2.4.5.1 stm-chans-3.0.0.4
                      streaming-commons-0.2.1.0 tagged-0.8.5 tagsoup-0.14.7
                      template-haskell-2.13.0.0 text-1.2.3.1 time-1.8.0.2
                      time-locale-compat-0.1.1.5 transformers-0.5.5.0
                      transformers-base-0.4.5.2 unix-2.7.2.2 unix-compat-0.5.1
                      unix-time-0.3.8 unliftio-0.2.8.1 unliftio-core-0.1.2.0
                      unordered-containers-0.2.9.0 utf8-string-1.0.1.1 uuid-types-1.0.3
                      vault-0.3.1.2 vector-0.12.0.1 vector-algorithms-0.7.0.4 wai-3.2.1.2
                      wai-extra-3.0.24.3 wai-logger-2.3.2 warp-3.2.25 word8-0.1.3
                      xss-sanitize-0.3.6 yesod-1.6.0 yesod-core-1.6.8.1 yesod-form-1.6.3
                      yesod-persistent-1.6.0.1 zlib-0.6.2
orphans: persistent-template-2.5.4:Database.Persist.TH
         aeson-compat-0.3.9:Data.Aeson.Compat colour-2.3.4:Data.Colour
         crypto-api-0.13.3:Crypto.Classes
         basement-0.0.8:Basement.UArray.Base basement-0.0.8:Basement.Block
         network-2.6.3.6:Network.Socket
         haskell-src-exts-1.20.3:Language.Haskell.Exts.Parser
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistUnique
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistStore
         unix-time-0.3.8:Data.UnixTime.Diff
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         stm-2.4.5.1:Control.Monad.STM time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         basement-0.0.8:Basement.Block.Base basement-0.0.8:Basement.Monad
                         basement-0.0.8:Basement.MutableBuilder basement-0.0.8:Basement.Nat
                         basement-0.0.8:Basement.NonEmpty
                         basement-0.0.8:Basement.Numerical.Subtractive
                         basement-0.0.8:Basement.PrimType basement-0.0.8:Basement.String
                         basement-0.0.8:Basement.String.Encoding.ASCII7
                         basement-0.0.8:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.8:Basement.String.Encoding.UTF16
                         basement-0.0.8:Basement.String.Encoding.UTF32
                         basement-0.0.8:Basement.Types.OffsetSize
                         basement-0.0.8:Basement.UArray.Base
                         basement-0.0.8:Basement.UTF8.Base
                         conduit-1.3.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1:Data.Conduit.Internal.Pipe
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.5:Data.DList email-validate-2.3.2.9:Text.Email.Parser
                         ghc-boot-th-8.4.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.4:GHC.LanguageExtensions.Type
                         haskell-src-exts-1.20.3:Language.Haskell.Exts.SrcLoc
                         haskell-src-exts-1.20.3:Language.Haskell.Exts.Syntax
                         iproute-1.7.6:Data.IP.Addr iproute-1.7.6:Data.IP.Range
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         monad-logger-0.3.30:Control.Monad.Logger
                         mono-traversable-1.0.9.0:Data.MonoTraversable
                         mono-traversable-1.0.9.0:Data.NonNull
                         mono-traversable-1.0.9.0:Data.Sequences
                         network-uri-2.6.1.0:Network.URI
                         persistent-2.8.2:Database.Persist.Class.PersistConfig
                         persistent-2.8.2:Database.Persist.Class.PersistEntity
                         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.8.2:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.8.2.0:Database.Persist.Postgresql
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.20:Text.Internal.Css
                         shakespeare-2.0.20:Text.Shakespeare tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
                         yesod-core-1.6.8.1:Yesod.Core.Class.Handler
                         yesod-core-1.6.8.1:Yesod.Core.Internal.LiteApp
                         yesod-core-1.6.8.1:Yesod.Core.Types
                         zlib-0.6.2:Codec.Compression.Zlib.Stream
import  -/  aeson-1.3.1.1:Data.Aeson.Encoding.Internal 39a2dd87ea343048b9e6a8962218e5d4
import  -/  aeson-1.3.1.1:Data.Aeson.Types.FromJSON 4d40bb9c7e7f03cebc739e803e4cc8a3
import  -/  aeson-1.3.1.1:Data.Aeson.Types.Internal 33827a36b7e554f3a754ccbe2b233824
import  -/  aeson-1.3.1.1:Data.Aeson.Types.ToJSON 520b155a34c729fc0f62d42b2ce74a00
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.Proxy a80a60a2fdceabfeb4d110d23b808844
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Err 5e26aa744981f14e0f1e4d29c44ac52e
import  -/  base-4.11.1.0:GHC.Int dbb9fa419302fe275e335328af678cb6
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Read b9e6d20d40da8c8a12b566d22e1160e0
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:Text.ParserCombinators.ReadPrec d0ebf984ed486435a97481288b73febb
import  -/  base-4.11.1.0:Text.Read.Lex f8ad6f9ae74ae325ba69a4fa5c82aaca
import  -/  blaze-html-0.9.1.1:Text.Blaze.Html fdd818245cad1bbfcedd87b21c62946f
import  -/  bytestring-0.10.8.2:Data.ByteString.Builder.Internal f910d36b31df231e2041b495c4a05fd2
import  -/  bytestring-0.10.8.2:Data.ByteString.Internal 0b7b83fbf9714d7fb832fbb905af4a0b
import  -/  containers-0.5.11.0:Data.Map.Internal e02d23495520de11b8e9f3c9c93a4d11
import  -/  containers-0.5.11.0:Data.Set.Internal 7c23d64c612d25581166e736f62b7377
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  http-api-data-0.3.8.1:Web.Internal.HttpApiData 2576c8bc8e6a1cf65c0d36480ff97d56
import  -/  path-pieces-0.2.1:Web.PathPieces 0430b533daa28b7f822bb78aebba8412
import  -/  persistent-2.8.2:Database.Persist.Class.PersistEntity cb3776dad29a4f5fc118f470e79758bf
import  -/  persistent-2.8.2:Database.Persist.Class.PersistField 2c6363cf4a9c5a9c96dc30d21c28f721
import  -/  persistent-2.8.2:Database.Persist.Class.PersistStore d817d10fae2ea58eb963d470b8d1ec75
import  -/  persistent-2.8.2:Database.Persist.Quasi 8aeac9c3fa7070e0d5e3df4a7976b85f
import  -/  persistent-2.8.2:Database.Persist.Sql.Class 31fc243eb4a04d16298377995f3bd558
import  -/  persistent-2.8.2:Database.Persist.Sql.Migration e140d68c60ac3c1e46fd22459157372c
import  -/  persistent-2.8.2:Database.Persist.Sql.Run 6f0259998928e5aec3f138321b6775e3
import  -/  persistent-2.8.2:Database.Persist.Sql.Types 94caaad1b946ae6579375c58f4c20a7e
import  -/  persistent-2.8.2:Database.Persist.Sql.Types.Internal 15da75d3e860ba97a5068b9e862aec33
import  -/  persistent-2.8.2:Database.Persist.Types.Base 74d6b019d91738f476bf6d5aca85d4ac
import  -/  persistent-postgresql-2.8.2.0:Database.Persist.Postgresql 67d2c206a72e3c251d29d480a26581a7
import  -/  persistent-template-2.5.4:Database.Persist.TH 2a1f3727afe8f9d8c974992cc2690a9b
import  -/  shakespeare-2.0.20:Text.Shakespeare.I18N b76d89b2d6d24deffbe4e4099dea6e3a
import  -/  text-1.2.3.1:Data.Text cb97f965b33763b648b5393c0517cf50
import  -/  text-1.2.3.1:Data.Text.Internal 4893d0339f20e05978e1af2720305fa2
import  -/  unordered-containers-0.2.9.0:Data.HashMap.Base ade330e44ac167d7aba8ff66787f81cd
import  -/  unordered-containers-0.2.9.0:Data.HashMap.Strict c7af08f5ba8117e970a40e6df7dbf243
import  -/  yesod-1.6.0:Yesod 12dd731b07dae980742b80692ae0952f
import  -/  yesod-core-1.6.8.1:Yesod.Core.Class.Yesod b52f2d36e084040c2f01914b6a7090fc
import  -/  yesod-core-1.6.8.1:Yesod.Core.Handler e612adc064f65691fdfb53152b949d63
import  -/  yesod-core-1.6.8.1:Yesod.Core.Internal.TH 3c4a92783209f9d5e38919d2f76db0a7
import  -/  yesod-core-1.6.8.1:Yesod.Core.Types ac94c94b0f2891edbffebc6c185f3647
import  -/  yesod-core-1.6.8.1:Yesod.Routes.Class cb02bbaa34ebefea69022ae41d524b35
import  -/  yesod-core-1.6.8.1:Yesod.Routes.Parse 27ecc835d467ce24df7f1e58e61ab7d7
import  -/  yesod-core-1.6.8.1:Yesod.Routes.TH.Types 951d0bb8aceb5a7c20359476de8e6e88
import  -/  yesod-form-1.6.3:Yesod.Form.Fields fce68d328b0186733f30816379cd8110
import  -/  yesod-form-1.6.3:Yesod.Form.Types 6d2478116d5a6949e301ceb9ff8a7feb
import  -/  yesod-persistent-1.6.0.1:Yesod.Persist.Core dee21111217fc049e95690a79c442bb0
addDependentFile "routes" d9dc82091cec42523276a00a23bbd617
addDependentFile "config/models" 4cab76be677d7cb602f81a1b122e893a
388dd4c04563308c88c61ef89b3610ad
  $fEqKey ::
    GHC.Classes.Eq
      (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                  GHC.Int.eqInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.neInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R <GHC.Types.Bool>_R) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fEqKey0 ::
    GHC.Classes.Eq
      (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                  GHC.Int.eqInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.neInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R <GHC.Types.Bool>_R) -}
b5272135afcffe4d7282ae6ad9b22515
  $fEqKey1 ::
    GHC.Classes.Eq
      (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                  GHC.Int.eqInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.neInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R <GHC.Types.Bool>_R) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fEqKey2 ::
    GHC.Classes.Eq
      (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                  GHC.Int.eqInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.neInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R <GHC.Types.Bool>_R) -}
ab0e720acfd8349912d50cf443256369
  $fEqKey3 ::
    GHC.Classes.Eq
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  GHC.Int.eqInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.neInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R <GHC.Types.Bool>_R) -}
fad4d7498437d0835053b4479d34e8e2
  $fEqRoute ::
    GHC.Classes.Eq (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fEqRoute_$c==
                  Foundation.$fEqRoute_$c/= -}
fad4d7498437d0835053b4479d34e8e2
  $fEqRoute_$c/= ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Yesod.Routes.Class.Route Foundation.App)
                   (y :: Yesod.Routes.Class.Route Foundation.App) ->
                 case x `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   Foundation.HomeR
                   -> case y `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.True Foundation.HomeR -> GHC.Types.False }
                   Foundation.ClienteR
                   -> case y `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.True Foundation.ClienteR -> GHC.Types.False }
                   Foundation.LoginR
                   -> case y `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.True Foundation.LoginR -> GHC.Types.False }
                   Foundation.CardapioR
                   -> case y `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.True Foundation.CardapioR -> GHC.Types.False }
                   Foundation.LogoutR
                   -> case y `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.True
                        Foundation.LogoutR -> GHC.Types.False } }) -}
fad4d7498437d0835053b4479d34e8e2
  $fEqRoute_$c== ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Yesod.Routes.Class.Route Foundation.App)
                   (ds1 :: Yesod.Routes.Class.Route Foundation.App) ->
                 case ds `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   Foundation.HomeR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False Foundation.HomeR -> GHC.Types.True }
                   Foundation.ClienteR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False Foundation.ClienteR -> GHC.Types.True }
                   Foundation.LoginR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False Foundation.LoginR -> GHC.Types.True }
                   Foundation.CardapioR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False Foundation.CardapioR -> GHC.Types.True }
                   Foundation.LogoutR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.LogoutR -> GHC.Types.True } }) -}
388dd4c04563308c88c61ef89b3610ad
  $fFromHttpApiDataKey ::
    Web.Internal.HttpApiData.FromHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                  Web.Internal.HttpApiData.$fFromHttpApiDataInt64_$cparseUrlPiece
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0])))))_R)
                  Web.Internal.HttpApiData.$fFromHttpApiDataInt64_$cparseHeader
                    `cast`
                  (<Data.ByteString.Internal.ByteString>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0])))))_R)
                  Web.Internal.HttpApiData.$fFromHttpApiDataInt64_$cparseUrlPiece
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0])))))_R) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fFromHttpApiDataKey0 ::
    Web.Internal.HttpApiData.FromHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                  Web.Internal.HttpApiData.$fFromHttpApiDataInt64_$cparseUrlPiece
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0])))))_R)
                  Web.Internal.HttpApiData.$fFromHttpApiDataInt64_$cparseHeader
                    `cast`
                  (<Data.ByteString.Internal.ByteString>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0])))))_R)
                  Web.Internal.HttpApiData.$fFromHttpApiDataInt64_$cparseUrlPiece
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0])))))_R) -}
b5272135afcffe4d7282ae6ad9b22515
  $fFromHttpApiDataKey1 ::
    Web.Internal.HttpApiData.FromHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                  Web.Internal.HttpApiData.$fFromHttpApiDataInt64_$cparseUrlPiece
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0])))))_R)
                  Web.Internal.HttpApiData.$fFromHttpApiDataInt64_$cparseHeader
                    `cast`
                  (<Data.ByteString.Internal.ByteString>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0])))))_R)
                  Web.Internal.HttpApiData.$fFromHttpApiDataInt64_$cparseUrlPiece
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0])))))_R) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fFromHttpApiDataKey2 ::
    Web.Internal.HttpApiData.FromHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                  Web.Internal.HttpApiData.$fFromHttpApiDataInt64_$cparseUrlPiece
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0])))))_R)
                  Web.Internal.HttpApiData.$fFromHttpApiDataInt64_$cparseHeader
                    `cast`
                  (<Data.ByteString.Internal.ByteString>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0])))))_R)
                  Web.Internal.HttpApiData.$fFromHttpApiDataInt64_$cparseUrlPiece
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0])))))_R) -}
ab0e720acfd8349912d50cf443256369
  $fFromHttpApiDataKey3 ::
    Web.Internal.HttpApiData.FromHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Web.Internal.HttpApiData.$fFromHttpApiDataInt64_$cparseUrlPiece
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0])))))_R)
                  Web.Internal.HttpApiData.$fFromHttpApiDataInt64_$cparseHeader
                    `cast`
                  (<Data.ByteString.Internal.ByteString>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0])))))_R)
                  Web.Internal.HttpApiData.$fFromHttpApiDataInt64_$cparseUrlPiece
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0])))))_R) -}
388dd4c04563308c88c61ef89b3610ad
  $fFromJSONKey ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                  Data.Aeson.Types.FromJSON.$fFromJSONInt64_$cparseJSON
                    `cast`
                  (<Data.Aeson.Types.Internal.Value>_R
                   ->_R (Data.Aeson.Types.Internal.Parser
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0])))))_R)
                  Data.Aeson.Types.FromJSON.$fFromJSONInt64_$cparseJSONList
                    `cast`
                  (<Data.Aeson.Types.Internal.Value>_R
                   ->_R (Data.Aeson.Types.Internal.Parser
                           ([Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0])))])_R)_R) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fFromJSONKey0 ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                  Data.Aeson.Types.FromJSON.$fFromJSONInt64_$cparseJSON
                    `cast`
                  (<Data.Aeson.Types.Internal.Value>_R
                   ->_R (Data.Aeson.Types.Internal.Parser
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0])))))_R)
                  Data.Aeson.Types.FromJSON.$fFromJSONInt64_$cparseJSONList
                    `cast`
                  (<Data.Aeson.Types.Internal.Value>_R
                   ->_R (Data.Aeson.Types.Internal.Parser
                           ([Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0])))])_R)_R) -}
b5272135afcffe4d7282ae6ad9b22515
  $fFromJSONKey1 ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                  Data.Aeson.Types.FromJSON.$fFromJSONInt64_$cparseJSON
                    `cast`
                  (<Data.Aeson.Types.Internal.Value>_R
                   ->_R (Data.Aeson.Types.Internal.Parser
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0])))))_R)
                  Data.Aeson.Types.FromJSON.$fFromJSONInt64_$cparseJSONList
                    `cast`
                  (<Data.Aeson.Types.Internal.Value>_R
                   ->_R (Data.Aeson.Types.Internal.Parser
                           ([Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0])))])_R)_R) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fFromJSONKey2 ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                  Data.Aeson.Types.FromJSON.$fFromJSONInt64_$cparseJSON
                    `cast`
                  (<Data.Aeson.Types.Internal.Value>_R
                   ->_R (Data.Aeson.Types.Internal.Parser
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0])))))_R)
                  Data.Aeson.Types.FromJSON.$fFromJSONInt64_$cparseJSONList
                    `cast`
                  (<Data.Aeson.Types.Internal.Value>_R
                   ->_R (Data.Aeson.Types.Internal.Parser
                           ([Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0])))])_R)_R) -}
ab0e720acfd8349912d50cf443256369
  $fFromJSONKey3 ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Data.Aeson.Types.FromJSON.$fFromJSONInt64_$cparseJSON
                    `cast`
                  (<Data.Aeson.Types.Internal.Value>_R
                   ->_R (Data.Aeson.Types.Internal.Parser
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0])))))_R)
                  Data.Aeson.Types.FromJSON.$fFromJSONInt64_$cparseJSONList
                    `cast`
                  (<Data.Aeson.Types.Internal.Value>_R
                   ->_R (Data.Aeson.Types.Internal.Parser
                           ([Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0])))])_R)_R) -}
388dd4c04563308c88c61ef89b3610ad
  $fOrdKey ::
    GHC.Classes.Ord
      (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                  Foundation.$fEqKey
                  GHC.Int.$fOrdInt64_$ccompare
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R <GHC.Types.Ordering>_R)
                  GHC.Int.ltInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.leInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.gtInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.geInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.$fOrdInt64_$cmax
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                  GHC.Int.$fOrdInt64_$cmin
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0])))) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fOrdKey0 ::
    GHC.Classes.Ord
      (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                  Foundation.$fEqKey0
                  GHC.Int.$fOrdInt64_$ccompare
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R <GHC.Types.Ordering>_R)
                  GHC.Int.ltInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.leInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.gtInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.geInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.$fOrdInt64_$cmax
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                  GHC.Int.$fOrdInt64_$cmin
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0])))) -}
b5272135afcffe4d7282ae6ad9b22515
  $fOrdKey1 ::
    GHC.Classes.Ord
      (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                  Foundation.$fEqKey1
                  GHC.Int.$fOrdInt64_$ccompare
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R <GHC.Types.Ordering>_R)
                  GHC.Int.ltInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.leInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.gtInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.geInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.$fOrdInt64_$cmax
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                  GHC.Int.$fOrdInt64_$cmin
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0])))) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fOrdKey2 ::
    GHC.Classes.Ord
      (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                  Foundation.$fEqKey2
                  GHC.Int.$fOrdInt64_$ccompare
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R <GHC.Types.Ordering>_R)
                  GHC.Int.ltInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.leInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.gtInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.geInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.$fOrdInt64_$cmax
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                  GHC.Int.$fOrdInt64_$cmin
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0])))) -}
ab0e720acfd8349912d50cf443256369
  $fOrdKey3 ::
    GHC.Classes.Ord
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Foundation.$fEqKey3
                  GHC.Int.$fOrdInt64_$ccompare
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R <GHC.Types.Ordering>_R)
                  GHC.Int.ltInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.leInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.gtInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.geInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Int.$fOrdInt64_$cmax
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                  GHC.Int.$fOrdInt64_$cmin
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0])))) -}
fad4d7498437d0835053b4479d34e8e2
  $fParseRouteApp :: Yesod.Routes.Class.ParseRoute Foundation.App
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fParseRouteApp_$cparseRoute -}
fad4d7498437d0835053b4479d34e8e2
  $fParseRouteApp1 ::
    GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.ClienteR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
771939d035a1bd1b2c69a51304b2a827
  $fParseRouteApp10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("login"#) -}
7999ee4e64f40ff2cb6dd371a955ee89
  $fParseRouteApp11 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fParseRouteApp12) -}
5a524c7ca0fc9684cae535b587dcf943
  $fParseRouteApp12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cliente"#) -}
fad4d7498437d0835053b4479d34e8e2
  $fParseRouteApp13 ::
    GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.HomeR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
fad4d7498437d0835053b4479d34e8e2
  $fParseRouteApp2 ::
    GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.LoginR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
fad4d7498437d0835053b4479d34e8e2
  $fParseRouteApp3 ::
    GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.CardapioR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
fad4d7498437d0835053b4479d34e8e2
  $fParseRouteApp4 ::
    GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.LogoutR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
667fd17e33a51ec728b73d8d641ea01f
  $fParseRouteApp5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fParseRouteApp6) -}
e0d41d18168142ab9a919d98459cc3b1
  $fParseRouteApp6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("logout"#) -}
a63ec94c13701bf939da4e14fdd6150b
  $fParseRouteApp7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fParseRouteApp8) -}
f30f95255c390e9ca6b211d4aaf4bb71
  $fParseRouteApp8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cardapio"#) -}
7613e3be2c909eccd2dff7737a83ba13
  $fParseRouteApp9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fParseRouteApp10) -}
fad4d7498437d0835053b4479d34e8e2
  $fParseRouteApp_$cparseRoute ::
    ([Data.Text.Internal.Text],
     [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <S(SL),1*U(1*U,A)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: ([Data.Text.Internal.Text],
                          [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) ->
                 case w of ww { (,) ww1 ww2 -> Foundation.$w$cparseRoute ww1 }) -}
388dd4c04563308c88c61ef89b3610ad
  $fPathPieceKey ::
    Web.PathPieces.PathPiece
      (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                  Web.PathPieces.$fPathPieceInt64_$sparseIntegral
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R (GHC.Base.Maybe
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0])))))_R)
                  Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R <Data.Text.Internal.Text>_R) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPathPieceKey0 ::
    Web.PathPieces.PathPiece
      (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                  Web.PathPieces.$fPathPieceInt64_$sparseIntegral
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R (GHC.Base.Maybe
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0])))))_R)
                  Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R <Data.Text.Internal.Text>_R) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPathPieceKey1 ::
    Web.PathPieces.PathPiece
      (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                  Web.PathPieces.$fPathPieceInt64_$sparseIntegral
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R (GHC.Base.Maybe
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0])))))_R)
                  Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R <Data.Text.Internal.Text>_R) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPathPieceKey2 ::
    Web.PathPieces.PathPiece
      (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                  Web.PathPieces.$fPathPieceInt64_$sparseIntegral
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R (GHC.Base.Maybe
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0])))))_R)
                  Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R <Data.Text.Internal.Text>_R) -}
ab0e720acfd8349912d50cf443256369
  $fPathPieceKey3 ::
    Web.PathPieces.PathPiece
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Web.PathPieces.$fPathPieceInt64_$sparseIntegral
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R (GHC.Base.Maybe
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0])))))_R)
                  Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R <Data.Text.Internal.Text>_R) -}
ab0e720acfd8349912d50cf443256369
  $fPersistEntityCliente ::
    Database.Persist.Class.PersistEntity.PersistEntity
      Foundation.Cliente
  DFunId
  {- Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Cliente
                  Foundation.$fPersistFieldKey3
                  Foundation.$fToJSONKey3
                  Foundation.$fFromJSONKey3
                  Foundation.$fShowKey3
                  Foundation.$fReadKey3
                  Foundation.$fEqKey3
                  Foundation.$fOrdKey3
                  Foundation.$fPersistEntityCliente_$ckeyToValues
                  Foundation.$fPersistEntityCliente_$ckeyFromValues
                  Foundation.$fPersistEntityCliente46
                    `cast`
                  (Sym (Foundation.D:R:EntityFieldClientetyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                     Foundation.Cliente>_N)
                  Foundation.$fPersistEntityCliente_$centityDef
                  Foundation.$fPersistEntityCliente_$cpersistFieldDef
                  Foundation.$fPersistEntityCliente_$ctoPersistFields
                  Foundation.$fPersistEntityCliente_$cfromPersistValues
                  Foundation.$fPersistEntityCliente_$cpersistUniqueKeys
                  Foundation.$fPersistEntityCliente_$cpersistUniqueToFieldNames
                  Foundation.$fPersistEntityCliente_$cpersistUniqueToValues
                  Foundation.$fPersistEntityCliente_$cfieldLens -}
16faa9524a58a903fc2f6d0de292db15
  $fPersistEntityCliente1 ::
    [(Database.Persist.Types.Base.HaskellName,
      Database.Persist.Types.Base.DBName)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Types.Base.HaskellName,
                      Database.Persist.Types.Base.DBName)
                   Foundation.$fPersistEntityCliente2
                   (GHC.Types.[]
                      @ (Database.Persist.Types.Base.HaskellName,
                         Database.Persist.Types.Base.DBName))) -}
359e9766b9de71f33a01d1b2fddeafed
  $fPersistEntityCliente10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("telefone"#) -}
9d100f2c0c59df199bc8df2336b731d5
  $fPersistEntityCliente11 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente12 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
7b5174f89c3549c9e625f9f7732ac1ef
  $fPersistEntityCliente12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("endereco"#) -}
4135daa053f8d9c166f848d85a00e3b0
  $fPersistEntityCliente13 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityCliente14 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
eccf8b55f50ebeec48e7145a6d7dea24
  $fPersistEntityCliente14 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityCliente15) -}
ae03a8c0ea2c6d7e9170b935d40d7266
  $fPersistEntityCliente15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("nome"#) -}
94414eeeb162294fb19d105c87edd883
  $fPersistEntityCliente16 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente28 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente27 of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente26 of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente23
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente17) } } }) -}
eecdf78d4bfb55bcfcf4864d3bbbaf4d
  $fPersistEntityCliente17 :: Database.Persist.Types.Base.FieldType
  {- Strictness: m1,
     Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   Foundation.$fPersistEntityCliente20
                   Foundation.$fPersistEntityCliente18) -}
8a2992097c5a94007fa037796df2203f
  $fPersistEntityCliente18 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityCliente19) -}
091dc93edd39713596335a0d3ceddf9f
  $fPersistEntityCliente19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Int64"#) -}
40f18a78d5d85775e91ebf7f0b8de419
  $fPersistEntityCliente2 ::
    (Database.Persist.Types.Base.HaskellName,
     Database.Persist.Types.Base.DBName)
  {- Strictness: m,
     Unfolding: ((Foundation.$fParseRouteApp9
                    `cast`
                  (Sym (Database.Persist.Types.Base.N:HaskellName[0])),
                  Foundation.$fParseRouteApp9
                    `cast`
                  (Sym (Database.Persist.Types.Base.N:DBName[0])))) -}
54fabce20b6985e899dcf406a4432616
  $fPersistEntityCliente20 :: GHC.Base.Maybe Data.Text.Internal.Text
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Data.Text.Internal.Text
                   Foundation.$fPersistEntityCliente21) -}
22f15c0f1728e4349911cc213822eef5
  $fPersistEntityCliente21 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityCliente22) -}
767cb403e42a875931a0ae05b710d8f4
  $fPersistEntityCliente22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Data.Int"#) -}
0677cda0af1701102beb594bfa556f43
  $fPersistEntityCliente23 :: Database.Persist.Types.Base.FieldType
  {- Strictness: m1,
     Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Foundation.$fPersistEntityCliente24) -}
86017f370cec19918a0879d49eb86f01
  $fPersistEntityCliente24 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityCliente25) -}
5a58e85794e94e202310351bb4f57d10
  $fPersistEntityCliente25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ClienteId"#) -}
d92737f52fafea96e79321f27a66ab12
  $fPersistEntityCliente26 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Cliente"#) -}
c0827baac21b0fb9bca36ce173498366
  $fPersistEntityCliente27 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("id"#) -}
9ecf96acb2003b7455cfa3c72d958e76
  $fPersistEntityCliente28 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Id"#) -}
f3911a4e20011003c619c770b4d030db
  $fPersistEntityCliente29 :: Database.Persist.Types.Base.EntityDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente26 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Foundation.$fParseRouteApp11 of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente28 of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente27 of nt3 { Data.Text.Internal.Text ipv9 ipv10 ipv11 ->
                 case Foundation.$fPersistEntityCliente_$sfromList
                        @ [Database.Persist.Types.Base.ExtraLine]
                        (GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              [Database.Persist.Types.Base.ExtraLine])) of dt { DEFAULT ->
                 Database.Persist.Types.Base.EntityDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   (Database.Persist.Types.Base.FieldDef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      nt3 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                      Foundation.$fPersistEntityCliente23
                      Database.Persist.Types.Base.SqlInt64
                      (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                      GHC.Types.True
                      (Database.Persist.Types.Base.ForeignRef
                         nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                         Foundation.$fPersistEntityCliente17))
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   Foundation.$fPersistEntityCliente34
                   Foundation.$fPersistEntityCliente30
                   (GHC.Types.[] @ Database.Persist.Types.Base.ForeignDef)
                   (GHC.Types.[] @ Data.Text.Internal.Text)
                   dt
                   GHC.Types.False } } } } }) -}
4985c77daee05e8be72397aa3f4fcc67
  $fPersistEntityCliente3 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente7 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
a8323c70d85209167bf710943adbe18e
  $fPersistEntityCliente30 :: [Database.Persist.Types.Base.UniqueDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.UniqueDef
                   Foundation.$fPersistEntityCliente31
                   (GHC.Types.[] @ Database.Persist.Types.Base.UniqueDef)) -}
e5135f8ed8601eb2ad3542fa5eb9356f
  $fPersistEntityCliente31 :: Database.Persist.Types.Base.UniqueDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente33 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente32 of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 Database.Persist.Types.Base.UniqueDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente1
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr) } }) -}
a093892633f6a6964ede334436ca4992
  $fPersistEntityCliente32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("unique_login"#) -}
4d333cd302d44e0f28599db399fa647f
  $fPersistEntityCliente33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UniqueLogin"#) -}
0af860564e90d823f0bf07701fcfd61d
  $fPersistEntityCliente34 :: [Database.Persist.Types.Base.FieldDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityCliente13
                   Foundation.$fPersistEntityCliente35) -}
9ce9d0e8c033accf79292d6565b4fb93
  $fPersistEntityCliente35 :: [Database.Persist.Types.Base.FieldDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityCliente44
                   Foundation.$fPersistEntityCliente36) -}
7790e4359169d556499b9f82b71586c8
  $fPersistEntityCliente36 :: [Database.Persist.Types.Base.FieldDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityCliente42
                   Foundation.$fPersistEntityCliente37) -}
e875b588c003d19fb07ebdce15001d83
  $fPersistEntityCliente37 :: [Database.Persist.Types.Base.FieldDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityCliente41
                   Foundation.$fPersistEntityCliente38) -}
ea63787c246887f62d979dfacf5cb97c
  $fPersistEntityCliente38 :: [Database.Persist.Types.Base.FieldDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityCliente39
                   (GHC.Types.[] @ Database.Persist.Types.Base.FieldDef)) -}
f3c08f3201435f59b8c76f639a82f46e
  $fPersistEntityCliente39 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityCliente40 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
db85c9d2bfc9da94c86a5b12dd844292
  $fPersistEntityCliente4 :: Database.Persist.Types.Base.FieldType
  {- Strictness: m1,
     Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Foundation.$fPersistEntityCliente5) -}
c01920ba1aa28bb532f716f24194d742
  $fPersistEntityCliente40 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityCliente7) -}
4c507574b76f480f09d4f9598212d547
  $fPersistEntityCliente41 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fParseRouteApp9 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
5625248b717a37830408dbb13bfa1702
  $fPersistEntityCliente42 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityCliente43 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
349cb5c576e75a6282066af25813b4e3
  $fPersistEntityCliente43 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityCliente10) -}
aad37970bb73b7affc2d4af3250fd1c2
  $fPersistEntityCliente44 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityCliente45 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
6076dc6aa12ff4244f6adc327b640fab
  $fPersistEntityCliente45 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityCliente12) -}
ab0e720acfd8349912d50cf443256369
  $fPersistEntityCliente46 ::
    Foundation.R:EntityFieldClientetyp
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Foundation.ClienteId
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   Foundation.$fPersistEntityCliente_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Database.Persist.Class.PersistEntity.Key
                                       Foundation.Cliente>_N <Database.Persist.Class.PersistEntity.Key
                                                                Foundation.Cliente>_N)) -}
a10f504e6002a3c2e4865774d907a30f
  $fPersistEntityCliente5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityCliente6) -}
7154bf79ae147e99885260564b54407d
  $fPersistEntityCliente6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Text"#) -}
8b15c397681206fd3aea089035b0a841
  $fPersistEntityCliente7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pword"#) -}
116cd18bb12b7b569787486eb4994090
  $fPersistEntityCliente8 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Foundation.$fParseRouteApp10 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
2bdb5461cffa676f7ec9e18f42ddec50
  $fPersistEntityCliente9 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente10 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
ab0e720acfd8349912d50cf443256369
  $fPersistEntityCliente_$centityDef ::
    GHC.Base.Monad m =>
    m Foundation.Cliente -> Database.Persist.Types.Base.EntityDef
  {- Arity: 2, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ m :: * -> *
                   ($dMonad :: GHC.Base.Monad m)
                   (ds :: m Foundation.Cliente) ->
                 Foundation.$fPersistEntityCliente29) -}
ab0e720acfd8349912d50cf443256369
  $fPersistEntityCliente_$cfieldLens ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Cliente field
    -> forall (f :: * -> *).
       GHC.Base.Functor f =>
       (field -> f field)
       -> Database.Persist.Class.PersistEntity.Entity Foundation.Cliente
       -> f (Database.Persist.Class.PersistEntity.Entity
               Foundation.Cliente)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U(U,U,U,U,U))> -}
ab0e720acfd8349912d50cf443256369
  $fPersistEntityCliente_$cfromPersistValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either Data.Text.Internal.Text Foundation.Cliente
  {- Arity: 1, Strictness: <S,U> -}
ab0e720acfd8349912d50cf443256369
  $fPersistEntityCliente_$ckeyFromValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Database.Persist.Types.Base.PersistValue]) ->
                 case (Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                         (Database.Persist.TH.headNote x))
                        `cast`
                      (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])))_R of wild {
                   Data.Either.Left x1
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                        x1
                   Data.Either.Right y
                   -> Data.Either.Right
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                        y `cast`
                        (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0])) }) -}
ab0e720acfd8349912d50cf443256369
  $fPersistEntityCliente_$ckeyToValues ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Cliente) ->
                 GHC.Types.:
                   @ Database.Persist.Types.Base.PersistValue
                   (Database.Persist.Types.Base.PersistInt64
                      x `cast`
                      (Foundation.D:R:KeyCliente0[0] ; (Foundation.N:R:KeyCliente[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                   (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)) -}
ab0e720acfd8349912d50cf443256369
  $fPersistEntityCliente_$cpersistFieldDef ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Cliente typ
    -> Database.Persist.Types.Base.FieldDef
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ typ
                   (ds :: Database.Persist.Class.PersistEntity.EntityField
                            Foundation.Cliente typ) ->
                 case ds
                        `cast`
                      (Foundation.D:R:EntityFieldClientetyp0[0] <typ>_N) of wild {
                   Foundation.ClienteId $d~ -> Foundation.$fPersistEntityCliente16
                   Foundation.ClienteNome $d~ -> Foundation.$fPersistEntityCliente13
                   Foundation.ClienteEndereco $d~
                   -> Foundation.$fPersistEntityCliente11
                   Foundation.ClienteTelefone $d~
                   -> Foundation.$fPersistEntityCliente9
                   Foundation.ClienteLogin $d~ -> Foundation.$fPersistEntityCliente8
                   Foundation.ClientePword $d~
                   -> Foundation.$fPersistEntityCliente3 }) -}
ab0e720acfd8349912d50cf443256369
  $fPersistEntityCliente_$cpersistUniqueKeys ::
    Foundation.Cliente
    -> [Database.Persist.Class.PersistEntity.Unique Foundation.Cliente]
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLSL),1*U(A,A,A,U,A)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Cliente) ->
                 case ds of wild { Foundation.Cliente _nome _endereco _telefone _login _pword ->
                 GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.Unique Foundation.Cliente)
                   (Foundation.UniqueLogin _login)
                     `cast`
                   (Sym (Foundation.D:R:UniqueCliente0[0]))
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Unique
                           Foundation.Cliente)) }) -}
ab0e720acfd8349912d50cf443256369
  $fPersistEntityCliente_$cpersistUniqueToFieldNames ::
    Database.Persist.Class.PersistEntity.Unique Foundation.Cliente
    -> [(Database.Persist.Types.Base.HaskellName,
         Database.Persist.Types.Base.DBName)]
  {- Arity: 1, Strictness: <S,1*H>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Database.Persist.Class.PersistEntity.Unique
                            Foundation.Cliente) ->
                 case ds
                        `cast`
                      (Foundation.D:R:UniqueCliente0[0]) of wild { Foundation.UniqueLogin ds1 ->
                 Foundation.$fPersistEntityCliente1 }) -}
ab0e720acfd8349912d50cf443256369
  $fPersistEntityCliente_$cpersistUniqueToValues ::
    Database.Persist.Class.PersistEntity.Unique Foundation.Cliente
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Database.Persist.Class.PersistEntity.Unique
                            Foundation.Cliente) ->
                 case ds
                        `cast`
                      (Foundation.D:R:UniqueCliente0[0]) of wild { Foundation.UniqueLogin x ->
                 GHC.Types.:
                   @ Database.Persist.Types.Base.PersistValue
                   (Database.Persist.Types.Base.PersistText x)
                   (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue) }) -}
ab0e720acfd8349912d50cf443256369
  $fPersistEntityCliente_$ctoPersistFields ::
    Foundation.Cliente
    -> [Database.Persist.Class.PersistField.SomePersistField]
  {- Arity: 1, Strictness: <S(SSSSS),1*U(U,U,U,U,U)>m2, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Foundation.Cliente) ->
                 case w of ww { Foundation.Cliente ww1 ww2 ww3 ww4 ww5 ->
                 GHC.Types.:
                   @ Database.Persist.Class.PersistField.SomePersistField
                   (Database.Persist.Class.PersistField.SomePersistField
                      @ Data.Text.Internal.Text
                      Database.Persist.Class.PersistField.$fPersistFieldText0
                      ww1)
                   (GHC.Types.:
                      @ Database.Persist.Class.PersistField.SomePersistField
                      (Database.Persist.Class.PersistField.SomePersistField
                         @ Data.Text.Internal.Text
                         Database.Persist.Class.PersistField.$fPersistFieldText0
                         ww2)
                      (GHC.Types.:
                         @ Database.Persist.Class.PersistField.SomePersistField
                         (Database.Persist.Class.PersistField.SomePersistField
                            @ Data.Text.Internal.Text
                            Database.Persist.Class.PersistField.$fPersistFieldText0
                            ww3)
                         (GHC.Types.:
                            @ Database.Persist.Class.PersistField.SomePersistField
                            (Database.Persist.Class.PersistField.SomePersistField
                               @ Data.Text.Internal.Text
                               Database.Persist.Class.PersistField.$fPersistFieldText0
                               ww4)
                            (GHC.Types.:
                               @ Database.Persist.Class.PersistField.SomePersistField
                               (Database.Persist.Class.PersistField.SomePersistField
                                  @ Data.Text.Internal.Text
                                  Database.Persist.Class.PersistField.$fPersistFieldText0
                                  ww5)
                               (GHC.Types.[]
                                  @ Database.Persist.Class.PersistField.SomePersistField))))) }) -}
ab0e720acfd8349912d50cf443256369
  $fPersistEntityCliente_$d~~ ::
    (Database.Persist.Class.PersistEntity.Key Foundation.Cliente :: *)
    GHC.Types.~~ (Database.Persist.Class.PersistEntity.Key
                    Foundation.Cliente :: *)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   @~ <Database.Persist.Class.PersistEntity.Key
                         Foundation.Cliente>_N) -}
623d64b8c703488d85869ec6367f9628
  $fPersistEntityCliente_$s$wpoly_go13 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a
    -> [(Data.Text.Internal.Text, a)]
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
  {- Arity: 7, Strictness: <S,U><S,U><S,U><L,U><S,1*U><S,1*U><L,U> -}
1f3da69f378c0b98c3558efbde1909bd
  $fPersistEntityCliente_$sfromList ::
    [(Data.Text.Internal.Text, a)]
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Data.Text.Internal.Text, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                           Data.Map.Internal.Bin
                             @ Data.Text.Internal.Text
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a)
                             (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case ky of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild4 {
                             DEFAULT
                             -> Foundation.$fPersistEntityCliente_$spoly_go14
                                  @ a
                                  ww5
                                  ww6
                                  ww7
                                  ds3
                                  ipv1
                                  (Data.Map.Internal.Bin
                                     @ Data.Text.Internal.Text
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a)
                                     (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a))
                             GHC.Types.LT
                             -> Foundation.$fPersistEntityCliente_$s$wpoly_go13
                                  @ a
                                  ww5
                                  ww6
                                  ww7
                                  ds3
                                  ipv1
                                  (Data.Map.Internal.Bin
                                     @ Data.Text.Internal.Text
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a)
                                     (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a))
                                  1# } } } } } } }) -}
55ba240318a8b7b5d854804ce8c32fa0
  $fPersistEntityCliente_$spoly_go14 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a
    -> [(Data.Text.Internal.Text, a)]
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
  {- Arity: 6, Strictness: <S,U><S,U><S,U><L,U><S,1*U><S,1*U> -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistEntityItemPedido ::
    Database.Persist.Class.PersistEntity.PersistEntity
      Foundation.ItemPedido
  DFunId
  {- Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.ItemPedido
                  Foundation.$fPersistFieldKey
                  Foundation.$fToJSONKey
                  Foundation.$fFromJSONKey
                  Foundation.$fShowKey
                  Foundation.$fReadKey
                  Foundation.$fEqKey
                  Foundation.$fOrdKey
                  Foundation.$fPersistEntityItemPedido_$ckeyToValues
                  Foundation.$fPersistEntityItemPedido_$ckeyFromValues
                  Foundation.$fPersistEntityItemPedido31
                    `cast`
                  (Sym (Foundation.D:R:EntityFieldItemPedidotyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                        Foundation.ItemPedido>_N)
                  Foundation.$fPersistEntityItemPedido_$centityDef
                  Foundation.$fPersistEntityItemPedido_$cpersistFieldDef
                  Foundation.$fPersistEntityItemPedido_$ctoPersistFields
                  Foundation.$fPersistEntityItemPedido_$cfromPersistValues
                  Foundation.$fPersistEntityItemPedido_$cpersistUniqueKeys
                  Foundation.$fPersistEntityItemPedido_$cpersistUniqueToFieldNames
                  Foundation.$fPersistEntityItemPedido_$cpersistUniqueToValues
                  Foundation.$fPersistEntityItemPedido_$cfieldLens -}
ad640fabfa8507aea8e4fea261caa185
  $fPersistEntityItemPedido1 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityItemPedido5 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityItemPedido2
                   Database.Persist.Types.Base.SqlReal
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
5afcc0d88d02e5e776e40e05ff370d50
  $fPersistEntityItemPedido10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ProdutoId"#) -}
403f0a83ffac68c019cff2c46689b99e
  $fPersistEntityItemPedido11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Produto"#) -}
a47cd1f550eaf8ada69d1a5031bb659c
  $fPersistEntityItemPedido12 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityItemPedido13) -}
3c5b374a7b87d419a775f1d25a062209
  $fPersistEntityItemPedido13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("produtoid"#) -}
86c825b59c45d7dc14594cf70c56c7d5
  $fPersistEntityItemPedido14 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityItemPedido19 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityItemPedido18 of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityItemPedido15
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt1 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente17) } }) -}
886d417cfae11a6ee01506d326eefc4c
  $fPersistEntityItemPedido15 ::
    Database.Persist.Types.Base.FieldType
  {- Strictness: m1,
     Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Foundation.$fPersistEntityItemPedido16) -}
f068e7ad94b874fd03e82cbf36571705
  $fPersistEntityItemPedido16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityItemPedido17) -}
150dd52aa1f688b2834067ebbfce1efb
  $fPersistEntityItemPedido17 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PedidoId"#) -}
2c016439bd346daf0e62ec82aac50379
  $fPersistEntityItemPedido18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Pedido"#) -}
af75530fe533d765aff778e28a578ca3
  $fPersistEntityItemPedido19 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityItemPedido20) -}
4571077ff90c05035cace00e752ec3eb
  $fPersistEntityItemPedido2 :: Database.Persist.Types.Base.FieldType
  {- Strictness: m1,
     Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Foundation.$fPersistEntityItemPedido3) -}
462ddedfd11c7f811f0aadaa481e4136
  $fPersistEntityItemPedido20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pedidoid"#) -}
9ddd61d58c56289f2429c8597e381efe
  $fPersistEntityItemPedido21 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente28 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente27 of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityItemPedido25 of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityItemPedido22
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente17) } } }) -}
7a48845704fcdaceb17a41179dadf33b
  $fPersistEntityItemPedido22 ::
    Database.Persist.Types.Base.FieldType
  {- Strictness: m1,
     Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Foundation.$fPersistEntityItemPedido23) -}
30af0b5449839566e9696294103128db
  $fPersistEntityItemPedido23 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityItemPedido24) -}
427da1e62a86c36e6f82c97f64065448
  $fPersistEntityItemPedido24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ItemPedidoId"#) -}
9cff60c5053ba428ea50186929826580
  $fPersistEntityItemPedido25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ItemPedido"#) -}
720aa4bba6aa3da443d7d7c8439a8aee
  $fPersistEntityItemPedido26 ::
    Database.Persist.Types.Base.EntityDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityItemPedido25 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityItemPedido30 of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente28 of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente27 of nt3 { Data.Text.Internal.Text ipv9 ipv10 ipv11 ->
                 case Foundation.$fPersistEntityCliente_$sfromList
                        @ [Database.Persist.Types.Base.ExtraLine]
                        (GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              [Database.Persist.Types.Base.ExtraLine])) of dt { DEFAULT ->
                 Database.Persist.Types.Base.EntityDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   (Database.Persist.Types.Base.FieldDef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      nt3 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                      Foundation.$fPersistEntityItemPedido22
                      Database.Persist.Types.Base.SqlInt64
                      (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                      GHC.Types.True
                      (Database.Persist.Types.Base.ForeignRef
                         nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                         Foundation.$fPersistEntityCliente17))
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   Foundation.$fPersistEntityItemPedido27
                   (GHC.Types.[] @ Database.Persist.Types.Base.UniqueDef)
                   (GHC.Types.[] @ Database.Persist.Types.Base.ForeignDef)
                   (GHC.Types.[] @ Data.Text.Internal.Text)
                   dt
                   GHC.Types.False } } } } }) -}
2d4258ec8854f80225e98e0e9f56e434
  $fPersistEntityItemPedido27 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityItemPedido14
                   Foundation.$fPersistEntityItemPedido28) -}
fa3f8957d0cd0f66feb255e5542e1a79
  $fPersistEntityItemPedido28 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityItemPedido7
                   Foundation.$fPersistEntityItemPedido29) -}
0a87b16dc6e57cc36e9ec578605ea301
  $fPersistEntityItemPedido29 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityItemPedido1
                   (GHC.Types.[] @ Database.Persist.Types.Base.FieldDef)) -}
fe3062220ba255ba33b99f2c779ca132
  $fPersistEntityItemPedido3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityItemPedido4) -}
dd2f418147b26fde098adee8afef114b
  $fPersistEntityItemPedido30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("item_pedido"#) -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistEntityItemPedido31 ::
    Foundation.R:EntityFieldItemPedidotyp
      (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Foundation.ItemPedidoId
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                   Foundation.$fPersistEntityItemPedido_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Database.Persist.Class.PersistEntity.Key
                                       Foundation.ItemPedido>_N <Database.Persist.Class.PersistEntity.Key
                                                                   Foundation.ItemPedido>_N)) -}
f4a5c43d713d9fefcc89d81fcf9f8cc9
  $fPersistEntityItemPedido4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Double"#) -}
af9c1544da59448e0b6a407f5a8767c8
  $fPersistEntityItemPedido5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityItemPedido6) -}
ddc0fb00227634cfc63ea497ca3d489b
  $fPersistEntityItemPedido6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("vlunit"#) -}
434ae54b390c500cacc039b48ad7338d
  $fPersistEntityItemPedido7 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityItemPedido12 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityItemPedido11 of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityItemPedido8
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt1 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente17) } }) -}
83b91750e72bd34bb7482b55dc40d507
  $fPersistEntityItemPedido8 :: Database.Persist.Types.Base.FieldType
  {- Strictness: m1,
     Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Foundation.$fPersistEntityItemPedido9) -}
a6c7b5cf95e29944788796ce1ab5e34f
  $fPersistEntityItemPedido9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityItemPedido10) -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistEntityItemPedido_$centityDef ::
    GHC.Base.Monad m =>
    m Foundation.ItemPedido -> Database.Persist.Types.Base.EntityDef
  {- Arity: 2, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ m :: * -> *
                   ($dMonad :: GHC.Base.Monad m)
                   (ds :: m Foundation.ItemPedido) ->
                 Foundation.$fPersistEntityItemPedido26) -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistEntityItemPedido_$cfieldLens ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.ItemPedido field
    -> forall (f :: * -> *).
       GHC.Base.Functor f =>
       (field -> f field)
       -> Database.Persist.Class.PersistEntity.Entity
            Foundation.ItemPedido
       -> f (Database.Persist.Class.PersistEntity.Entity
               Foundation.ItemPedido)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U(U,U,U))>,
     Unfolding: (\ @ field
                   (dk :: Database.Persist.Class.PersistEntity.EntityField
                            Foundation.ItemPedido field)
                   @ f :: * -> *
                   ($dFunctor :: GHC.Base.Functor f)
                   (eta :: field -> f field)
                   (eta1 :: Database.Persist.Class.PersistEntity.Entity
                              Foundation.ItemPedido) ->
                 case dk
                        `cast`
                      (Foundation.D:R:EntityFieldItemPedidotyp0[0] <field>_N) of wild {
                   Foundation.ItemPedidoId $d~
                   -> case GHC.Types.HEq_sc
                             @ *
                             @ *
                             @ field
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <*>_N <field>_N <Database.Persist.Class.PersistEntity.Key
                                                     Foundation.ItemPedido>_N) of co { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.ItemPedido)
                        (\ (key :: Database.Persist.Class.PersistEntity.Key
                                     Foundation.ItemPedido) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity ds value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ Foundation.ItemPedido
                           key
                           value })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity ds3 ds4 ->
                            ds3 `cast` (Sub (Sym co)) }))
                          `cast`
                        (<f>_R co) }
                   Foundation.ItemPedidoPedidoid $d~
                   -> case GHC.Types.HEq_sc
                             @ *
                             @ *
                             @ field
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <*>_N <field>_N <Database.Persist.Class.PersistEntity.Key
                                                     Foundation.Pedido>_N) of co { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.ItemPedido)
                        (\ (x :: Database.Persist.Class.PersistEntity.Key
                                   Foundation.Pedido) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity key value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ Foundation.ItemPedido
                           key
                           (case value of wild2 { Foundation.ItemPedido dt dt1 dt2 ->
                            case x `cast`
                                 (Foundation.D:R:KeyPedido0[0] ; (Foundation.N:R:KeyPedido[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))) of dt3 { GHC.Int.I64# dt4 ->
                            Foundation.ItemPedido dt4 dt1 dt2 } }) })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity ds3 ds4 ->
                            case ds4 of wild2 { Foundation.ItemPedido dt dt1 dt2 ->
                            (GHC.Int.I64# dt)
                              `cast`
                            (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; (Sym (Foundation.D:R:KeyPedido0[0]) ; Sub (Sym co))))) } }))
                          `cast`
                        (<f>_R co) }
                   Foundation.ItemPedidoProdutoid $d~
                   -> case GHC.Types.HEq_sc
                             @ *
                             @ *
                             @ field
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <*>_N <field>_N <Database.Persist.Class.PersistEntity.Key
                                                     Foundation.Produto>_N) of co { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.ItemPedido)
                        (\ (x :: Database.Persist.Class.PersistEntity.Key
                                   Foundation.Produto) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity key value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ Foundation.ItemPedido
                           key
                           (case value of wild2 { Foundation.ItemPedido dt dt1 dt2 ->
                            case x `cast`
                                 (Foundation.D:R:KeyProduto0[0] ; (Foundation.N:R:KeyProduto[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))) of dt3 { GHC.Int.I64# dt4 ->
                            Foundation.ItemPedido dt dt4 dt2 } }) })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity ds3 ds4 ->
                            case ds4 of wild2 { Foundation.ItemPedido dt dt1 dt2 ->
                            (GHC.Int.I64# dt1)
                              `cast`
                            (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; (Sym (Foundation.D:R:KeyProduto0[0]) ; Sub (Sym co))))) } }))
                          `cast`
                        (<f>_R co) }
                   Foundation.ItemPedidoVlunit $d~
                   -> case GHC.Types.HEq_sc
                             @ *
                             @ *
                             @ field
                             @ GHC.Types.Double
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <*>_N <field>_N <GHC.Types.Double>_N) of co { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ GHC.Types.Double
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.ItemPedido)
                        (\ (x :: GHC.Types.Double) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity key value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ Foundation.ItemPedido
                           key
                           (case value of wild2 { Foundation.ItemPedido dt dt1 dt2 ->
                            case x of dt3 { GHC.Types.D# dt4 ->
                            Foundation.ItemPedido dt dt1 dt4 } }) })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity ds3 ds4 ->
                            case ds4 of wild2 { Foundation.ItemPedido dt dt1 dt2 ->
                            (GHC.Types.D# dt2) `cast` (Sub (Sym co)) } }))
                          `cast`
                        (<f>_R co) } }) -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistEntityItemPedido_$cfromPersistValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either Data.Text.Internal.Text Foundation.ItemPedido
  {- Arity: 1, Strictness: <S,U> -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistEntityItemPedido_$ckeyFromValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Database.Persist.Types.Base.PersistValue]) ->
                 case (Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                         (Database.Persist.TH.headNote x))
                        `cast`
                      (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])))_R of wild {
                   Data.Either.Left x1
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                        x1
                   Data.Either.Right y
                   -> Data.Either.Right
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                        y `cast`
                        (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0])) }) -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistEntityItemPedido_$ckeyToValues ::
    Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.ItemPedido) ->
                 GHC.Types.:
                   @ Database.Persist.Types.Base.PersistValue
                   (Database.Persist.Types.Base.PersistInt64
                      x `cast`
                      (Foundation.D:R:KeyItemPedido0[0] ; (Foundation.N:R:KeyItemPedido[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                   (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)) -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistEntityItemPedido_$cpersistFieldDef ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.ItemPedido typ
    -> Database.Persist.Types.Base.FieldDef
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ typ
                   (ds :: Database.Persist.Class.PersistEntity.EntityField
                            Foundation.ItemPedido typ) ->
                 case ds
                        `cast`
                      (Foundation.D:R:EntityFieldItemPedidotyp0[0] <typ>_N) of wild {
                   Foundation.ItemPedidoId $d~
                   -> Foundation.$fPersistEntityItemPedido21
                   Foundation.ItemPedidoPedidoid $d~
                   -> Foundation.$fPersistEntityItemPedido14
                   Foundation.ItemPedidoProdutoid $d~
                   -> Foundation.$fPersistEntityItemPedido7
                   Foundation.ItemPedidoVlunit $d~
                   -> Foundation.$fPersistEntityItemPedido1 }) -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistEntityItemPedido_$cpersistUniqueKeys ::
    Foundation.ItemPedido
    -> [Database.Persist.Class.PersistEntity.Unique
          Foundation.ItemPedido]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.ItemPedido) ->
                 case ds of wild { Foundation.ItemPedido dt dt1 dt2 ->
                 GHC.Types.[]
                   @ (Database.Persist.Class.PersistEntity.Unique
                        Foundation.ItemPedido) }) -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistEntityItemPedido_$cpersistUniqueToFieldNames ::
    Database.Persist.Class.PersistEntity.Unique Foundation.ItemPedido
    -> [(Database.Persist.Types.Base.HaskellName,
         Database.Persist.Types.Base.DBName)]
  {- Arity: 1, Strictness: <B,A>x, Inline: [0],
     Unfolding: InlineRule (1, True, True)
                (\ (w :: Database.Persist.Class.PersistEntity.Unique
                           Foundation.ItemPedido) ->
                 Foundation.$w$cpersistUniqueToFieldNames GHC.Prim.void#) -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistEntityItemPedido_$cpersistUniqueToValues ::
    Database.Persist.Class.PersistEntity.Unique Foundation.ItemPedido
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, Strictness: <B,A>x, Inline: [0],
     Unfolding: InlineRule (1, True, True)
                (\ (w :: Database.Persist.Class.PersistEntity.Unique
                           Foundation.ItemPedido) ->
                 Foundation.$w$cpersistUniqueToValues GHC.Prim.void#) -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistEntityItemPedido_$ctoPersistFields ::
    Foundation.ItemPedido
    -> [Database.Persist.Class.PersistField.SomePersistField]
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>m2, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Foundation.ItemPedido) ->
                 case w of ww { Foundation.ItemPedido ww1 ww2 ww3 ->
                 GHC.Types.:
                   @ Database.Persist.Class.PersistField.SomePersistField
                   (Database.Persist.Class.PersistField.SomePersistField
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                      Foundation.$fPersistFieldKey2
                      (GHC.Int.I64# ww1)
                        `cast`
                      (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0])))))
                   (GHC.Types.:
                      @ Database.Persist.Class.PersistField.SomePersistField
                      (Database.Persist.Class.PersistField.SomePersistField
                         @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                         Foundation.$fPersistFieldKey0
                         (GHC.Int.I64# ww2)
                           `cast`
                         (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0])))))
                      (GHC.Types.:
                         @ Database.Persist.Class.PersistField.SomePersistField
                         (Database.Persist.Class.PersistField.SomePersistField
                            @ GHC.Types.Double
                            Database.Persist.Class.PersistField.$fPersistFieldDouble
                            (GHC.Types.D# ww3))
                         (GHC.Types.[]
                            @ Database.Persist.Class.PersistField.SomePersistField))) }) -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistEntityItemPedido_$d~~ ::
    (Database.Persist.Class.PersistEntity.Key
       Foundation.ItemPedido :: *)
    GHC.Types.~~ (Database.Persist.Class.PersistEntity.Key
                    Foundation.ItemPedido :: *)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                   @~ <Database.Persist.Class.PersistEntity.Key
                         Foundation.ItemPedido>_N) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistEntityPedido ::
    Database.Persist.Class.PersistEntity.PersistEntity
      Foundation.Pedido
  DFunId
  {- Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Pedido
                  Foundation.$fPersistFieldKey2
                  Foundation.$fToJSONKey2
                  Foundation.$fFromJSONKey2
                  Foundation.$fShowKey2
                  Foundation.$fReadKey2
                  Foundation.$fEqKey2
                  Foundation.$fOrdKey2
                  Foundation.$fPersistEntityPedido_$ckeyToValues
                  Foundation.$fPersistEntityPedido_$ckeyFromValues
                  Foundation.$fPersistEntityPedido23
                    `cast`
                  (Sym (Foundation.D:R:EntityFieldPedidotyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                    Foundation.Pedido>_N)
                  Foundation.$fPersistEntityPedido_$centityDef
                  Foundation.$fPersistEntityPedido_$cpersistFieldDef
                  Foundation.$fPersistEntityPedido_$ctoPersistFields
                  Foundation.$fPersistEntityPedido_$cfromPersistValues
                  Foundation.$fPersistEntityPedido_$cpersistUniqueKeys
                  Foundation.$fPersistEntityPedido_$cpersistUniqueToFieldNames
                  Foundation.$fPersistEntityPedido_$cpersistUniqueToValues
                  Foundation.$fPersistEntityPedido_$cfieldLens -}
46847a6187e7527ca68e51b847aaf063
  $fPersistEntityPedido1 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityPedido5 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityPedido2
                   Database.Persist.Types.Base.SqlBool
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
f000397a326b03667913c6eb12c5b41b
  $fPersistEntityPedido10 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityPedido11 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityItemPedido2
                   Database.Persist.Types.Base.SqlReal
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
1e946e73a8542b570578359ffb356097
  $fPersistEntityPedido11 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityPedido12) -}
3a1f26444d20877a34257902860ad01e
  $fPersistEntityPedido12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("vltot"#) -}
607ce106a0f44c34873b5e479a6dc556
  $fPersistEntityPedido13 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityPedido14 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente26 of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente23
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt1 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente17) } }) -}
84deff0d9970aed9f32284a15206341c
  $fPersistEntityPedido14 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityPedido15) -}
91c9f5906f3da24a02960b25bb5ecd52
  $fPersistEntityPedido15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("clienteid"#) -}
297db37d95c2fe79adca85337e9e937e
  $fPersistEntityPedido16 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente28 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente27 of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityItemPedido18 of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityItemPedido15
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente17) } } }) -}
ef1bf75176ab76854aee024f1f5616bd
  $fPersistEntityPedido17 :: Database.Persist.Types.Base.EntityDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityItemPedido18 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityPedido22 of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente28 of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente27 of nt3 { Data.Text.Internal.Text ipv9 ipv10 ipv11 ->
                 case Foundation.$fPersistEntityCliente_$sfromList
                        @ [Database.Persist.Types.Base.ExtraLine]
                        (GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              [Database.Persist.Types.Base.ExtraLine])) of dt { DEFAULT ->
                 Database.Persist.Types.Base.EntityDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   (Database.Persist.Types.Base.FieldDef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      nt3 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                      Foundation.$fPersistEntityItemPedido15
                      Database.Persist.Types.Base.SqlInt64
                      (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                      GHC.Types.True
                      (Database.Persist.Types.Base.ForeignRef
                         nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                         Foundation.$fPersistEntityCliente17))
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   Foundation.$fPersistEntityPedido18
                   (GHC.Types.[] @ Database.Persist.Types.Base.UniqueDef)
                   (GHC.Types.[] @ Database.Persist.Types.Base.ForeignDef)
                   (GHC.Types.[] @ Data.Text.Internal.Text)
                   dt
                   GHC.Types.False } } } } }) -}
9e061ec24ddd0eb5ebcf2fce09e2811c
  $fPersistEntityPedido18 :: [Database.Persist.Types.Base.FieldDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityPedido13
                   Foundation.$fPersistEntityPedido19) -}
38c7ca234a67c522f46e125a74e79dfc
  $fPersistEntityPedido19 :: [Database.Persist.Types.Base.FieldDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityPedido10
                   Foundation.$fPersistEntityPedido20) -}
ab1e844df0a0ff007d16c639e6cc4b4e
  $fPersistEntityPedido2 :: Database.Persist.Types.Base.FieldType
  {- Strictness: m1,
     Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Foundation.$fPersistEntityPedido3) -}
90d6afc209fabbf8844021f0843fde8d
  $fPersistEntityPedido20 :: [Database.Persist.Types.Base.FieldDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityPedido7
                   Foundation.$fPersistEntityPedido21) -}
94a4574f242c2cfe6e9d9606ca51dfa3
  $fPersistEntityPedido21 :: [Database.Persist.Types.Base.FieldDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityPedido1
                   (GHC.Types.[] @ Database.Persist.Types.Base.FieldDef)) -}
c4b2ce9006fa05a9ced2d3ffbe7fb44d
  $fPersistEntityPedido22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pedido"#) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistEntityPedido23 ::
    Foundation.R:EntityFieldPedidotyp
      (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Foundation.PedidoId
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                   Foundation.$fPersistEntityPedido_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Database.Persist.Class.PersistEntity.Key
                                       Foundation.Pedido>_N <Database.Persist.Class.PersistEntity.Key
                                                               Foundation.Pedido>_N)) -}
766b122bd2ba194dd6f17594f1b5afbc
  $fPersistEntityPedido3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityPedido4) -}
5a5b41c188321ca1cf7a4048908b82a4
  $fPersistEntityPedido4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Bool"#) -}
c3c64e96064c657884caefa9b4a76621
  $fPersistEntityPedido5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityPedido6) -}
9b5ac043d3531cabcee7139f8abc8269
  $fPersistEntityPedido6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("finalizado"#) -}
9f5313df24b617671983b32a029b6e77
  $fPersistEntityPedido7 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityPedido8 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityItemPedido2
                   Database.Persist.Types.Base.SqlReal
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
e5816b3fca6e507166eca642cd92907d
  $fPersistEntityPedido8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityPedido9) -}
ea4d710dfd26c7f801416df04753491e
  $fPersistEntityPedido9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("hrpedido"#) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistEntityPedido_$centityDef ::
    GHC.Base.Monad m =>
    m Foundation.Pedido -> Database.Persist.Types.Base.EntityDef
  {- Arity: 2, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ m :: * -> *
                   ($dMonad :: GHC.Base.Monad m)
                   (ds :: m Foundation.Pedido) ->
                 Foundation.$fPersistEntityPedido17) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistEntityPedido_$cfieldLens ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Pedido field
    -> forall (f :: * -> *).
       GHC.Base.Functor f =>
       (field -> f field)
       -> Database.Persist.Class.PersistEntity.Entity Foundation.Pedido
       -> f (Database.Persist.Class.PersistEntity.Entity
               Foundation.Pedido)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U(U,U,U,U))> -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistEntityPedido_$cfromPersistValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either Data.Text.Internal.Text Foundation.Pedido
  {- Arity: 1, Strictness: <S,U> -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistEntityPedido_$ckeyFromValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Database.Persist.Types.Base.PersistValue]) ->
                 case (Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                         (Database.Persist.TH.headNote x))
                        `cast`
                      (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])))_R of wild {
                   Data.Either.Left x1
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                        x1
                   Data.Either.Right y
                   -> Data.Either.Right
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                        y `cast`
                        (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0])) }) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistEntityPedido_$ckeyToValues ::
    Database.Persist.Class.PersistEntity.Key Foundation.Pedido
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Pedido) ->
                 GHC.Types.:
                   @ Database.Persist.Types.Base.PersistValue
                   (Database.Persist.Types.Base.PersistInt64
                      x `cast`
                      (Foundation.D:R:KeyPedido0[0] ; (Foundation.N:R:KeyPedido[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                   (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistEntityPedido_$cpersistFieldDef ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Pedido typ
    -> Database.Persist.Types.Base.FieldDef
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ typ
                   (ds :: Database.Persist.Class.PersistEntity.EntityField
                            Foundation.Pedido typ) ->
                 case ds
                        `cast`
                      (Foundation.D:R:EntityFieldPedidotyp0[0] <typ>_N) of wild {
                   Foundation.PedidoId $d~ -> Foundation.$fPersistEntityPedido16
                   Foundation.PedidoClienteid $d~
                   -> Foundation.$fPersistEntityPedido13
                   Foundation.PedidoVltot $d~ -> Foundation.$fPersistEntityPedido10
                   Foundation.PedidoHrpedido $d~ -> Foundation.$fPersistEntityPedido7
                   Foundation.PedidoFinalizado $d~
                   -> Foundation.$fPersistEntityPedido1 }) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistEntityPedido_$cpersistUniqueKeys ::
    Foundation.Pedido
    -> [Database.Persist.Class.PersistEntity.Unique Foundation.Pedido]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Pedido) ->
                 case ds of wild { Foundation.Pedido dt dt1 dt2 _finalizado ->
                 GHC.Types.[]
                   @ (Database.Persist.Class.PersistEntity.Unique
                        Foundation.Pedido) }) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistEntityPedido_$cpersistUniqueToFieldNames ::
    Database.Persist.Class.PersistEntity.Unique Foundation.Pedido
    -> [(Database.Persist.Types.Base.HaskellName,
         Database.Persist.Types.Base.DBName)]
  {- Arity: 1, Strictness: <B,A>x, Inline: [0],
     Unfolding: InlineRule (1, True, True)
                (\ (w :: Database.Persist.Class.PersistEntity.Unique
                           Foundation.Pedido) ->
                 Foundation.$w$cpersistUniqueToFieldNames GHC.Prim.void#) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistEntityPedido_$cpersistUniqueToValues ::
    Database.Persist.Class.PersistEntity.Unique Foundation.Pedido
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, Strictness: <B,A>x, Inline: [0],
     Unfolding: InlineRule (1, True, True)
                (\ (w :: Database.Persist.Class.PersistEntity.Unique
                           Foundation.Pedido) ->
                 Foundation.$w$cpersistUniqueToValues GHC.Prim.void#) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistEntityPedido_$ctoPersistFields ::
    Foundation.Pedido
    -> [Database.Persist.Class.PersistField.SomePersistField]
  {- Arity: 1, Strictness: <S(LLLS),1*U(U,U,U,U)>m2, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Foundation.Pedido) ->
                 case w of ww { Foundation.Pedido ww1 ww2 ww3 ww4 ->
                 GHC.Types.:
                   @ Database.Persist.Class.PersistField.SomePersistField
                   (Database.Persist.Class.PersistField.SomePersistField
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                      Foundation.$fPersistFieldKey3
                      (GHC.Int.I64# ww1)
                        `cast`
                      (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0])))))
                   (GHC.Types.:
                      @ Database.Persist.Class.PersistField.SomePersistField
                      (Database.Persist.Class.PersistField.SomePersistField
                         @ GHC.Types.Double
                         Database.Persist.Class.PersistField.$fPersistFieldDouble
                         (GHC.Types.D# ww2))
                      (GHC.Types.:
                         @ Database.Persist.Class.PersistField.SomePersistField
                         (Database.Persist.Class.PersistField.SomePersistField
                            @ GHC.Types.Double
                            Database.Persist.Class.PersistField.$fPersistFieldDouble
                            (GHC.Types.D# ww3))
                         (GHC.Types.:
                            @ Database.Persist.Class.PersistField.SomePersistField
                            (Database.Persist.Class.PersistField.SomePersistField
                               @ GHC.Types.Bool
                               Database.Persist.Class.PersistField.$fPersistFieldBool
                               ww4)
                            (GHC.Types.[]
                               @ Database.Persist.Class.PersistField.SomePersistField)))) }) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistEntityPedido_$d~~ ::
    (Database.Persist.Class.PersistEntity.Key Foundation.Pedido :: *)
    GHC.Types.~~ (Database.Persist.Class.PersistEntity.Key
                    Foundation.Pedido :: *)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                   @~ <Database.Persist.Class.PersistEntity.Key
                         Foundation.Pedido>_N) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistEntityProduto ::
    Database.Persist.Class.PersistEntity.PersistEntity
      Foundation.Produto
  DFunId
  {- Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Produto
                  Foundation.$fPersistFieldKey0
                  Foundation.$fToJSONKey0
                  Foundation.$fFromJSONKey0
                  Foundation.$fShowKey0
                  Foundation.$fReadKey0
                  Foundation.$fEqKey0
                  Foundation.$fOrdKey0
                  Foundation.$fPersistEntityProduto_$ckeyToValues
                  Foundation.$fPersistEntityProduto_$ckeyFromValues
                  Foundation.$fPersistEntityProduto17
                    `cast`
                  (Sym (Foundation.D:R:EntityFieldProdutotyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                     Foundation.Produto>_N)
                  Foundation.$fPersistEntityProduto_$centityDef
                  Foundation.$fPersistEntityProduto_$cpersistFieldDef
                  Foundation.$fPersistEntityProduto_$ctoPersistFields
                  Foundation.$fPersistEntityProduto_$cfromPersistValues
                  Foundation.$fPersistEntityProduto_$cpersistUniqueKeys
                  Foundation.$fPersistEntityProduto_$cpersistUniqueToFieldNames
                  Foundation.$fPersistEntityProduto_$cpersistUniqueToValues
                  Foundation.$fPersistEntityProduto_$cfieldLens -}
80df00173262f5196634f578a9cdcfc0
  $fPersistEntityProduto1 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityProduto6 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityProduto5 of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityProduto2
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt1 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente17) } }) -}
6d8b607c18eb0ea6e2289da5d97e1d00
  $fPersistEntityProduto10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("valor"#) -}
fad7113a87a481076abc465580a1050e
  $fPersistEntityProduto11 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente28 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente27 of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityItemPedido11 of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityItemPedido8
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente17) } } }) -}
39127f2e3d18cd3f81d9184666daa5c7
  $fPersistEntityProduto12 :: Database.Persist.Types.Base.EntityDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityItemPedido11 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityProduto16 of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente28 of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente27 of nt3 { Data.Text.Internal.Text ipv9 ipv10 ipv11 ->
                 case Foundation.$fPersistEntityCliente_$sfromList
                        @ [Database.Persist.Types.Base.ExtraLine]
                        (GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              [Database.Persist.Types.Base.ExtraLine])) of dt { DEFAULT ->
                 Database.Persist.Types.Base.EntityDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   (Database.Persist.Types.Base.FieldDef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      nt3 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                      Foundation.$fPersistEntityItemPedido8
                      Database.Persist.Types.Base.SqlInt64
                      (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                      GHC.Types.True
                      (Database.Persist.Types.Base.ForeignRef
                         nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                         Foundation.$fPersistEntityCliente17))
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   Foundation.$fPersistEntityProduto13
                   (GHC.Types.[] @ Database.Persist.Types.Base.UniqueDef)
                   (GHC.Types.[] @ Database.Persist.Types.Base.ForeignDef)
                   (GHC.Types.[] @ Data.Text.Internal.Text)
                   dt
                   GHC.Types.False } } } } }) -}
16730b91eb191d53ea8b76e169059e07
  $fPersistEntityProduto13 :: [Database.Persist.Types.Base.FieldDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityCliente13
                   Foundation.$fPersistEntityProduto14) -}
05c64cba5bb8684234c3dc171fb277fa
  $fPersistEntityProduto14 :: [Database.Persist.Types.Base.FieldDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityProduto8
                   Foundation.$fPersistEntityProduto15) -}
53a1ec3c7f69b321e255d02b94bf74dc
  $fPersistEntityProduto15 :: [Database.Persist.Types.Base.FieldDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityProduto1
                   (GHC.Types.[] @ Database.Persist.Types.Base.FieldDef)) -}
cafd79d5d246ff907cbef555b8cfa7e6
  $fPersistEntityProduto16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("produto"#) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistEntityProduto17 ::
    Foundation.R:EntityFieldProdutotyp
      (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Foundation.ProdutoId
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                   Foundation.$fPersistEntityProduto_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Database.Persist.Class.PersistEntity.Key
                                       Foundation.Produto>_N <Database.Persist.Class.PersistEntity.Key
                                                                Foundation.Produto>_N)) -}
e58915478a94022b5f1d914ee87e111c
  $fPersistEntityProduto2 :: Database.Persist.Types.Base.FieldType
  {- Strictness: m1,
     Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Foundation.$fPersistEntityProduto3) -}
38605d2f2b6fc1b1f9a28439f02d7077
  $fPersistEntityProduto3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityProduto4) -}
da21bdb2d14126e251ee49bf245fdb5b
  $fPersistEntityProduto4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TipoProdutoId"#) -}
2eb91aa6ece74775b961e020802953ae
  $fPersistEntityProduto5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TipoProduto"#) -}
368328287182d2c3a7c4ff0cb0453f9f
  $fPersistEntityProduto6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityProduto7) -}
d8e5351b84fd7e54bc96aedaadc20de9
  $fPersistEntityProduto7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("tipoprodutoid"#) -}
133f503e1a0ada5df0e45954eaf98ac7
  $fPersistEntityProduto8 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityProduto9 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityItemPedido2
                   Database.Persist.Types.Base.SqlReal
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
0d145987b82dcccbba26333c46708407
  $fPersistEntityProduto9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityProduto10) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistEntityProduto_$centityDef ::
    GHC.Base.Monad m =>
    m Foundation.Produto -> Database.Persist.Types.Base.EntityDef
  {- Arity: 2, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ m :: * -> *
                   ($dMonad :: GHC.Base.Monad m)
                   (ds :: m Foundation.Produto) ->
                 Foundation.$fPersistEntityProduto12) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistEntityProduto_$cfieldLens ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Produto field
    -> forall (f :: * -> *).
       GHC.Base.Functor f =>
       (field -> f field)
       -> Database.Persist.Class.PersistEntity.Entity Foundation.Produto
       -> f (Database.Persist.Class.PersistEntity.Entity
               Foundation.Produto)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U(U,U,U))>,
     Unfolding: (\ @ field
                   (dk :: Database.Persist.Class.PersistEntity.EntityField
                            Foundation.Produto field)
                   @ f :: * -> *
                   ($dFunctor :: GHC.Base.Functor f)
                   (eta :: field -> f field)
                   (eta1 :: Database.Persist.Class.PersistEntity.Entity
                              Foundation.Produto) ->
                 case dk
                        `cast`
                      (Foundation.D:R:EntityFieldProdutotyp0[0] <field>_N) of wild {
                   Foundation.ProdutoId $d~
                   -> case GHC.Types.HEq_sc
                             @ *
                             @ *
                             @ field
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <*>_N <field>_N <Database.Persist.Class.PersistEntity.Key
                                                     Foundation.Produto>_N) of co { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                        @ (Database.Persist.Class.PersistEntity.Entity Foundation.Produto)
                        (\ (key :: Database.Persist.Class.PersistEntity.Key
                                     Foundation.Produto) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity ds value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ Foundation.Produto
                           key
                           value })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity ds3 ds4 ->
                            ds3 `cast` (Sub (Sym co)) }))
                          `cast`
                        (<f>_R co) }
                   Foundation.ProdutoNome $d~
                   -> case GHC.Types.HEq_sc
                             @ *
                             @ *
                             @ field
                             @ Data.Text.Internal.Text
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <*>_N <field>_N <Data.Text.Internal.Text>_N) of co { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Entity Foundation.Produto)
                        (\ (x :: Data.Text.Internal.Text) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity key value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ Foundation.Produto
                           key
                           (case value of wild2 { Foundation.Produto ds dt dt1 ->
                            case x of dt2 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                            Foundation.Produto dt2 dt dt1 } }) })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity ds3 ds4 ->
                            case ds4 of wild2 { Foundation.Produto ds dt dt1 ->
                            ds `cast` (Sub (Sym co)) } }))
                          `cast`
                        (<f>_R co) }
                   Foundation.ProdutoValor $d~
                   -> case GHC.Types.HEq_sc
                             @ *
                             @ *
                             @ field
                             @ GHC.Types.Double
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <*>_N <field>_N <GHC.Types.Double>_N) of co { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ GHC.Types.Double
                        @ (Database.Persist.Class.PersistEntity.Entity Foundation.Produto)
                        (\ (x :: GHC.Types.Double) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity key value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ Foundation.Produto
                           key
                           (case value of wild2 { Foundation.Produto ds dt dt1 ->
                            case x of dt2 { GHC.Types.D# dt3 ->
                            Foundation.Produto ds dt3 dt1 } }) })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity ds3 ds4 ->
                            case ds4 of wild2 { Foundation.Produto ds dt dt1 ->
                            (GHC.Types.D# dt) `cast` (Sub (Sym co)) } }))
                          `cast`
                        (<f>_R co) }
                   Foundation.ProdutoTipoprodutoid $d~
                   -> case GHC.Types.HEq_sc
                             @ *
                             @ *
                             @ field
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <*>_N <field>_N <Database.Persist.Class.PersistEntity.Key
                                                     Foundation.TipoProduto>_N) of co { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                        @ (Database.Persist.Class.PersistEntity.Entity Foundation.Produto)
                        (\ (x :: Database.Persist.Class.PersistEntity.Key
                                   Foundation.TipoProduto) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity key value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ Foundation.Produto
                           key
                           (case value of wild2 { Foundation.Produto ds dt dt1 ->
                            case x `cast`
                                 (Foundation.D:R:KeyTipoProduto0[0] ; (Foundation.N:R:KeyTipoProduto[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))) of dt2 { GHC.Int.I64# dt3 ->
                            Foundation.Produto ds dt dt3 } }) })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity ds3 ds4 ->
                            case ds4 of wild2 { Foundation.Produto ds dt dt1 ->
                            (GHC.Int.I64# dt1)
                              `cast`
                            (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; (Sym (Foundation.D:R:KeyTipoProduto0[0]) ; Sub (Sym co))))) } }))
                          `cast`
                        (<f>_R co) } }) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistEntityProduto_$cfromPersistValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either Data.Text.Internal.Text Foundation.Produto
  {- Arity: 1, Strictness: <S,U> -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistEntityProduto_$ckeyFromValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Database.Persist.Types.Base.PersistValue]) ->
                 case (Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                         (Database.Persist.TH.headNote x))
                        `cast`
                      (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])))_R of wild {
                   Data.Either.Left x1
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                        x1
                   Data.Either.Right y
                   -> Data.Either.Right
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                        y `cast`
                        (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0])) }) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistEntityProduto_$ckeyToValues ::
    Database.Persist.Class.PersistEntity.Key Foundation.Produto
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Produto) ->
                 GHC.Types.:
                   @ Database.Persist.Types.Base.PersistValue
                   (Database.Persist.Types.Base.PersistInt64
                      x `cast`
                      (Foundation.D:R:KeyProduto0[0] ; (Foundation.N:R:KeyProduto[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                   (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistEntityProduto_$cpersistFieldDef ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Produto typ
    -> Database.Persist.Types.Base.FieldDef
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ typ
                   (ds :: Database.Persist.Class.PersistEntity.EntityField
                            Foundation.Produto typ) ->
                 case ds
                        `cast`
                      (Foundation.D:R:EntityFieldProdutotyp0[0] <typ>_N) of wild {
                   Foundation.ProdutoId $d~ -> Foundation.$fPersistEntityProduto11
                   Foundation.ProdutoNome $d~ -> Foundation.$fPersistEntityCliente13
                   Foundation.ProdutoValor $d~ -> Foundation.$fPersistEntityProduto8
                   Foundation.ProdutoTipoprodutoid $d~
                   -> Foundation.$fPersistEntityProduto1 }) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistEntityProduto_$cpersistUniqueKeys ::
    Foundation.Produto
    -> [Database.Persist.Class.PersistEntity.Unique Foundation.Produto]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Produto) ->
                 case ds of wild { Foundation.Produto _nome dt dt1 ->
                 GHC.Types.[]
                   @ (Database.Persist.Class.PersistEntity.Unique
                        Foundation.Produto) }) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistEntityProduto_$cpersistUniqueToFieldNames ::
    Database.Persist.Class.PersistEntity.Unique Foundation.Produto
    -> [(Database.Persist.Types.Base.HaskellName,
         Database.Persist.Types.Base.DBName)]
  {- Arity: 1, Strictness: <B,A>x, Inline: [0],
     Unfolding: InlineRule (1, True, True)
                (\ (w :: Database.Persist.Class.PersistEntity.Unique
                           Foundation.Produto) ->
                 Foundation.$w$cpersistUniqueToFieldNames GHC.Prim.void#) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistEntityProduto_$cpersistUniqueToValues ::
    Database.Persist.Class.PersistEntity.Unique Foundation.Produto
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, Strictness: <B,A>x, Inline: [0],
     Unfolding: InlineRule (1, True, True)
                (\ (w :: Database.Persist.Class.PersistEntity.Unique
                           Foundation.Produto) ->
                 Foundation.$w$cpersistUniqueToValues GHC.Prim.void#) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistEntityProduto_$ctoPersistFields ::
    Foundation.Produto
    -> [Database.Persist.Class.PersistField.SomePersistField]
  {- Arity: 1, Strictness: <S(SLL),1*U(U,U,U)>m2, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Foundation.Produto) ->
                 case w of ww { Foundation.Produto ww1 ww2 ww3 ->
                 GHC.Types.:
                   @ Database.Persist.Class.PersistField.SomePersistField
                   (Database.Persist.Class.PersistField.SomePersistField
                      @ Data.Text.Internal.Text
                      Database.Persist.Class.PersistField.$fPersistFieldText0
                      ww1)
                   (GHC.Types.:
                      @ Database.Persist.Class.PersistField.SomePersistField
                      (Database.Persist.Class.PersistField.SomePersistField
                         @ GHC.Types.Double
                         Database.Persist.Class.PersistField.$fPersistFieldDouble
                         (GHC.Types.D# ww2))
                      (GHC.Types.:
                         @ Database.Persist.Class.PersistField.SomePersistField
                         (Database.Persist.Class.PersistField.SomePersistField
                            @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                            Foundation.$fPersistFieldKey1
                            (GHC.Int.I64# ww3)
                              `cast`
                            (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0])))))
                         (GHC.Types.[]
                            @ Database.Persist.Class.PersistField.SomePersistField))) }) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistEntityProduto_$d~~ ::
    (Database.Persist.Class.PersistEntity.Key Foundation.Produto :: *)
    GHC.Types.~~ (Database.Persist.Class.PersistEntity.Key
                    Foundation.Produto :: *)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                   @~ <Database.Persist.Class.PersistEntity.Key
                         Foundation.Produto>_N) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistEntityTipoProduto ::
    Database.Persist.Class.PersistEntity.PersistEntity
      Foundation.TipoProduto
  DFunId
  {- Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.TipoProduto
                  Foundation.$fPersistFieldKey1
                  Foundation.$fToJSONKey1
                  Foundation.$fFromJSONKey1
                  Foundation.$fShowKey1
                  Foundation.$fReadKey1
                  Foundation.$fEqKey1
                  Foundation.$fOrdKey1
                  Foundation.$fPersistEntityTipoProduto_$ckeyToValues
                  Foundation.$fPersistEntityTipoProduto_$ckeyFromValues
                  Foundation.$fPersistEntityTipoProduto9
                    `cast`
                  (Sym (Foundation.D:R:EntityFieldTipoProdutotyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                         Foundation.TipoProduto>_N)
                  Foundation.$fPersistEntityTipoProduto_$centityDef
                  Foundation.$fPersistEntityTipoProduto_$cpersistFieldDef
                  Foundation.$fPersistEntityTipoProduto_$ctoPersistFields
                  Foundation.$fPersistEntityTipoProduto_$cfromPersistValues
                  Foundation.$fPersistEntityTipoProduto_$cpersistUniqueKeys
                  Foundation.$fPersistEntityTipoProduto_$cpersistUniqueToFieldNames
                  Foundation.$fPersistEntityTipoProduto_$cpersistUniqueToValues
                  Foundation.$fPersistEntityTipoProduto_$cfieldLens -}
d06792a928e3e33a3df3e17ff0325165
  $fPersistEntityTipoProduto1 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityTipoProduto2 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
bdf41cdadca0a80c574a2f6ac46c5898
  $fPersistEntityTipoProduto2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("nometipo"#) -}
4abe252f365fbf4c7968211c0209b1cc
  $fPersistEntityTipoProduto3 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente28 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente27 of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityProduto5 of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityProduto2
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente17) } } }) -}
c5dce20bbe410bb8e2e978d98a9bf21e
  $fPersistEntityTipoProduto4 ::
    Database.Persist.Types.Base.EntityDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityProduto5 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityTipoProduto8 of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente28 of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 case Data.Text.Show.unpackCString#
                        Foundation.$fPersistEntityCliente27 of nt3 { Data.Text.Internal.Text ipv9 ipv10 ipv11 ->
                 case Foundation.$fPersistEntityCliente_$sfromList
                        @ [Database.Persist.Types.Base.ExtraLine]
                        (GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              [Database.Persist.Types.Base.ExtraLine])) of dt { DEFAULT ->
                 Database.Persist.Types.Base.EntityDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   (Database.Persist.Types.Base.FieldDef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      nt3 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                      Foundation.$fPersistEntityProduto2
                      Database.Persist.Types.Base.SqlInt64
                      (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                      GHC.Types.True
                      (Database.Persist.Types.Base.ForeignRef
                         nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                         Foundation.$fPersistEntityCliente17))
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   Foundation.$fPersistEntityTipoProduto5
                   (GHC.Types.[] @ Database.Persist.Types.Base.UniqueDef)
                   (GHC.Types.[] @ Database.Persist.Types.Base.ForeignDef)
                   (GHC.Types.[] @ Data.Text.Internal.Text)
                   dt
                   GHC.Types.False } } } } }) -}
c4f4be8d0dd51b2e14abd2ea720f7679
  $fPersistEntityTipoProduto5 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityTipoProduto6
                   (GHC.Types.[] @ Database.Persist.Types.Base.FieldDef)) -}
f18ada41e2eafc3e4a8bea50d6ac0455
  $fPersistEntityTipoProduto6 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityTipoProduto7 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
82684597817fe6d8d1a24b1bc47349e9
  $fPersistEntityTipoProduto7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fPersistEntityTipoProduto2) -}
3e717de1854ea0c3523b1ecaf640ee2b
  $fPersistEntityTipoProduto8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("tipo_produto"#) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistEntityTipoProduto9 ::
    Foundation.R:EntityFieldTipoProdutotyp
      (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Foundation.TipoProdutoId
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                   Foundation.$fPersistEntityTipoProduto_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Database.Persist.Class.PersistEntity.Key
                                       Foundation.TipoProduto>_N <Database.Persist.Class.PersistEntity.Key
                                                                    Foundation.TipoProduto>_N)) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistEntityTipoProduto_$centityDef ::
    GHC.Base.Monad m =>
    m Foundation.TipoProduto -> Database.Persist.Types.Base.EntityDef
  {- Arity: 2, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ m :: * -> *
                   ($dMonad :: GHC.Base.Monad m)
                   (ds :: m Foundation.TipoProduto) ->
                 Foundation.$fPersistEntityTipoProduto4) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistEntityTipoProduto_$cfieldLens ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.TipoProduto field
    -> forall (f :: * -> *).
       GHC.Base.Functor f =>
       (field -> f field)
       -> Database.Persist.Class.PersistEntity.Entity
            Foundation.TipoProduto
       -> f (Database.Persist.Class.PersistEntity.Entity
               Foundation.TipoProduto)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U(U))>,
     Unfolding: (\ @ field
                   (dk :: Database.Persist.Class.PersistEntity.EntityField
                            Foundation.TipoProduto field)
                   @ f :: * -> *
                   ($dFunctor :: GHC.Base.Functor f)
                   (eta :: field -> f field)
                   (eta1 :: Database.Persist.Class.PersistEntity.Entity
                              Foundation.TipoProduto) ->
                 case dk
                        `cast`
                      (Foundation.D:R:EntityFieldTipoProdutotyp0[0] <field>_N) of wild {
                   Foundation.TipoProdutoId $d~
                   -> case GHC.Types.HEq_sc
                             @ *
                             @ *
                             @ field
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <*>_N <field>_N <Database.Persist.Class.PersistEntity.Key
                                                     Foundation.TipoProduto>_N) of co { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.TipoProduto)
                        (\ (key :: Database.Persist.Class.PersistEntity.Key
                                     Foundation.TipoProduto) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity ds value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ Foundation.TipoProduto
                           key
                           value })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity ds3 ds4 ->
                            ds3 `cast` (Sub (Sym co)) }))
                          `cast`
                        (<f>_R co) }
                   Foundation.TipoProdutoNometipo $d~
                   -> case GHC.Types.HEq_sc
                             @ *
                             @ *
                             @ field
                             @ Data.Text.Internal.Text
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <*>_N <field>_N <Data.Text.Internal.Text>_N) of co { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.TipoProduto)
                        (\ (x :: Data.Text.Internal.Text) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity key value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ Foundation.TipoProduto
                           key
                           (case value of wild2 { Foundation.TipoProduto ds ->
                            Foundation.$WTipoProduto x }) })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity ds3 ds4 ->
                            case ds4 of wild2 { Foundation.TipoProduto ds ->
                            ds `cast` (Sub (Sym co)) } }))
                          `cast`
                        (<f>_R co) } }) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistEntityTipoProduto_$cfromPersistValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text Foundation.TipoProduto
  {- Arity: 1, Strictness: <S,U> -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistEntityTipoProduto_$ckeyFromValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Database.Persist.Types.Base.PersistValue]) ->
                 case (Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                         (Database.Persist.TH.headNote x))
                        `cast`
                      (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])))_R of wild {
                   Data.Either.Left x1
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                        x1
                   Data.Either.Right y
                   -> Data.Either.Right
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                        y `cast`
                        (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0])) }) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistEntityTipoProduto_$ckeyToValues ::
    Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.TipoProduto) ->
                 GHC.Types.:
                   @ Database.Persist.Types.Base.PersistValue
                   (Database.Persist.Types.Base.PersistInt64
                      x `cast`
                      (Foundation.D:R:KeyTipoProduto0[0] ; (Foundation.N:R:KeyTipoProduto[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                   (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistEntityTipoProduto_$cpersistFieldDef ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.TipoProduto typ
    -> Database.Persist.Types.Base.FieldDef
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ typ
                   (ds :: Database.Persist.Class.PersistEntity.EntityField
                            Foundation.TipoProduto typ) ->
                 case ds
                        `cast`
                      (Foundation.D:R:EntityFieldTipoProdutotyp0[0] <typ>_N) of wild {
                   Foundation.TipoProdutoId $d~
                   -> Foundation.$fPersistEntityTipoProduto3
                   Foundation.TipoProdutoNometipo $d~
                   -> Foundation.$fPersistEntityTipoProduto1 }) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistEntityTipoProduto_$cpersistUniqueKeys ::
    Foundation.TipoProduto
    -> [Database.Persist.Class.PersistEntity.Unique
          Foundation.TipoProduto]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.TipoProduto) ->
                 case ds of wild { Foundation.TipoProduto _nometipo ->
                 GHC.Types.[]
                   @ (Database.Persist.Class.PersistEntity.Unique
                        Foundation.TipoProduto) }) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistEntityTipoProduto_$cpersistUniqueToFieldNames ::
    Database.Persist.Class.PersistEntity.Unique Foundation.TipoProduto
    -> [(Database.Persist.Types.Base.HaskellName,
         Database.Persist.Types.Base.DBName)]
  {- Arity: 1, Strictness: <B,A>x, Inline: [0],
     Unfolding: InlineRule (1, True, True)
                (\ (w :: Database.Persist.Class.PersistEntity.Unique
                           Foundation.TipoProduto) ->
                 Foundation.$w$cpersistUniqueToFieldNames GHC.Prim.void#) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistEntityTipoProduto_$cpersistUniqueToValues ::
    Database.Persist.Class.PersistEntity.Unique Foundation.TipoProduto
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, Strictness: <B,A>x, Inline: [0],
     Unfolding: InlineRule (1, True, True)
                (\ (w :: Database.Persist.Class.PersistEntity.Unique
                           Foundation.TipoProduto) ->
                 Foundation.$w$cpersistUniqueToValues GHC.Prim.void#) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistEntityTipoProduto_$ctoPersistFields ::
    Foundation.TipoProduto
    -> [Database.Persist.Class.PersistField.SomePersistField]
  {- Arity: 1, Strictness: <S(S),1*U(U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.TipoProduto) ->
                 case ds of wild { Foundation.TipoProduto x ->
                 GHC.Types.:
                   @ Database.Persist.Class.PersistField.SomePersistField
                   (Database.Persist.Class.PersistField.SomePersistField
                      @ Data.Text.Internal.Text
                      Database.Persist.Class.PersistField.$fPersistFieldText0
                      x)
                   (GHC.Types.[]
                      @ Database.Persist.Class.PersistField.SomePersistField) }) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistEntityTipoProduto_$d~~ ::
    (Database.Persist.Class.PersistEntity.Key
       Foundation.TipoProduto :: *)
    GHC.Types.~~ (Database.Persist.Class.PersistEntity.Key
                    Foundation.TipoProduto :: *)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                   @~ <Database.Persist.Class.PersistEntity.Key
                         Foundation.TipoProduto>_N) -}
ab0e720acfd8349912d50cf443256369
  $fPersistFieldCliente ::
    Database.Persist.Class.PersistField.PersistField Foundation.Cliente
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Cliente
                  Foundation.$fPersistFieldCliente_$ctoPersistValue
                  Foundation.$fPersistFieldCliente_$cfromPersistValue -}
cd63b865ab6d08e0ef55102e69d9a1f0
  $fPersistFieldCliente1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fPersistEntityCliente7) -}
1431aa15dab35724d164b648b5681d02
  $fPersistFieldCliente10 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Foundation.$fPersistFieldCliente11 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
79c323d9c32d3967c90fc49ad2f2a96b
  $fPersistFieldCliente11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter1
                   ipv1
                   4#
                   Foundation.$fPersistFieldCliente3
                   0#
                   ipv }) -}
682a02061e7226f3c5e9c5f59b144ead
  $fPersistFieldCliente12 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Foundation.$fPersistFieldCliente13 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
21a0dd9b2d6a7d8c019ef772bbe8f916
  $fPersistFieldCliente13 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter1
                   ipv1
                   4#
                   Foundation.$fPersistFieldCliente4
                   0#
                   ipv }) -}
98f1c2d7e5852c0ce0e157cebce5f73b
  $fPersistFieldCliente14 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Foundation.$fPersistFieldCliente15 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
0c1ef8c545bcefc018395084773beb01
  $fPersistFieldCliente15 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter1
                   ipv1
                   4#
                   Foundation.$fPersistFieldCliente5
                   0#
                   ipv }) -}
99f5b4bd4345925bca011e7b3cacf61f
  $fPersistFieldCliente2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fParseRouteApp10) -}
39752a77dae16ec212467e27c6947981
  $fPersistFieldCliente3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fPersistEntityCliente10) -}
306cb2608cc7509159731b61209aeac1
  $fPersistFieldCliente4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fPersistEntityCliente12) -}
f29bc82172482724d7896d5819887ae9
  $fPersistFieldCliente5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fPersistEntityCliente15) -}
da36e58aaf3244f9c0f6ad4b4e49bb09
  $fPersistFieldCliente6 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Foundation.$fPersistFieldCliente7 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
da4f7e2dfd7b1931c4885322bbd5ebb1
  $fPersistFieldCliente7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter1
                   ipv1
                   4#
                   Foundation.$fPersistFieldCliente1
                   0#
                   ipv }) -}
d158caa86194d627fda48ca1c1e95062
  $fPersistFieldCliente8 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Foundation.$fPersistFieldCliente9 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
9cc8fc2f59c90369487135a7f0a448a1
  $fPersistFieldCliente9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter1
                   ipv1
                   4#
                   Foundation.$fPersistFieldCliente2
                   0#
                   ipv }) -}
ab0e720acfd8349912d50cf443256369
  $fPersistFieldCliente_$cfromPersistValue ::
    Database.Persist.Types.Base.PersistValue
    -> Data.Either.Either Data.Text.Internal.Text Foundation.Cliente
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (eta :: Database.Persist.Types.Base.PersistValue) ->
                 case Database.Persist.Class.PersistField.getPersistMap
                        eta of wild {
                   Data.Either.Left l
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ Foundation.Cliente
                        l
                   Data.Either.Right r
                   -> let {
                        columns :: Data.HashMap.Base.HashMap
                                     Data.Text.Internal.Text
                                     Database.Persist.Types.Base.PersistValue
                        = Foundation.$fPersistFieldCliente_go
                            r
                            (Data.HashMap.Base.Empty
                               @ Data.Text.Internal.Text
                               @ Database.Persist.Types.Base.PersistValue)
                      } in
                      let {
                        c :: GHC.Base.String -> Database.Persist.Types.Base.PersistValue
                          {- Arity: 1, Strictness: <S,1*U> -}
                        = \ (name :: GHC.Base.String) ->
                          case GHC.Magic.runRW#
                                 @ ('GHC.Types.TupleRep
                                      '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                 @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                                 (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newByteArray#
                                         @ GHC.Prim.RealWorld
                                         10#
                                         s1 of ds1 { (#,#) ipv ipv1 ->
                                  Foundation.$wouter
                                    ipv1
                                    4#
                                    name
                                    0#
                                    ipv }) of ds1 { (#,#) ipv ipv1 ->
                          case ipv1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          case Data.Aeson.Compat.$w$slookup
                                 @ Database.Persist.Types.Base.PersistValue
                                 ww1
                                 ww2
                                 ww3
                                 columns of wild1 {
                            GHC.Base.Nothing -> Database.Persist.Types.Base.PersistNull
                            GHC.Base.Just v -> v } } }
                      } in
                      Foundation.$fPersistEntityCliente_$cfromPersistValues
                        (GHC.Types.:
                           @ Database.Persist.Types.Base.PersistValue
                           (c Foundation.$fPersistFieldCliente5)
                           (GHC.Types.:
                              @ Database.Persist.Types.Base.PersistValue
                              (c Foundation.$fPersistFieldCliente4)
                              (GHC.Types.:
                                 @ Database.Persist.Types.Base.PersistValue
                                 (c Foundation.$fPersistFieldCliente3)
                                 (GHC.Types.:
                                    @ Database.Persist.Types.Base.PersistValue
                                    (c Foundation.$fPersistFieldCliente2)
                                    (GHC.Types.:
                                       @ Database.Persist.Types.Base.PersistValue
                                       (c Foundation.$fPersistFieldCliente1)
                                       (GHC.Types.[]
                                          @ Database.Persist.Types.Base.PersistValue)))))) }) -}
ab0e720acfd8349912d50cf443256369
  $fPersistFieldCliente_$ctoPersistValue ::
    Foundation.Cliente -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U,U)>m12, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Foundation.Cliente) ->
                 case Foundation.$w$ctoPersistValue w of ww { Unit# ww1 ->
                 Database.Persist.Types.Base.PersistMap ww1 }) -}
5aeff5de9e3909923964b4776ae596b1
  $fPersistFieldCliente_go ::
    [(Data.Text.Internal.Text,
      Database.Persist.Types.Base.PersistValue)]
    -> Data.HashMap.Base.HashMap
         Data.Text.Internal.Text Database.Persist.Types.Base.PersistValue
    -> Data.HashMap.Base.HashMap
         Data.Text.Internal.Text Database.Persist.Types.Base.PersistValue
  {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistFieldItemPedido ::
    Database.Persist.Class.PersistField.PersistField
      Foundation.ItemPedido
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.ItemPedido
                  Foundation.$fPersistFieldItemPedido_$ctoPersistValue
                  Foundation.$fPersistFieldItemPedido_$cfromPersistValue -}
1e7abaecdd0c4d58ca778e0e9711372e
  $fPersistFieldItemPedido1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fPersistEntityItemPedido6) -}
9441087fdf0d072a1588cb8b403803b6
  $fPersistFieldItemPedido2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fPersistEntityItemPedido13) -}
1eb7e7730211384934b82343cdbf550a
  $fPersistFieldItemPedido3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fPersistEntityItemPedido20) -}
2bc5b867acf2fe2b3116f6f66d3cc26d
  $fPersistFieldItemPedido4 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Foundation.$fPersistFieldItemPedido5 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
2c40a7d6dd3cbfa9a2033e4089cfb95d
  $fPersistFieldItemPedido5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter1
                   ipv1
                   4#
                   Foundation.$fPersistFieldItemPedido1
                   0#
                   ipv }) -}
dbddb71f54280bc1f51060a58e2776a1
  $fPersistFieldItemPedido6 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Foundation.$fPersistFieldItemPedido7 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
1e220c3cdd56a650d0f7d2c8a99fe084
  $fPersistFieldItemPedido7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter1
                   ipv1
                   4#
                   Foundation.$fPersistFieldItemPedido2
                   0#
                   ipv }) -}
311790323b4b1129b1f697de953b416c
  $fPersistFieldItemPedido8 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Foundation.$fPersistFieldItemPedido9 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
3fa78f7e8b32d7befdcb4558c0f8fa51
  $fPersistFieldItemPedido9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter1
                   ipv1
                   4#
                   Foundation.$fPersistFieldItemPedido3
                   0#
                   ipv }) -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistFieldItemPedido_$cfromPersistValue ::
    Database.Persist.Types.Base.PersistValue
    -> Data.Either.Either Data.Text.Internal.Text Foundation.ItemPedido
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (eta :: Database.Persist.Types.Base.PersistValue) ->
                 case Database.Persist.Class.PersistField.getPersistMap
                        eta of wild {
                   Data.Either.Left l
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ Foundation.ItemPedido
                        l
                   Data.Either.Right r
                   -> let {
                        columns :: Data.HashMap.Base.HashMap
                                     Data.Text.Internal.Text
                                     Database.Persist.Types.Base.PersistValue
                        = Foundation.$fPersistFieldCliente_go
                            r
                            (Data.HashMap.Base.Empty
                               @ Data.Text.Internal.Text
                               @ Database.Persist.Types.Base.PersistValue)
                      } in
                      let {
                        c :: GHC.Base.String -> Database.Persist.Types.Base.PersistValue
                          {- Arity: 1, Strictness: <S,1*U> -}
                        = \ (name :: GHC.Base.String) ->
                          case GHC.Magic.runRW#
                                 @ ('GHC.Types.TupleRep
                                      '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                 @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                                 (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newByteArray#
                                         @ GHC.Prim.RealWorld
                                         10#
                                         s1 of ds1 { (#,#) ipv ipv1 ->
                                  Foundation.$wouter2
                                    ipv1
                                    4#
                                    name
                                    0#
                                    ipv }) of ds1 { (#,#) ipv ipv1 ->
                          case ipv1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          case Data.Aeson.Compat.$w$slookup
                                 @ Database.Persist.Types.Base.PersistValue
                                 ww1
                                 ww2
                                 ww3
                                 columns of wild1 {
                            GHC.Base.Nothing -> Database.Persist.Types.Base.PersistNull
                            GHC.Base.Just v -> v } } }
                      } in
                      Foundation.$fPersistEntityItemPedido_$cfromPersistValues
                        (GHC.Types.:
                           @ Database.Persist.Types.Base.PersistValue
                           (c Foundation.$fPersistFieldItemPedido3)
                           (GHC.Types.:
                              @ Database.Persist.Types.Base.PersistValue
                              (c Foundation.$fPersistFieldItemPedido2)
                              (GHC.Types.:
                                 @ Database.Persist.Types.Base.PersistValue
                                 (c Foundation.$fPersistFieldItemPedido1)
                                 (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)))) }) -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistFieldItemPedido_$ctoPersistValue ::
    Foundation.ItemPedido -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>m12, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Foundation.ItemPedido) ->
                 case Foundation.$w$ctoPersistValue1 w of ww { Unit# ww1 ->
                 Database.Persist.Types.Base.PersistMap ww1 }) -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistFieldKey ::
    Database.Persist.Class.PersistField.PersistField
      (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                  Database.Persist.Types.Base.PersistInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R <Database.Persist.Types.Base.PersistValue>_R)
                  Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                    `cast`
                  (<Database.Persist.Types.Base.PersistValue>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0])))))_R) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistFieldKey0 ::
    Database.Persist.Class.PersistField.PersistField
      (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                  Database.Persist.Types.Base.PersistInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R <Database.Persist.Types.Base.PersistValue>_R)
                  Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                    `cast`
                  (<Database.Persist.Types.Base.PersistValue>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0])))))_R) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistFieldKey1 ::
    Database.Persist.Class.PersistField.PersistField
      (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                  Database.Persist.Types.Base.PersistInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R <Database.Persist.Types.Base.PersistValue>_R)
                  Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                    `cast`
                  (<Database.Persist.Types.Base.PersistValue>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0])))))_R) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistFieldKey2 ::
    Database.Persist.Class.PersistField.PersistField
      (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                  Database.Persist.Types.Base.PersistInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R <Database.Persist.Types.Base.PersistValue>_R)
                  Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                    `cast`
                  (<Database.Persist.Types.Base.PersistValue>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0])))))_R) -}
ab0e720acfd8349912d50cf443256369
  $fPersistFieldKey3 ::
    Database.Persist.Class.PersistField.PersistField
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Database.Persist.Types.Base.PersistInt64
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R <Database.Persist.Types.Base.PersistValue>_R)
                  Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                    `cast`
                  (<Database.Persist.Types.Base.PersistValue>_R
                   ->_R (Data.Either.Either
                           <Data.Text.Internal.Text>_R
                           (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0])))))_R) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistFieldPedido ::
    Database.Persist.Class.PersistField.PersistField Foundation.Pedido
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Pedido
                  Foundation.$fPersistFieldPedido_$ctoPersistValue
                  Foundation.$fPersistFieldPedido_$cfromPersistValue -}
80e3be945e81c53d14046ff5ceecbd6a
  $fPersistFieldPedido1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fPersistEntityPedido6) -}
fd4cbb4951c25bc3f6c020807d8eb26d
  $fPersistFieldPedido10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter1
                   ipv1
                   4#
                   Foundation.$fPersistFieldPedido3
                   0#
                   ipv }) -}
c98ebc3b5d588bd4c28b69505bbd7a6a
  $fPersistFieldPedido11 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Foundation.$fPersistFieldPedido12 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
36ec7b88cea04a59d6dea8be426fd92a
  $fPersistFieldPedido12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter1
                   ipv1
                   4#
                   Foundation.$fPersistFieldPedido4
                   0#
                   ipv }) -}
4e30bea95ddbaaeb9f4ca0a98d759b90
  $fPersistFieldPedido2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fPersistEntityPedido9) -}
2403fc3cdce73f0c507d5fbe186d90e4
  $fPersistFieldPedido3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fPersistEntityPedido12) -}
74db4585705d7b3b23cdce56fe9aafa4
  $fPersistFieldPedido4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fPersistEntityPedido15) -}
ad2d748c2494e93b3f356dda1f1ed249
  $fPersistFieldPedido5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Foundation.$fPersistFieldPedido6 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
677fc1bd2be52ee886e07eea33ff58f7
  $fPersistFieldPedido6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter1
                   ipv1
                   4#
                   Foundation.$fPersistFieldPedido1
                   0#
                   ipv }) -}
a6af8ea0a78744c4a1f3c32f990d9b14
  $fPersistFieldPedido7 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Foundation.$fPersistFieldPedido8 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
87d45556ae13da094ad4c87c90f7c669
  $fPersistFieldPedido8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter1
                   ipv1
                   4#
                   Foundation.$fPersistFieldPedido2
                   0#
                   ipv }) -}
e99186b71bf1e40a217c6748b63b9088
  $fPersistFieldPedido9 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Foundation.$fPersistFieldPedido10 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistFieldPedido_$cfromPersistValue ::
    Database.Persist.Types.Base.PersistValue
    -> Data.Either.Either Data.Text.Internal.Text Foundation.Pedido
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (eta :: Database.Persist.Types.Base.PersistValue) ->
                 case Database.Persist.Class.PersistField.getPersistMap
                        eta of wild {
                   Data.Either.Left l
                   -> Data.Either.Left @ Data.Text.Internal.Text @ Foundation.Pedido l
                   Data.Either.Right r
                   -> let {
                        columns :: Data.HashMap.Base.HashMap
                                     Data.Text.Internal.Text
                                     Database.Persist.Types.Base.PersistValue
                        = Foundation.$fPersistFieldCliente_go
                            r
                            (Data.HashMap.Base.Empty
                               @ Data.Text.Internal.Text
                               @ Database.Persist.Types.Base.PersistValue)
                      } in
                      let {
                        c :: GHC.Base.String -> Database.Persist.Types.Base.PersistValue
                          {- Arity: 1, Strictness: <S,1*U> -}
                        = \ (name :: GHC.Base.String) ->
                          case GHC.Magic.runRW#
                                 @ ('GHC.Types.TupleRep
                                      '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                 @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                                 (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newByteArray#
                                         @ GHC.Prim.RealWorld
                                         10#
                                         s1 of ds1 { (#,#) ipv ipv1 ->
                                  Foundation.$wouter3
                                    ipv1
                                    4#
                                    name
                                    0#
                                    ipv }) of ds1 { (#,#) ipv ipv1 ->
                          case ipv1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          case Data.Aeson.Compat.$w$slookup
                                 @ Database.Persist.Types.Base.PersistValue
                                 ww1
                                 ww2
                                 ww3
                                 columns of wild1 {
                            GHC.Base.Nothing -> Database.Persist.Types.Base.PersistNull
                            GHC.Base.Just v -> v } } }
                      } in
                      Foundation.$fPersistEntityPedido_$cfromPersistValues
                        (GHC.Types.:
                           @ Database.Persist.Types.Base.PersistValue
                           (c Foundation.$fPersistFieldPedido4)
                           (GHC.Types.:
                              @ Database.Persist.Types.Base.PersistValue
                              (c Foundation.$fPersistFieldPedido3)
                              (GHC.Types.:
                                 @ Database.Persist.Types.Base.PersistValue
                                 (c Foundation.$fPersistFieldPedido2)
                                 (GHC.Types.:
                                    @ Database.Persist.Types.Base.PersistValue
                                    (c Foundation.$fPersistFieldPedido1)
                                    (GHC.Types.[]
                                       @ Database.Persist.Types.Base.PersistValue))))) }) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistFieldPedido_$ctoPersistValue ::
    Foundation.Pedido -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U)>m12, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Foundation.Pedido) ->
                 case Foundation.$w$ctoPersistValue2 w of ww { Unit# ww1 ->
                 Database.Persist.Types.Base.PersistMap ww1 }) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistFieldProduto ::
    Database.Persist.Class.PersistField.PersistField Foundation.Produto
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Produto
                  Foundation.$fPersistFieldProduto_$ctoPersistValue
                  Foundation.$fPersistFieldProduto_$cfromPersistValue -}
834435f03653b2d90be933f448577601
  $fPersistFieldProduto1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fPersistEntityProduto7) -}
bbf26c8de07ef537dfb94a742f9f9ca8
  $fPersistFieldProduto2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fPersistEntityProduto10) -}
6b0d63b4530b0d713b4a48a9eab0937c
  $fPersistFieldProduto3 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Foundation.$fPersistFieldProduto4 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
2dd8334556b135f04796f831d0032ce4
  $fPersistFieldProduto4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter1
                   ipv1
                   4#
                   Foundation.$fPersistFieldProduto1
                   0#
                   ipv }) -}
48b4afe4aaae776998f7a280b3f57998
  $fPersistFieldProduto5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Foundation.$fPersistFieldProduto6 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
7346292b15d101a3b7697ea7a777bf3b
  $fPersistFieldProduto6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter1
                   ipv1
                   4#
                   Foundation.$fPersistFieldProduto2
                   0#
                   ipv }) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistFieldProduto_$cfromPersistValue ::
    Database.Persist.Types.Base.PersistValue
    -> Data.Either.Either Data.Text.Internal.Text Foundation.Produto
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (eta :: Database.Persist.Types.Base.PersistValue) ->
                 case Database.Persist.Class.PersistField.getPersistMap
                        eta of wild {
                   Data.Either.Left l
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ Foundation.Produto
                        l
                   Data.Either.Right r
                   -> let {
                        columns :: Data.HashMap.Base.HashMap
                                     Data.Text.Internal.Text
                                     Database.Persist.Types.Base.PersistValue
                        = Foundation.$fPersistFieldCliente_go
                            r
                            (Data.HashMap.Base.Empty
                               @ Data.Text.Internal.Text
                               @ Database.Persist.Types.Base.PersistValue)
                      } in
                      let {
                        c :: GHC.Base.String -> Database.Persist.Types.Base.PersistValue
                          {- Arity: 1, Strictness: <S,1*U> -}
                        = \ (name :: GHC.Base.String) ->
                          case GHC.Magic.runRW#
                                 @ ('GHC.Types.TupleRep
                                      '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                 @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                                 (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newByteArray#
                                         @ GHC.Prim.RealWorld
                                         10#
                                         s1 of ds1 { (#,#) ipv ipv1 ->
                                  Foundation.$wouter4
                                    ipv1
                                    4#
                                    name
                                    0#
                                    ipv }) of ds1 { (#,#) ipv ipv1 ->
                          case ipv1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          case Data.Aeson.Compat.$w$slookup
                                 @ Database.Persist.Types.Base.PersistValue
                                 ww1
                                 ww2
                                 ww3
                                 columns of wild1 {
                            GHC.Base.Nothing -> Database.Persist.Types.Base.PersistNull
                            GHC.Base.Just v -> v } } }
                      } in
                      Foundation.$fPersistEntityProduto_$cfromPersistValues
                        (GHC.Types.:
                           @ Database.Persist.Types.Base.PersistValue
                           (c Foundation.$fPersistFieldCliente5)
                           (GHC.Types.:
                              @ Database.Persist.Types.Base.PersistValue
                              (c Foundation.$fPersistFieldProduto2)
                              (GHC.Types.:
                                 @ Database.Persist.Types.Base.PersistValue
                                 (c Foundation.$fPersistFieldProduto1)
                                 (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)))) }) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistFieldProduto_$ctoPersistValue ::
    Foundation.Produto -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>m12, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Foundation.Produto) ->
                 case Foundation.$w$ctoPersistValue3 w of ww { Unit# ww1 ->
                 Database.Persist.Types.Base.PersistMap ww1 }) -}
ab0e720acfd8349912d50cf443256369
  $fPersistFieldSqlCliente ::
    Database.Persist.Sql.Class.PersistFieldSql Foundation.Cliente
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Cliente
                  Foundation.$fPersistFieldCliente
                  Foundation.$fPersistFieldSqlCliente_$csqlType -}
ab0e720acfd8349912d50cf443256369
  $fPersistFieldSqlCliente_$csqlType ::
    Data.Proxy.Proxy Foundation.Cliente
    -> Database.Persist.Types.Base.SqlType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Foundation.Cliente) ->
                 Database.Persist.Types.Base.SqlString) -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistFieldSqlItemPedido ::
    Database.Persist.Sql.Class.PersistFieldSql Foundation.ItemPedido
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.ItemPedido
                  Foundation.$fPersistFieldItemPedido
                  Foundation.$fPersistFieldSqlItemPedido_$csqlType -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistFieldSqlItemPedido_$csqlType ::
    Data.Proxy.Proxy Foundation.ItemPedido
    -> Database.Persist.Types.Base.SqlType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Foundation.ItemPedido) ->
                 Database.Persist.Types.Base.SqlString) -}
388dd4c04563308c88c61ef89b3610ad
  $fPersistFieldSqlKey ::
    Database.Persist.Sql.Class.PersistFieldSql
      (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                  Foundation.$fPersistFieldKey
                  Database.Persist.Sql.Class.$fPersistFieldSqlInt64_$csqlType
                    `cast`
                  ((Data.Proxy.Proxy
                      <*>_N
                      <GHC.Int.Int64, Database.Persist.Class.PersistEntity.Key
                                        Foundation.ItemPedido>)_R
                   ->_R <Database.Persist.Types.Base.SqlType>_R) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistFieldSqlKey0 ::
    Database.Persist.Sql.Class.PersistFieldSql
      (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                  Foundation.$fPersistFieldKey0
                  Database.Persist.Sql.Class.$fPersistFieldSqlInt64_$csqlType
                    `cast`
                  ((Data.Proxy.Proxy
                      <*>_N
                      <GHC.Int.Int64, Database.Persist.Class.PersistEntity.Key
                                        Foundation.Produto>)_R
                   ->_R <Database.Persist.Types.Base.SqlType>_R) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistFieldSqlKey1 ::
    Database.Persist.Sql.Class.PersistFieldSql
      (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                  Foundation.$fPersistFieldKey1
                  Database.Persist.Sql.Class.$fPersistFieldSqlInt64_$csqlType
                    `cast`
                  ((Data.Proxy.Proxy
                      <*>_N
                      <GHC.Int.Int64, Database.Persist.Class.PersistEntity.Key
                                        Foundation.TipoProduto>)_R
                   ->_R <Database.Persist.Types.Base.SqlType>_R) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistFieldSqlKey2 ::
    Database.Persist.Sql.Class.PersistFieldSql
      (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                  Foundation.$fPersistFieldKey2
                  Database.Persist.Sql.Class.$fPersistFieldSqlInt64_$csqlType
                    `cast`
                  ((Data.Proxy.Proxy
                      <*>_N
                      <GHC.Int.Int64, Database.Persist.Class.PersistEntity.Key
                                        Foundation.Pedido>)_R
                   ->_R <Database.Persist.Types.Base.SqlType>_R) -}
ab0e720acfd8349912d50cf443256369
  $fPersistFieldSqlKey3 ::
    Database.Persist.Sql.Class.PersistFieldSql
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Foundation.$fPersistFieldKey3
                  Database.Persist.Sql.Class.$fPersistFieldSqlInt64_$csqlType
                    `cast`
                  ((Data.Proxy.Proxy
                      <*>_N
                      <GHC.Int.Int64, Database.Persist.Class.PersistEntity.Key
                                        Foundation.Cliente>)_R
                   ->_R <Database.Persist.Types.Base.SqlType>_R) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistFieldSqlPedido ::
    Database.Persist.Sql.Class.PersistFieldSql Foundation.Pedido
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Pedido
                  Foundation.$fPersistFieldPedido
                  Foundation.$fPersistFieldSqlPedido_$csqlType -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fPersistFieldSqlPedido_$csqlType ::
    Data.Proxy.Proxy Foundation.Pedido
    -> Database.Persist.Types.Base.SqlType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Foundation.Pedido) ->
                 Database.Persist.Types.Base.SqlString) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistFieldSqlProduto ::
    Database.Persist.Sql.Class.PersistFieldSql Foundation.Produto
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Produto
                  Foundation.$fPersistFieldProduto
                  Foundation.$fPersistFieldSqlProduto_$csqlType -}
d115186e041a4b3c4d5ea956a0e873a2
  $fPersistFieldSqlProduto_$csqlType ::
    Data.Proxy.Proxy Foundation.Produto
    -> Database.Persist.Types.Base.SqlType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Foundation.Produto) ->
                 Database.Persist.Types.Base.SqlString) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistFieldSqlTipoProduto ::
    Database.Persist.Sql.Class.PersistFieldSql Foundation.TipoProduto
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.TipoProduto
                  Foundation.$fPersistFieldTipoProduto
                  Foundation.$fPersistFieldSqlTipoProduto_$csqlType -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistFieldSqlTipoProduto_$csqlType ::
    Data.Proxy.Proxy Foundation.TipoProduto
    -> Database.Persist.Types.Base.SqlType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Foundation.TipoProduto) ->
                 Database.Persist.Types.Base.SqlString) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistFieldTipoProduto ::
    Database.Persist.Class.PersistField.PersistField
      Foundation.TipoProduto
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.TipoProduto
                  Foundation.$fPersistFieldTipoProduto_$ctoPersistValue
                  Foundation.$fPersistFieldTipoProduto_$cfromPersistValue -}
8d37d9d1fdb89c18c81cbe37f2b8daf0
  $fPersistFieldTipoProduto1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter5
                   ipv1
                   4#
                   Foundation.$fPersistFieldTipoProduto2
                   0#
                   ipv }) -}
137bf191dbd75c818531781ee9aa6e66
  $fPersistFieldTipoProduto2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fPersistEntityTipoProduto2) -}
9272b148b4824f2e322d4d3ec83d91f6
  $fPersistFieldTipoProduto3 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Foundation.$fPersistFieldTipoProduto4 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
cfee41213867dcf647c912fbfb6927f8
  $fPersistFieldTipoProduto4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter1
                   ipv1
                   4#
                   Foundation.$fPersistFieldTipoProduto2
                   0#
                   ipv }) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistFieldTipoProduto_$cfromPersistValue ::
    Database.Persist.Types.Base.PersistValue
    -> Data.Either.Either
         Data.Text.Internal.Text Foundation.TipoProduto
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (eta :: Database.Persist.Types.Base.PersistValue) ->
                 case Database.Persist.Class.PersistField.getPersistMap
                        eta of wild {
                   Data.Either.Left l
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ Foundation.TipoProduto
                        l
                   Data.Either.Right r
                   -> Foundation.$fPersistEntityTipoProduto_$cfromPersistValues
                        (GHC.Types.:
                           @ Database.Persist.Types.Base.PersistValue
                           (case GHC.Magic.runRW#
                                   @ ('GHC.Types.TupleRep
                                        '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                   @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                        Data.Text.Internal.Text #)
                                   Foundation.$fPersistFieldTipoProduto1 of ds1 { (#,#) ipv ipv1 ->
                            case ipv1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                            case {__pkg_ccall hashable-1.2.7.0 GHC.Prim.ByteArray#
                                                               -> GHC.Prim.Int#
                                                               -> GHC.Prim.Int#
                                                               -> GHC.Prim.Int#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld,
                                                                     GHC.Prim.Int# #)}
                                   ww1
                                   (GHC.Prim.uncheckedIShiftL# ww2 1#)
                                   (GHC.Prim.uncheckedIShiftL# ww3 1#)
                                   -2578643520546668380#
                                   GHC.Prim.realWorld# of wild1 { (#,#) ds2 ds3 ->
                            let {
                              exit :: Data.HashMap.Base.HashMap
                                        Data.Text.Internal.Text
                                        Database.Persist.Types.Base.PersistValue
                                      -> Database.Persist.Types.Base.PersistValue
                                <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                              = \ (eta1 :: Data.HashMap.Base.HashMap
                                             Data.Text.Internal.Text
                                             Database.Persist.Types.Base.PersistValue)[OneShot] ->
                                case Data.Aeson.Compat.$wpoly_go2
                                       @ Database.Persist.Types.Base.PersistValue
                                       (GHC.Prim.int2Word# ds3)
                                       ww1
                                       ww2
                                       ww3
                                       0#
                                       eta1 of wild2 {
                                  GHC.Base.Nothing -> Database.Persist.Types.Base.PersistNull
                                  GHC.Base.Just v -> v }
                            } in
                            letrec {
                              go1 :: [(Data.Text.Internal.Text,
                                       Database.Persist.Types.Base.PersistValue)]
                                     -> Data.HashMap.Base.HashMap
                                          Data.Text.Internal.Text
                                          Database.Persist.Types.Base.PersistValue
                                     -> Database.Persist.Types.Base.PersistValue
                                <join 2> {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
                              = \ (ds :: [(Data.Text.Internal.Text,
                                           Database.Persist.Types.Base.PersistValue)])
                                  (eta1 :: Data.HashMap.Base.HashMap
                                             Data.Text.Internal.Text
                                             Database.Persist.Types.Base.PersistValue) ->
                                case ds of wild2 {
                                  [] -> exit eta1
                                  : y ys
                                  -> case y of wild3 { (,) k1 v1 ->
                                     case v1 of v2 { DEFAULT ->
                                     case k1 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                                     go1
                                       ys
                                       (Foundation.$w$sunsafeInsert
                                          @ Database.Persist.Types.Base.PersistValue
                                          ww5
                                          ww6
                                          ww7
                                          v2
                                          eta1) } } } }
                            } in
                            go1
                              r
                              (Data.HashMap.Base.Empty
                                 @ Data.Text.Internal.Text
                                 @ Database.Persist.Types.Base.PersistValue) } } })
                           (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)) }) -}
b5272135afcffe4d7282ae6ad9b22515
  $fPersistFieldTipoProduto_$ctoPersistValue ::
    Foundation.TipoProduto -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, Strictness: <L,1*U(U)>m12, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Foundation.TipoProduto) ->
                 Database.Persist.Types.Base.PersistMap
                   (case w of wild { Foundation.TipoProduto x ->
                    GHC.Types.:
                      @ (Data.Text.Internal.Text,
                         Database.Persist.Types.Base.PersistValue)
                      (Foundation.$fPersistFieldTipoProduto3,
                       Database.Persist.Types.Base.PersistText x)
                      (GHC.Types.[]
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Types.Base.PersistValue)) })) -}
59ffebee1e7e208315f381a64e8ebcba
  $fPersistFieldTipoProduto_$s$wpoly_go1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Prim.Word#
    -> GHC.Prim.SmallArray#
         (Data.HashMap.Base.HashMap Data.Text.Internal.Text v)
    -> GHC.Prim.Int#
    -> v
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Word#
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.HashMap.Base.HashMap Data.Text.Internal.Text v #)
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><S,U><L,U><L,U><L,U><L,U><S,U> -}
388dd4c04563308c88c61ef89b3610ad
  $fReadKey ::
    GHC.Read.Read
      (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                  Foundation.$fReadKey_$creadsPrec
                  Foundation.$fReadKey_$creadList
                  Foundation.$fReadKey17
                    `cast`
                  ((<Text.ParserCombinators.ReadPrec.Prec>_R
                    ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                  <Database.Persist.Class.PersistEntity.Key
                                     Foundation.ItemPedido>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                           <Database.Persist.Class.PersistEntity.Key
                                                                              Foundation.ItemPedido>_R))
                  Foundation.$fReadKey_$creadListPrec -}
d115186e041a4b3c4d5ea956a0e873a2
  $fReadKey0 ::
    GHC.Read.Read
      (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                  Foundation.$fReadKey0_$creadsPrec
                  Foundation.$fReadKey0_$creadList
                  Foundation.$fReadKey31
                    `cast`
                  ((<Text.ParserCombinators.ReadPrec.Prec>_R
                    ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                  <Database.Persist.Class.PersistEntity.Key
                                     Foundation.Produto>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                        <Database.Persist.Class.PersistEntity.Key
                                                                           Foundation.Produto>_R))
                  Foundation.$fReadKey0_$creadListPrec -}
d115186e041a4b3c4d5ea956a0e873a2
  $fReadKey0_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Database.Persist.Class.PersistEntity.Key Foundation.Produto]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.Produto]
                   Foundation.$fReadKey37) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fReadKey0_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Database.Persist.Class.PersistEntity.Key Foundation.Produto]
  {- Unfolding: (GHC.Read.list
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                   Foundation.$fReadKey31
                     `cast`
                   ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <Database.Persist.Class.PersistEntity.Key
                                      Foundation.Produto>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                         <Database.Persist.Class.PersistEntity.Key
                                                                            Foundation.Produto>_R))) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fReadKey0_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                   (GHC.Read.$fRead()6
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                      Foundation.$fReadKey32
                        `cast`
                      ((<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Database.Persist.Class.PersistEntity.Key
                                         Foundation.Produto>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                            <Database.Persist.Class.PersistEntity.Key
                                                                               Foundation.Produto>_R))
                      n
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Database.Persist.Class.PersistEntity.Key
                              Foundation.Produto)))) -}
b5272135afcffe4d7282ae6ad9b22515
  $fReadKey1 ::
    GHC.Read.Read
      (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                  Foundation.$fReadKey1_$creadsPrec
                  Foundation.$fReadKey1_$creadList
                  Foundation.$fReadKey38
                    `cast`
                  ((<Text.ParserCombinators.ReadPrec.Prec>_R
                    ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                  <Database.Persist.Class.PersistEntity.Key
                                     Foundation.TipoProduto>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                            <Database.Persist.Class.PersistEntity.Key
                                                                               Foundation.TipoProduto>_R))
                  Foundation.$fReadKey1_$creadListPrec -}
bd2aca7de1e715362685b43fa71d51c1
  $fReadKey10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fReadKey11) -}
ed8b612cd351417349d2b86a6f37dbe6
  $fReadKey11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
3373612305714c5c695b4819ebf4c7fa
  $fReadKey12 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
d26e60ea312a52f3c79d92132615988a
  $fReadKey13 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Database.Persist.Class.PersistStore.BackendKey
          Database.Persist.Sql.Types.Internal.SqlBackend
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds1 :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Database.Persist.Class.PersistStore.BackendKey
                             Database.Persist.Sql.Types.Internal.SqlBackend
                           -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$fRead()6
                   @ (Database.Persist.Class.PersistStore.BackendKey
                        Database.Persist.Sql.Types.Internal.SqlBackend)
                   Database.Persist.Sql.Orphan.PersistStore.$fReadBackendKey3
                     `cast`
                   ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <Database.Persist.Class.PersistStore.BackendKey
                                      Database.Persist.Sql.Types.Internal.SqlBackend>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                                                     <Database.Persist.Class.PersistStore.BackendKey
                                                                                                        Database.Persist.Sql.Types.Internal.SqlBackend>_R))
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ b
                   eta) -}
d85ddd1af148f8c7a84d076fb6a601db
  $fReadKey14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fReadKey15) -}
cdc78bf6759d5c0a56bd43a7684610b3
  $fReadKey15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("unClienteKey"#) -}
ab0e720acfd8349912d50cf443256369
  $fReadKey16 ::
    Text.ParserCombinators.ReadP.P
      [Database.Persist.Class.PersistEntity.Key Foundation.Cliente]
  {- Unfolding: ((Foundation.$fReadKey3_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                       <[Database.Persist.Class.PersistEntity.Key Foundation.Cliente]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0]
                      <[Database.Persist.Class.PersistEntity.Key Foundation.Cliente]>_R)
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.Cliente]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Database.Persist.Class.PersistEntity.Key
                           Foundation.Cliente])) -}
388dd4c04563308c88c61ef89b3610ad
  $fReadKey17 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                   Foundation.$fReadKey18
                     `cast`
                   ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <Database.Persist.Class.PersistEntity.Key
                                      Foundation.ItemPedido>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                            <Database.Persist.Class.PersistEntity.Key
                                                                               Foundation.ItemPedido>_R))) -}
388dd4c04563308c88c61ef89b3610ad
  $fReadKey18 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Database.Persist.Class.PersistEntity.Key
                            Foundation.ItemPedido
                          -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$creadPrec1 ww1 @ b w1 }) -}
aa6da7125988afa48f8093a683c559e0
  $fReadKey19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fReadKey20) -}
b5272135afcffe4d7282ae6ad9b22515
  $fReadKey1_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto]
                   Foundation.$fReadKey44) -}
b5272135afcffe4d7282ae6ad9b22515
  $fReadKey1_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto]
  {- Unfolding: (GHC.Read.list
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                   Foundation.$fReadKey38
                     `cast`
                   ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <Database.Persist.Class.PersistEntity.Key
                                      Foundation.TipoProduto>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                             <Database.Persist.Class.PersistEntity.Key
                                                                                Foundation.TipoProduto>_R))) -}
b5272135afcffe4d7282ae6ad9b22515
  $fReadKey1_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                   (GHC.Read.$fRead()6
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                      Foundation.$fReadKey39
                        `cast`
                      ((<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Database.Persist.Class.PersistEntity.Key
                                         Foundation.TipoProduto>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                                <Database.Persist.Class.PersistEntity.Key
                                                                                   Foundation.TipoProduto>_R))
                      n
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Database.Persist.Class.PersistEntity.Key
                              Foundation.TipoProduto)))) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fReadKey2 ::
    GHC.Read.Read
      (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                  Foundation.$fReadKey2_$creadsPrec
                  Foundation.$fReadKey2_$creadList
                  Foundation.$fReadKey24
                    `cast`
                  ((<Text.ParserCombinators.ReadPrec.Prec>_R
                    ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                  <Database.Persist.Class.PersistEntity.Key
                                     Foundation.Pedido>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                       <Database.Persist.Class.PersistEntity.Key
                                                                          Foundation.Pedido>_R))
                  Foundation.$fReadKey2_$creadListPrec -}
cb3fc1f2c9555472502d043c52385ebe
  $fReadKey20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ItemPedidoKey"#) -}
d60104b577fed217c3d38955d8ca6cda
  $fReadKey21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fReadKey22) -}
253314065a2b9aac99be0f142f16a558
  $fReadKey22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("unItemPedidoKey"#) -}
388dd4c04563308c88c61ef89b3610ad
  $fReadKey23 ::
    Text.ParserCombinators.ReadP.P
      [Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido]
  {- Unfolding: ((Foundation.$fReadKey_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                       <[Database.Persist.Class.PersistEntity.Key
                           Foundation.ItemPedido]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0]
                      <[Database.Persist.Class.PersistEntity.Key
                          Foundation.ItemPedido]>_R)
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Database.Persist.Class.PersistEntity.Key
                           Foundation.ItemPedido])) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fReadKey24 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Pedido
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                   Foundation.$fReadKey25
                     `cast`
                   ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <Database.Persist.Class.PersistEntity.Key
                                      Foundation.Pedido>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                        <Database.Persist.Class.PersistEntity.Key
                                                                           Foundation.Pedido>_R))) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fReadKey25 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Pedido
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Database.Persist.Class.PersistEntity.Key Foundation.Pedido
                          -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$creadPrec2 ww1 @ b w1 }) -}
2f73388b101ce46d535b41563128fa8c
  $fReadKey26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fReadKey27) -}
ab7ce6ec58658b2c84990a742e98a630
  $fReadKey27 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PedidoKey"#) -}
892aa0131e2315bd164f4f335e15bf95
  $fReadKey28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fReadKey29) -}
fb0fb85b08f159045e79aff1f9863c3e
  $fReadKey29 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("unPedidoKey"#) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fReadKey2_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Database.Persist.Class.PersistEntity.Key Foundation.Pedido]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.Pedido]
                   Foundation.$fReadKey30) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fReadKey2_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Database.Persist.Class.PersistEntity.Key Foundation.Pedido]
  {- Unfolding: (GHC.Read.list
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                   Foundation.$fReadKey24
                     `cast`
                   ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <Database.Persist.Class.PersistEntity.Key
                                      Foundation.Pedido>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                        <Database.Persist.Class.PersistEntity.Key
                                                                           Foundation.Pedido>_R))) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fReadKey2_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                   (GHC.Read.$fRead()6
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                      Foundation.$fReadKey25
                        `cast`
                      ((<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Database.Persist.Class.PersistEntity.Key
                                         Foundation.Pedido>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                           <Database.Persist.Class.PersistEntity.Key
                                                                              Foundation.Pedido>_R))
                      n
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Database.Persist.Class.PersistEntity.Key
                              Foundation.Pedido)))) -}
ab0e720acfd8349912d50cf443256369
  $fReadKey3 ::
    GHC.Read.Read
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Foundation.$fReadKey3_$creadsPrec
                  Foundation.$fReadKey3_$creadList
                  Foundation.$fReadKey4
                    `cast`
                  ((<Text.ParserCombinators.ReadPrec.Prec>_R
                    ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                  <Database.Persist.Class.PersistEntity.Key
                                     Foundation.Cliente>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                        <Database.Persist.Class.PersistEntity.Key
                                                                           Foundation.Cliente>_R))
                  Foundation.$fReadKey3_$creadListPrec -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fReadKey30 ::
    Text.ParserCombinators.ReadP.P
      [Database.Persist.Class.PersistEntity.Key Foundation.Pedido]
  {- Unfolding: ((Foundation.$fReadKey2_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                       <[Database.Persist.Class.PersistEntity.Key Foundation.Pedido]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0]
                      <[Database.Persist.Class.PersistEntity.Key Foundation.Pedido]>_R)
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.Pedido]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Database.Persist.Class.PersistEntity.Key Foundation.Pedido])) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fReadKey31 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Produto
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                   Foundation.$fReadKey32
                     `cast`
                   ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <Database.Persist.Class.PersistEntity.Key
                                      Foundation.Produto>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                         <Database.Persist.Class.PersistEntity.Key
                                                                            Foundation.Produto>_R))) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fReadKey32 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Produto
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Database.Persist.Class.PersistEntity.Key Foundation.Produto
                          -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$creadPrec3 ww1 @ b w1 }) -}
4caf99bc64c73354dcd8adc92111c78a
  $fReadKey33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fReadKey34) -}
0d21b373d41309a60a0a1aecdbf113d7
  $fReadKey34 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ProdutoKey"#) -}
329d82669af41fce1bcda44653904642
  $fReadKey35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fReadKey36) -}
6ec0d8f9aa4c07b1e4d2cf8f929df320
  $fReadKey36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("unProdutoKey"#) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fReadKey37 ::
    Text.ParserCombinators.ReadP.P
      [Database.Persist.Class.PersistEntity.Key Foundation.Produto]
  {- Unfolding: ((Foundation.$fReadKey0_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                       <[Database.Persist.Class.PersistEntity.Key Foundation.Produto]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0]
                      <[Database.Persist.Class.PersistEntity.Key Foundation.Produto]>_R)
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.Produto]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Database.Persist.Class.PersistEntity.Key
                           Foundation.Produto])) -}
b5272135afcffe4d7282ae6ad9b22515
  $fReadKey38 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                   Foundation.$fReadKey39
                     `cast`
                   ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <Database.Persist.Class.PersistEntity.Key
                                      Foundation.TipoProduto>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                             <Database.Persist.Class.PersistEntity.Key
                                                                                Foundation.TipoProduto>_R))) -}
b5272135afcffe4d7282ae6ad9b22515
  $fReadKey39 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Database.Persist.Class.PersistEntity.Key
                            Foundation.TipoProduto
                          -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$creadPrec4 ww1 @ b w1 }) -}
ab0e720acfd8349912d50cf443256369
  $fReadKey3_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Database.Persist.Class.PersistEntity.Key Foundation.Cliente]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.Cliente]
                   Foundation.$fReadKey16) -}
ab0e720acfd8349912d50cf443256369
  $fReadKey3_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Database.Persist.Class.PersistEntity.Key Foundation.Cliente]
  {- Unfolding: (GHC.Read.list
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   Foundation.$fReadKey4
                     `cast`
                   ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <Database.Persist.Class.PersistEntity.Key
                                      Foundation.Cliente>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                         <Database.Persist.Class.PersistEntity.Key
                                                                            Foundation.Cliente>_R))) -}
ab0e720acfd8349912d50cf443256369
  $fReadKey3_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   (GHC.Read.$fRead()6
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                      Foundation.$fReadKey5
                        `cast`
                      ((<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Database.Persist.Class.PersistEntity.Key
                                         Foundation.Cliente>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                            <Database.Persist.Class.PersistEntity.Key
                                                                               Foundation.Cliente>_R))
                      n
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Database.Persist.Class.PersistEntity.Key
                              Foundation.Cliente)))) -}
ab0e720acfd8349912d50cf443256369
  $fReadKey4 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Cliente
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   Foundation.$fReadKey5
                     `cast`
                   ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <Database.Persist.Class.PersistEntity.Key
                                      Foundation.Cliente>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                         <Database.Persist.Class.PersistEntity.Key
                                                                            Foundation.Cliente>_R))) -}
98fb7b686724cdca7e6358b6b812c666
  $fReadKey40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fReadKey41) -}
aebc15e92cb286aee2c79878ccaf7daf
  $fReadKey41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TipoProdutoKey"#) -}
5ace35f28ddd247077a9d0eb8ea572df
  $fReadKey42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fReadKey43) -}
532b955a737e2b8bc5026700c46160ed
  $fReadKey43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("unTipoProdutoKey"#) -}
b5272135afcffe4d7282ae6ad9b22515
  $fReadKey44 ::
    Text.ParserCombinators.ReadP.P
      [Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto]
  {- Unfolding: ((Foundation.$fReadKey1_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                       <[Database.Persist.Class.PersistEntity.Key
                           Foundation.TipoProduto]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0]
                      <[Database.Persist.Class.PersistEntity.Key
                          Foundation.TipoProduto]>_R)
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Database.Persist.Class.PersistEntity.Key
                           Foundation.TipoProduto])) -}
ab0e720acfd8349912d50cf443256369
  $fReadKey5 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Cliente
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Database.Persist.Class.PersistEntity.Key Foundation.Cliente
                          -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$creadPrec ww1 @ b w1 }) -}
9ff43438b5f4f1e42034e20671b1a11c
  $fReadKey6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Foundation.$fReadKey7) -}
66f7c75e77aaa2f82f367a4b46fe0390
  $fReadKey7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ClienteKey"#) -}
a119aa22bf33fc75f665fef16f768771
  $fReadKey8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Foundation.$fReadKey9) -}
2a52b287d118b318d8361eddd388e53c
  $fReadKey9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("{"#) -}
388dd4c04563308c88c61ef89b3610ad
  $fReadKey_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido]
                   Foundation.$fReadKey23) -}
388dd4c04563308c88c61ef89b3610ad
  $fReadKey_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido]
  {- Unfolding: (GHC.Read.list
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                   Foundation.$fReadKey17
                     `cast`
                   ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <Database.Persist.Class.PersistEntity.Key
                                      Foundation.ItemPedido>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                            <Database.Persist.Class.PersistEntity.Key
                                                                               Foundation.ItemPedido>_R))) -}
388dd4c04563308c88c61ef89b3610ad
  $fReadKey_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                   (GHC.Read.$fRead()6
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                      Foundation.$fReadKey18
                        `cast`
                      ((<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Database.Persist.Class.PersistEntity.Key
                                         Foundation.ItemPedido>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                               <Database.Persist.Class.PersistEntity.Key
                                                                                  Foundation.ItemPedido>_R))
                      n
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Database.Persist.Class.PersistEntity.Key
                              Foundation.ItemPedido)))) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute ::
    GHC.Read.Read (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fReadRoute_$creadsPrec
                  Foundation.$fReadRoute_$creadList
                  Foundation.$fReadRoute1
                    `cast`
                  ((<Text.ParserCombinators.ReadPrec.Prec>_R
                    ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                  <Yesod.Routes.Class.Route
                                     Foundation.App>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                    <Yesod.Routes.Class.Route
                                                                       Foundation.App>_R))
                  Foundation.$fReadRoute_$creadListPrec -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
b376086c81acf7eaa84399104f53e777
  $fReadRoute10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LogoutR"#) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute11 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute13,
                  Foundation.$fReadRoute12
                    `cast`
                  ((<Text.ParserCombinators.ReadPrec.Prec>_R
                    ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                  <Yesod.Routes.Class.Route
                                     Foundation.App>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                    <Yesod.Routes.Class.Route
                                                                       Foundation.App>_R)))) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute12 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (k :: Yesod.Routes.Class.Route Foundation.App
                         -> Text.ParserCombinators.ReadP.P b) ->
                 k Foundation.CardapioR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
52b361a8448f81a49e254934834d3e13
  $fReadRoute13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fReadRoute14) -}
404405e5b6126788b83885524c1c1dee
  $fReadRoute14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CardapioR"#) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute15 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute17,
                  Foundation.$fReadRoute16
                    `cast`
                  ((<Text.ParserCombinators.ReadPrec.Prec>_R
                    ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                  <Yesod.Routes.Class.Route
                                     Foundation.App>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                    <Yesod.Routes.Class.Route
                                                                       Foundation.App>_R)))) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute16 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (k :: Yesod.Routes.Class.Route Foundation.App
                         -> Text.ParserCombinators.ReadP.P b) ->
                 k Foundation.LoginR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
6705f55fd3600cb3ce8b67cbee2806f6
  $fReadRoute17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fReadRoute18) -}
2ad8b6e1b4b5fb35bc92726cc741a255
  $fReadRoute18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LoginR"#) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute19 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute21,
                  Foundation.$fReadRoute20
                    `cast`
                  ((<Text.ParserCombinators.ReadPrec.Prec>_R
                    ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                  <Yesod.Routes.Class.Route
                                     Foundation.App>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                    <Yesod.Routes.Class.Route
                                                                       Foundation.App>_R)))) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec) ->
                 GHC.Read.choose2
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute_sps
                   eta) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute20 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (k :: Yesod.Routes.Class.Route Foundation.App
                         -> Text.ParserCombinators.ReadP.P b) ->
                 k Foundation.ClienteR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
df483112a60368651e6c63a743c5ee97
  $fReadRoute21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fReadRoute22) -}
f0e6f8c64c55f87c12e5136930e0bfd6
  $fReadRoute22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ClienteR"#) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute23 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute25,
                  Foundation.$fReadRoute24
                    `cast`
                  ((<Text.ParserCombinators.ReadPrec.Prec>_R
                    ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                  <Yesod.Routes.Class.Route
                                     Foundation.App>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                    <Yesod.Routes.Class.Route
                                                                       Foundation.App>_R)))) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute24 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (k :: Yesod.Routes.Class.Route Foundation.App
                         -> Text.ParserCombinators.ReadP.P b) ->
                 k Foundation.HomeR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
fe4bcf55436b9a69a4dacf8e213a8819
  $fReadRoute25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fReadRoute26) -}
bb2403882e7a79e9112a2b9ba26dede6
  $fReadRoute26 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HomeR"#) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute27 ::
    Text.ParserCombinators.ReadP.P
      [Yesod.Routes.Class.Route Foundation.App]
  {- Unfolding: ((Foundation.$fReadRoute_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                       <[Yesod.Routes.Class.Route Foundation.App]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0]
                      <[Yesod.Routes.Class.Route Foundation.App]>_R)
                   @ [Yesod.Routes.Class.Route Foundation.App]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Yesod.Routes.Class.Route Foundation.App])) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute3 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute19
                   Foundation.$fReadRoute4) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute15
                   Foundation.$fReadRoute5) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute11
                   Foundation.$fReadRoute6) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute6 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute7
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           (Yesod.Routes.Class.Route Foundation.App)))) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute7 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute9,
                  Foundation.$fReadRoute8
                    `cast`
                  ((<Text.ParserCombinators.ReadPrec.Prec>_R
                    ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                  <Yesod.Routes.Class.Route
                                     Foundation.App>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                    <Yesod.Routes.Class.Route
                                                                       Foundation.App>_R)))) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute8 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (k :: Yesod.Routes.Class.Route Foundation.App
                         -> Text.ParserCombinators.ReadP.P b) ->
                 k Foundation.LogoutR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
23d15f5160fcd45631f6a880a37b4e3a
  $fReadRoute9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fReadRoute10) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Yesod.Routes.Class.Route Foundation.App]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Yesod.Routes.Class.Route Foundation.App]
                   Foundation.$fReadRoute27) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Yesod.Routes.Class.Route Foundation.App]
  {- Unfolding: (GHC.Read.list
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute1
                     `cast`
                   ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <Yesod.Routes.Class.Route
                                      Foundation.App>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                     <Yesod.Routes.Class.Route
                                                                        Foundation.App>_R))) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   (GHC.Read.$fRead()6
                      @ (Yesod.Routes.Class.Route Foundation.App)
                      Foundation.$fReadRoute2
                        `cast`
                      (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                <Yesod.Routes.Class.Route Foundation.App>_R))
                      n
                      @ (Yesod.Routes.Class.Route Foundation.App)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Yesod.Routes.Class.Route Foundation.App)))) -}
fad4d7498437d0835053b4479d34e8e2
  $fReadRoute_sps ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute23
                   Foundation.$fReadRoute3) -}
fad4d7498437d0835053b4479d34e8e2
  $fRenderMessageAppFormMessage ::
    Text.Shakespeare.I18N.RenderMessage
      Foundation.App Yesod.Form.Types.FormMessage
  DFunId
  {- Arity: 3, Strictness: <L,A><L,A>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                  `cast`
                (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                          <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N)) -}
fad4d7498437d0835053b4479d34e8e2
  $fRenderMessageAppFormMessage_$crenderMessage ::
    Foundation.App
    -> [Text.Shakespeare.I18N.Lang]
    -> Yesod.Form.Types.FormMessage
    -> Data.Text.Internal.Text
  {- Arity: 3, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Foundation.App) (ds1 :: [Text.Shakespeare.I18N.Lang]) ->
                 Yesod.Form.I18n.English.englishFormMessage) -}
fad4d7498437d0835053b4479d34e8e2
  $fRenderRouteApp :: Yesod.Routes.Class.RenderRoute Foundation.App
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fEqRoute
                  Foundation.$fRenderRouteApp_$crenderRoute -}
87111f95f8132c7bbe99af03b47867aa
  $fRenderRouteApp1 ::
    ([Data.Text.Internal.Text],
     [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
  {- Strictness: m,
     Unfolding: ((Foundation.$fRenderRouteApp2,
                  GHC.Types.[]
                    @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
da3a6ebf955a5763f884dfa1da66dd22
  $fRenderRouteApp2 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fParseRouteApp5
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
a7092013cdbcd7a1e88370f66015c6a8
  $fRenderRouteApp3 ::
    ([Data.Text.Internal.Text],
     [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
  {- Strictness: m,
     Unfolding: ((Foundation.$fRenderRouteApp4,
                  GHC.Types.[]
                    @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
d3521685bef0fb0fd994d1a75d83f6da
  $fRenderRouteApp4 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fParseRouteApp7
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
b7d9099d3360019dcfa6d88f676398cd
  $fRenderRouteApp5 ::
    ([Data.Text.Internal.Text],
     [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
  {- Strictness: m,
     Unfolding: ((Foundation.$fRenderRouteApp6,
                  GHC.Types.[]
                    @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
cfc7e1a4ee2da5e3440607477fa956d3
  $fRenderRouteApp6 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fParseRouteApp9
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
be1dd551d721cfa6a1f5a90f1ee2f521
  $fRenderRouteApp7 ::
    ([Data.Text.Internal.Text],
     [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
  {- Strictness: m,
     Unfolding: ((Foundation.$fRenderRouteApp8,
                  GHC.Types.[]
                    @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
ad159ab763e2e217dccee18daadf3487
  $fRenderRouteApp8 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fParseRouteApp11
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
40e4e465f6ae730e90b9bd24a8c496dc
  $fRenderRouteApp9 ::
    ([Data.Text.Internal.Text],
     [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((GHC.Types.[] @ Data.Text.Internal.Text,
                  GHC.Types.[]
                    @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
fad4d7498437d0835053b4479d34e8e2
  $fRenderRouteApp_$crenderRoute ::
    Yesod.Routes.Class.Route Foundation.App
    -> ([Data.Text.Internal.Text],
        [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
  {- Arity: 1, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Yesod.Routes.Class.Route Foundation.App) ->
                 case ds `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   Foundation.HomeR -> Foundation.$fRenderRouteApp9
                   Foundation.ClienteR -> Foundation.$fRenderRouteApp7
                   Foundation.LoginR -> Foundation.$fRenderRouteApp5
                   Foundation.CardapioR -> Foundation.$fRenderRouteApp3
                   Foundation.LogoutR -> Foundation.$fRenderRouteApp1 }) -}
fad4d7498437d0835053b4479d34e8e2
  $fRouteAttrsApp :: Yesod.Routes.Class.RouteAttrs Foundation.App
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fRouteAttrsApp_$crouteAttrs -}
fa64967d7478d12cc74814be0b17bd9e
  $fRouteAttrsApp1 :: Data.Set.Internal.Set Data.Text.Internal.Text
  {- Unfolding: (Foundation.$fRouteAttrsApp_$sfromList
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
fad4d7498437d0835053b4479d34e8e2
  $fRouteAttrsApp_$crouteAttrs ::
    Yesod.Routes.Class.Route Foundation.App
    -> Data.Set.Internal.Set Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Yesod.Routes.Class.Route Foundation.App) ->
                 case ds `cast` (Foundation.D:R:RouteApp0[0]) of wild { DEFAULT ->
                 Foundation.$fRouteAttrsApp1 }) -}
9a7eb49ecbf21d7e604c38e6334520ba
  $fRouteAttrsApp_$s$wgo3 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [Data.Text.Internal.Text]
    -> Data.Set.Internal.Set Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Set.Internal.Set Data.Text.Internal.Text
  {- Arity: 6, Strictness: <S,U><S,U><S,U><S,1*U><S,1*U><L,U> -}
c508301d62c3f1d10cc783062f318242
  $fRouteAttrsApp_$sfromList ::
    [Data.Text.Internal.Text]
    -> Data.Set.Internal.Set Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [Data.Text.Internal.Text]) ->
                 case ds of wild {
                   [] -> Data.Set.Internal.Tip @ Data.Text.Internal.Text
                   : x ds1
                   -> case ds1 of wild1 {
                        []
                        -> case x of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                           Data.Set.Internal.Bin
                             @ Data.Text.Internal.Text
                             1#
                             dt
                             (Data.Set.Internal.Tip @ Data.Text.Internal.Text)
                             (Data.Set.Internal.Tip @ Data.Text.Internal.Text) }
                        : ipv ipv1
                        -> case x of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case ipv of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                             DEFAULT
                             -> Foundation.$fRouteAttrsApp_$sgo4
                                  ww5
                                  ww6
                                  ww7
                                  ipv1
                                  (Data.Set.Internal.Bin
                                     @ Data.Text.Internal.Text
                                     1#
                                     ww
                                     (Data.Set.Internal.Tip @ Data.Text.Internal.Text)
                                     (Data.Set.Internal.Tip @ Data.Text.Internal.Text))
                             GHC.Types.LT
                             -> Foundation.$fRouteAttrsApp_$s$wgo3
                                  ww5
                                  ww6
                                  ww7
                                  ipv1
                                  (Data.Set.Internal.Bin
                                     @ Data.Text.Internal.Text
                                     1#
                                     ww
                                     (Data.Set.Internal.Tip @ Data.Text.Internal.Text)
                                     (Data.Set.Internal.Tip @ Data.Text.Internal.Text))
                                  1# } } } } }) -}
59b496de4b63395b025c8ce41007a146
  $fRouteAttrsApp_$sgo4 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [Data.Text.Internal.Text]
    -> Data.Set.Internal.Set Data.Text.Internal.Text
    -> Data.Set.Internal.Set Data.Text.Internal.Text
  {- Arity: 5, Strictness: <S,U><S,U><S,U><S,1*U><S,1*U> -}
388dd4c04563308c88c61ef89b3610ad
  $fShowKey ::
    GHC.Show.Show
      (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                  Foundation.$fShowKey_$cshowsPrec
                  Foundation.$fShowKey_$cshow
                  Foundation.$fShowKey_$cshowList -}
d115186e041a4b3c4d5ea956a0e873a2
  $fShowKey0 ::
    GHC.Show.Show
      (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                  Foundation.$fShowKey0_$cshowsPrec
                  Foundation.$fShowKey0_$cshow
                  Foundation.$fShowKey0_$cshowList -}
d115186e041a4b3c4d5ea956a0e873a2
  $fShowKey0_$cshow ::
    Database.Persist.Class.PersistEntity.Key Foundation.Produto
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U(U)>,
     Unfolding: (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Produto) ->
                 GHC.CString.unpackAppendCString#
                   Foundation.$fShowKey15
                   (GHC.CString.unpackAppendCString#
                      Foundation.$fShowKey14
                      (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                         0#
                         x `cast`
                         (Foundation.D:R:KeyProduto0[0] ; Foundation.N:R:KeyProduto[0])
                         Foundation.$fReadKey10))) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fShowKey0_$cshowList ::
    [Database.Persist.Class.PersistEntity.Key Foundation.Produto]
    -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Database.Persist.Class.PersistEntity.Key
                             Foundation.Produto])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                   Foundation.$fShowKey13
                   ls
                   s) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fShowKey0_$cshowsPrec ::
    GHC.Types.Int
    -> Database.Persist.Class.PersistEntity.Key Foundation.Produto
    -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$cshowsPrec3 ww1 w1 w2 }) -}
b5272135afcffe4d7282ae6ad9b22515
  $fShowKey1 ::
    GHC.Show.Show
      (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                  Foundation.$fShowKey1_$cshowsPrec
                  Foundation.$fShowKey1_$cshow
                  Foundation.$fShowKey1_$cshowList -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fShowKey10 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Pedido
    -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: (\ (w :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Pedido)
                   (w1 :: GHC.Base.String) ->
                 Foundation.$w$cshowsPrec2 0# w w1) -}
88306308379f61a246b41e82afc56e76
  $fShowKey11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("unPedidoKey = "#) -}
4db1f789268a3d48f1992a268071ed63
  $fShowKey12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PedidoKey {"#) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fShowKey13 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Produto
    -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: (\ (w :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Produto)
                   (w1 :: GHC.Base.String) ->
                 Foundation.$w$cshowsPrec3 0# w w1) -}
fec92140fe3fc57bead8b827075fb5aa
  $fShowKey14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("unProdutoKey = "#) -}
c407666e441476f80cb5a4df2c24e3a0
  $fShowKey15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ProdutoKey {"#) -}
b5272135afcffe4d7282ae6ad9b22515
  $fShowKey16 ::
    Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto
    -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: (\ (w :: Database.Persist.Class.PersistEntity.Key
                           Foundation.TipoProduto)
                   (w1 :: GHC.Base.String) ->
                 Foundation.$w$cshowsPrec4 0# w w1) -}
9daaa33c34b69c68e9f405d83966b522
  $fShowKey17 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("unTipoProdutoKey = "#) -}
1fd3c68c40b735516a64213ea0f0b9d7
  $fShowKey18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TipoProdutoKey {"#) -}
b5272135afcffe4d7282ae6ad9b22515
  $fShowKey1_$cshow ::
    Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U(U)>,
     Unfolding: (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.TipoProduto) ->
                 GHC.CString.unpackAppendCString#
                   Foundation.$fShowKey18
                   (GHC.CString.unpackAppendCString#
                      Foundation.$fShowKey17
                      (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                         0#
                         x `cast`
                         (Foundation.D:R:KeyTipoProduto0[0] ; Foundation.N:R:KeyTipoProduto[0])
                         Foundation.$fReadKey10))) -}
b5272135afcffe4d7282ae6ad9b22515
  $fShowKey1_$cshowList ::
    [Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto]
    -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Database.Persist.Class.PersistEntity.Key
                             Foundation.TipoProduto])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                   Foundation.$fShowKey16
                   ls
                   s) -}
b5272135afcffe4d7282ae6ad9b22515
  $fShowKey1_$cshowsPrec ::
    GHC.Types.Int
    -> Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto
    -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Database.Persist.Class.PersistEntity.Key
                            Foundation.TipoProduto)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$cshowsPrec4 ww1 w1 w2 }) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fShowKey2 ::
    GHC.Show.Show
      (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                  Foundation.$fShowKey2_$cshowsPrec
                  Foundation.$fShowKey2_$cshow
                  Foundation.$fShowKey2_$cshowList -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fShowKey2_$cshow ::
    Database.Persist.Class.PersistEntity.Key Foundation.Pedido
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U(U)>,
     Unfolding: (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Pedido) ->
                 GHC.CString.unpackAppendCString#
                   Foundation.$fShowKey12
                   (GHC.CString.unpackAppendCString#
                      Foundation.$fShowKey11
                      (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                         0#
                         x `cast`
                         (Foundation.D:R:KeyPedido0[0] ; Foundation.N:R:KeyPedido[0])
                         Foundation.$fReadKey10))) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fShowKey2_$cshowList ::
    [Database.Persist.Class.PersistEntity.Key Foundation.Pedido]
    -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Database.Persist.Class.PersistEntity.Key
                             Foundation.Pedido])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                   Foundation.$fShowKey10
                   ls
                   s) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fShowKey2_$cshowsPrec ::
    GHC.Types.Int
    -> Database.Persist.Class.PersistEntity.Key Foundation.Pedido
    -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$cshowsPrec2 ww1 w1 w2 }) -}
ab0e720acfd8349912d50cf443256369
  $fShowKey3 ::
    GHC.Show.Show
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Foundation.$fShowKey3_$cshowsPrec
                  Foundation.$fShowKey3_$cshow
                  Foundation.$fShowKey3_$cshowList -}
ab0e720acfd8349912d50cf443256369
  $fShowKey3_$cshow ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U(U)>,
     Unfolding: (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Cliente) ->
                 GHC.CString.unpackAppendCString#
                   Foundation.$fShowKey6
                   (GHC.CString.unpackAppendCString#
                      Foundation.$fShowKey5
                      (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                         0#
                         x `cast`
                         (Foundation.D:R:KeyCliente0[0] ; Foundation.N:R:KeyCliente[0])
                         Foundation.$fReadKey10))) -}
ab0e720acfd8349912d50cf443256369
  $fShowKey3_$cshowList ::
    [Database.Persist.Class.PersistEntity.Key Foundation.Cliente]
    -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Database.Persist.Class.PersistEntity.Key
                             Foundation.Cliente])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   Foundation.$fShowKey4
                   ls
                   s) -}
ab0e720acfd8349912d50cf443256369
  $fShowKey3_$cshowsPrec ::
    GHC.Types.Int
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$cshowsPrec ww1 w1 w2 }) -}
ab0e720acfd8349912d50cf443256369
  $fShowKey4 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: (\ (w :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Cliente)
                   (w1 :: GHC.Base.String) ->
                 Foundation.$w$cshowsPrec 0# w w1) -}
b824f6e600b3d904f17077d624a95d6b
  $fShowKey5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("unClienteKey = "#) -}
2b4ce5d0fde26b639f6105defc3c9978
  $fShowKey6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ClienteKey {"#) -}
388dd4c04563308c88c61ef89b3610ad
  $fShowKey7 ::
    Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido
    -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: (\ (w :: Database.Persist.Class.PersistEntity.Key
                           Foundation.ItemPedido)
                   (w1 :: GHC.Base.String) ->
                 Foundation.$w$cshowsPrec1 0# w w1) -}
1ac8d80741a3a1b0e5fa1c8d89924385
  $fShowKey8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("unItemPedidoKey = "#) -}
7491f56602946348d0e6b25da3aeb14f
  $fShowKey9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ItemPedidoKey {"#) -}
388dd4c04563308c88c61ef89b3610ad
  $fShowKey_$cshow ::
    Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U(U)>,
     Unfolding: (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.ItemPedido) ->
                 GHC.CString.unpackAppendCString#
                   Foundation.$fShowKey9
                   (GHC.CString.unpackAppendCString#
                      Foundation.$fShowKey8
                      (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                         0#
                         x `cast`
                         (Foundation.D:R:KeyItemPedido0[0] ; Foundation.N:R:KeyItemPedido[0])
                         Foundation.$fReadKey10))) -}
388dd4c04563308c88c61ef89b3610ad
  $fShowKey_$cshowList ::
    [Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido]
    -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Database.Persist.Class.PersistEntity.Key
                             Foundation.ItemPedido])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                   Foundation.$fShowKey7
                   ls
                   s) -}
388dd4c04563308c88c61ef89b3610ad
  $fShowKey_$cshowsPrec ::
    GHC.Types.Int
    -> Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido
    -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Database.Persist.Class.PersistEntity.Key
                            Foundation.ItemPedido)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$cshowsPrec1 ww1 w1 w2 }) -}
fad4d7498437d0835053b4479d34e8e2
  $fShowRoute ::
    GHC.Show.Show (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fShowRoute_$cshowsPrec
                  Foundation.$fShowRoute_$cshow
                  Foundation.$fShowRoute_$cshowList -}
fad4d7498437d0835053b4479d34e8e2
  $fShowRoute_$cshow ::
    Yesod.Routes.Class.Route Foundation.App -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Yesod.Routes.Class.Route Foundation.App) ->
                 case x `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   Foundation.HomeR -> Foundation.$fReadRoute25
                   Foundation.ClienteR -> Foundation.$fReadRoute21
                   Foundation.LoginR -> Foundation.$fReadRoute17
                   Foundation.CardapioR -> Foundation.$fReadRoute13
                   Foundation.LogoutR -> Foundation.$fReadRoute9 }) -}
fad4d7498437d0835053b4479d34e8e2
  $fShowRoute_$cshowList ::
    [Yesod.Routes.Class.Route Foundation.App] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Yesod.Routes.Class.Route Foundation.App])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$w$cshowsPrec5
                   ls
                   s) -}
fad4d7498437d0835053b4479d34e8e2
  $fShowRoute_$cshowsPrec ::
    GHC.Types.Int
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Yesod.Routes.Class.Route Foundation.App)
                   (w2 :: GHC.Base.String) ->
                 Foundation.$w$cshowsPrec5 w1 w2) -}
ab0e720acfd8349912d50cf443256369
  $fToBackendKeySqlBackendCliente ::
    Database.Persist.Class.PersistStore.ToBackendKey
      Database.Persist.Sql.Types.Internal.SqlBackend Foundation.Cliente
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Database.Persist.Sql.Types.Internal.SqlBackend
                  @ Foundation.Cliente
                  Foundation.$fPersistEntityCliente
                  Foundation.$fToBackendKeySqlBackendCliente_$d~~
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) (Sym (Foundation.D:R:PersistEntityBackendCliente[0])) <Database.Persist.Sql.Types.Internal.SqlBackend>_N)
                  Database.Persist.Sql.Orphan.PersistStore.$fPersistCoreSqlBackend
                  Foundation.$fToBackendKeySqlBackendCliente1
                    `cast`
                  (<Database.Persist.Class.PersistEntity.Key Foundation.Cliente>_R
                   ->_R Foundation.D:R:KeyCliente0[0] ; Foundation.N:R:KeyCliente[0])
                  (\ (v :: Database.Persist.Class.PersistStore.BackendKey
                             Database.Persist.Sql.Types.Internal.SqlBackend) ->
                   v)
                    `cast`
                  (<Database.Persist.Class.PersistStore.BackendKey
                      Database.Persist.Sql.Types.Internal.SqlBackend>_R
                   ->_R Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0])) -}
ab0e720acfd8349912d50cf443256369
  $fToBackendKeySqlBackendCliente1 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Database.Persist.Class.PersistEntity.Key
                            Foundation.Cliente) ->
                 ds) -}
524acf9f97d1955fd77e77e34424a12d
  $fToBackendKeySqlBackendCliente_$d~~ ::
    (Database.Persist.Sql.Types.Internal.SqlBackend :: *)
    GHC.Types.~~ (Database.Persist.Sql.Types.Internal.SqlBackend :: *)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
388dd4c04563308c88c61ef89b3610ad
  $fToBackendKeySqlBackendItemPedido ::
    Database.Persist.Class.PersistStore.ToBackendKey
      Database.Persist.Sql.Types.Internal.SqlBackend
      Foundation.ItemPedido
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Database.Persist.Sql.Types.Internal.SqlBackend
                  @ Foundation.ItemPedido
                  Foundation.$fPersistEntityItemPedido
                  Foundation.$fToBackendKeySqlBackendCliente_$d~~
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) (Sym (Foundation.D:R:PersistEntityBackendItemPedido[0])) <Database.Persist.Sql.Types.Internal.SqlBackend>_N)
                  Database.Persist.Sql.Orphan.PersistStore.$fPersistCoreSqlBackend
                  Foundation.$fToBackendKeySqlBackendItemPedido1
                    `cast`
                  (<Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido>_R
                   ->_R Foundation.D:R:KeyItemPedido0[0] ; Foundation.N:R:KeyItemPedido[0])
                  (\ (v :: Database.Persist.Class.PersistStore.BackendKey
                             Database.Persist.Sql.Types.Internal.SqlBackend) ->
                   v)
                    `cast`
                  (<Database.Persist.Class.PersistStore.BackendKey
                      Database.Persist.Sql.Types.Internal.SqlBackend>_R
                   ->_R Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0])) -}
388dd4c04563308c88c61ef89b3610ad
  $fToBackendKeySqlBackendItemPedido1 ::
    Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido
    -> Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Database.Persist.Class.PersistEntity.Key
                            Foundation.ItemPedido) ->
                 ds) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fToBackendKeySqlBackendPedido ::
    Database.Persist.Class.PersistStore.ToBackendKey
      Database.Persist.Sql.Types.Internal.SqlBackend Foundation.Pedido
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Database.Persist.Sql.Types.Internal.SqlBackend
                  @ Foundation.Pedido
                  Foundation.$fPersistEntityPedido
                  Foundation.$fToBackendKeySqlBackendCliente_$d~~
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) (Sym (Foundation.D:R:PersistEntityBackendPedido[0])) <Database.Persist.Sql.Types.Internal.SqlBackend>_N)
                  Database.Persist.Sql.Orphan.PersistStore.$fPersistCoreSqlBackend
                  Foundation.$fToBackendKeySqlBackendPedido1
                    `cast`
                  (<Database.Persist.Class.PersistEntity.Key Foundation.Pedido>_R
                   ->_R Foundation.D:R:KeyPedido0[0] ; Foundation.N:R:KeyPedido[0])
                  (\ (v :: Database.Persist.Class.PersistStore.BackendKey
                             Database.Persist.Sql.Types.Internal.SqlBackend) ->
                   v)
                    `cast`
                  (<Database.Persist.Class.PersistStore.BackendKey
                      Database.Persist.Sql.Types.Internal.SqlBackend>_R
                   ->_R Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0])) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fToBackendKeySqlBackendPedido1 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Pedido
    -> Database.Persist.Class.PersistEntity.Key Foundation.Pedido
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Database.Persist.Class.PersistEntity.Key
                            Foundation.Pedido) ->
                 ds) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fToBackendKeySqlBackendProduto ::
    Database.Persist.Class.PersistStore.ToBackendKey
      Database.Persist.Sql.Types.Internal.SqlBackend Foundation.Produto
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Database.Persist.Sql.Types.Internal.SqlBackend
                  @ Foundation.Produto
                  Foundation.$fPersistEntityProduto
                  Foundation.$fToBackendKeySqlBackendCliente_$d~~
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) (Sym (Foundation.D:R:PersistEntityBackendProduto[0])) <Database.Persist.Sql.Types.Internal.SqlBackend>_N)
                  Database.Persist.Sql.Orphan.PersistStore.$fPersistCoreSqlBackend
                  Foundation.$fToBackendKeySqlBackendProduto1
                    `cast`
                  (<Database.Persist.Class.PersistEntity.Key Foundation.Produto>_R
                   ->_R Foundation.D:R:KeyProduto0[0] ; Foundation.N:R:KeyProduto[0])
                  (\ (v :: Database.Persist.Class.PersistStore.BackendKey
                             Database.Persist.Sql.Types.Internal.SqlBackend) ->
                   v)
                    `cast`
                  (<Database.Persist.Class.PersistStore.BackendKey
                      Database.Persist.Sql.Types.Internal.SqlBackend>_R
                   ->_R Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0])) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fToBackendKeySqlBackendProduto1 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Produto
    -> Database.Persist.Class.PersistEntity.Key Foundation.Produto
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Database.Persist.Class.PersistEntity.Key
                            Foundation.Produto) ->
                 ds) -}
b5272135afcffe4d7282ae6ad9b22515
  $fToBackendKeySqlBackendTipoProduto ::
    Database.Persist.Class.PersistStore.ToBackendKey
      Database.Persist.Sql.Types.Internal.SqlBackend
      Foundation.TipoProduto
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Database.Persist.Sql.Types.Internal.SqlBackend
                  @ Foundation.TipoProduto
                  Foundation.$fPersistEntityTipoProduto
                  Foundation.$fToBackendKeySqlBackendCliente_$d~~
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) (Sym (Foundation.D:R:PersistEntityBackendTipoProduto[0])) <Database.Persist.Sql.Types.Internal.SqlBackend>_N)
                  Database.Persist.Sql.Orphan.PersistStore.$fPersistCoreSqlBackend
                  Foundation.$fToBackendKeySqlBackendTipoProduto1
                    `cast`
                  (<Database.Persist.Class.PersistEntity.Key
                      Foundation.TipoProduto>_R
                   ->_R Foundation.D:R:KeyTipoProduto0[0] ; Foundation.N:R:KeyTipoProduto[0])
                  (\ (v :: Database.Persist.Class.PersistStore.BackendKey
                             Database.Persist.Sql.Types.Internal.SqlBackend) ->
                   v)
                    `cast`
                  (<Database.Persist.Class.PersistStore.BackendKey
                      Database.Persist.Sql.Types.Internal.SqlBackend>_R
                   ->_R Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0])) -}
b5272135afcffe4d7282ae6ad9b22515
  $fToBackendKeySqlBackendTipoProduto1 ::
    Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto
    -> Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Database.Persist.Class.PersistEntity.Key
                            Foundation.TipoProduto) ->
                 ds) -}
388dd4c04563308c88c61ef89b3610ad
  $fToHttpApiDataKey ::
    Web.Internal.HttpApiData.ToHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoUrlPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R <Data.Text.Internal.Text>_R)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoEncodedUrlPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R <Data.ByteString.Builder.Internal.Builder>_R)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoHeader
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R <Data.ByteString.Internal.ByteString>_R)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoUrlPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R <Data.Text.Internal.Text>_R) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fToHttpApiDataKey0 ::
    Web.Internal.HttpApiData.ToHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoUrlPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R <Data.Text.Internal.Text>_R)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoEncodedUrlPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R <Data.ByteString.Builder.Internal.Builder>_R)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoHeader
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R <Data.ByteString.Internal.ByteString>_R)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoUrlPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R <Data.Text.Internal.Text>_R) -}
b5272135afcffe4d7282ae6ad9b22515
  $fToHttpApiDataKey1 ::
    Web.Internal.HttpApiData.ToHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoUrlPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R <Data.Text.Internal.Text>_R)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoEncodedUrlPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R <Data.ByteString.Builder.Internal.Builder>_R)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoHeader
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R <Data.ByteString.Internal.ByteString>_R)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoUrlPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R <Data.Text.Internal.Text>_R) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fToHttpApiDataKey2 ::
    Web.Internal.HttpApiData.ToHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoUrlPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R <Data.Text.Internal.Text>_R)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoEncodedUrlPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R <Data.ByteString.Builder.Internal.Builder>_R)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoHeader
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R <Data.ByteString.Internal.ByteString>_R)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoUrlPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R <Data.Text.Internal.Text>_R) -}
ab0e720acfd8349912d50cf443256369
  $fToHttpApiDataKey3 ::
    Web.Internal.HttpApiData.ToHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoUrlPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R <Data.Text.Internal.Text>_R)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoEncodedUrlPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R <Data.ByteString.Builder.Internal.Builder>_R)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoHeader
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R <Data.ByteString.Internal.ByteString>_R)
                  Web.Internal.HttpApiData.$fToHttpApiDataInt64_$ctoUrlPiece
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R <Data.Text.Internal.Text>_R) -}
388dd4c04563308c88c61ef89b3610ad
  $fToJSONKey ::
    Data.Aeson.Types.ToJSON.ToJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido)
                  Data.Aeson.Types.ToJSON.$fToJSONInt64_$ctoJSON
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R <Data.Aeson.Types.Internal.Value>_R)
                  Data.Aeson.Encoding.Internal.int4
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))))
                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P))
                  Data.Aeson.Types.ToJSON.$fToJSONInt64_$ctoJSONList
                    `cast`
                  (([Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0])))])_R
                   ->_R <Data.Aeson.Types.Internal.Value>_R)
                  Data.Aeson.Types.ToJSON.$fToJSONInt64_$ctoEncodingList
                    `cast`
                  (([Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0])))])_R
                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                           Data.Aeson.Types.Internal.Value>_R) -}
d115186e041a4b3c4d5ea956a0e873a2
  $fToJSONKey0 ::
    Data.Aeson.Types.ToJSON.ToJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                  Data.Aeson.Types.ToJSON.$fToJSONInt64_$ctoJSON
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R <Data.Aeson.Types.Internal.Value>_R)
                  Data.Aeson.Encoding.Internal.int4
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))))
                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P))
                  Data.Aeson.Types.ToJSON.$fToJSONInt64_$ctoJSONList
                    `cast`
                  (([Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0])))])_R
                   ->_R <Data.Aeson.Types.Internal.Value>_R)
                  Data.Aeson.Types.ToJSON.$fToJSONInt64_$ctoEncodingList
                    `cast`
                  (([Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0])))])_R
                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                           Data.Aeson.Types.Internal.Value>_R) -}
b5272135afcffe4d7282ae6ad9b22515
  $fToJSONKey1 ::
    Data.Aeson.Types.ToJSON.ToJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto)
                  Data.Aeson.Types.ToJSON.$fToJSONInt64_$ctoJSON
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R <Data.Aeson.Types.Internal.Value>_R)
                  Data.Aeson.Encoding.Internal.int4
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))))
                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P))
                  Data.Aeson.Types.ToJSON.$fToJSONInt64_$ctoJSONList
                    `cast`
                  (([Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0])))])_R
                   ->_R <Data.Aeson.Types.Internal.Value>_R)
                  Data.Aeson.Types.ToJSON.$fToJSONInt64_$ctoEncodingList
                    `cast`
                  (([Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0])))])_R
                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                           Data.Aeson.Types.Internal.Value>_R) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $fToJSONKey2 ::
    Data.Aeson.Types.ToJSON.ToJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                  Data.Aeson.Types.ToJSON.$fToJSONInt64_$ctoJSON
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R <Data.Aeson.Types.Internal.Value>_R)
                  Data.Aeson.Encoding.Internal.int4
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))))
                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P))
                  Data.Aeson.Types.ToJSON.$fToJSONInt64_$ctoJSONList
                    `cast`
                  (([Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0])))])_R
                   ->_R <Data.Aeson.Types.Internal.Value>_R)
                  Data.Aeson.Types.ToJSON.$fToJSONInt64_$ctoEncodingList
                    `cast`
                  (([Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0])))])_R
                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                           Data.Aeson.Types.Internal.Value>_R) -}
ab0e720acfd8349912d50cf443256369
  $fToJSONKey3 ::
    Data.Aeson.Types.ToJSON.ToJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Data.Aeson.Types.ToJSON.$fToJSONInt64_$ctoJSON
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R <Data.Aeson.Types.Internal.Value>_R)
                  Data.Aeson.Encoding.Internal.int4
                    `cast`
                  ((Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))))
                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P))
                  Data.Aeson.Types.ToJSON.$fToJSONInt64_$ctoJSONList
                    `cast`
                  (([Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0])))])_R
                   ->_R <Data.Aeson.Types.Internal.Value>_R)
                  Data.Aeson.Types.ToJSON.$fToJSONInt64_$ctoEncodingList
                    `cast`
                  (([Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0])))])_R
                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                           Data.Aeson.Types.Internal.Value>_R) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp :: Yesod.Core.Class.Yesod.Yesod Foundation.App
  DFunId
  {- Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  (Yesod.Core.Class.Yesod.guessApproot @ Foundation.App)
                  Foundation.$fYesodApp_$cerrorHandler
                  Foundation.$fYesodApp44
                    `cast`
                  (<Yesod.Core.Types.WidgetFor Foundation.App ()>_R
                   ->_R (<Yesod.Core.Types.HandlerData
                            Foundation.App Foundation.App>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Text.Blaze.Html.Html>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                                             <Foundation.App>_N
                                                                             <Text.Blaze.Html.Html>_R))
                  Foundation.$fYesodApp_$curlParamRenderOverride
                  Foundation.$fYesodApp43
                    `cast`
                  (<Yesod.Routes.Class.Route Foundation.App>_R
                   ->_R <GHC.Types.Bool>_R
                   ->_R (<Yesod.Core.Types.HandlerData
                            Foundation.App Foundation.App>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Yesod.Core.Types.AuthResult>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                                                    <Foundation.App>_N
                                                                                    <Yesod.Core.Types.AuthResult>_R))
                  Foundation.$fYesodApp33
                    `cast`
                  (<Yesod.Routes.Class.Route Foundation.App>_R
                   ->_R (<Yesod.Core.Types.HandlerData
                            Foundation.App Foundation.App>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <GHC.Types.Bool>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                                       <Foundation.App>_N
                                                                       <GHC.Types.Bool>_R))
                  Foundation.$fYesodApp_$cauthRoute
                  Foundation.$fYesodApp_$ccleanPath
                  Foundation.$fYesodApp26
                    `cast`
                  (<Foundation.App>_R
                   ->_R <Data.Text.Internal.Text>_R
                   ->_R <[Data.Text.Internal.Text]>_R
                   ->_R <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]>_R
                   ->_R Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                  Foundation.$fYesodApp25
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R <Data.Text.Internal.Text>_R
                   ->_R <Data.ByteString.Lazy.Internal.ByteString>_R
                   ->_R (<Yesod.Core.Types.HandlerData
                            Foundation.App Foundation.App>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <GHC.Base.Maybe
                                          (Data.Either.Either
                                             Data.Text.Internal.Text
                                             (Yesod.Routes.Class.Route Foundation.App,
                                              [(Data.Text.Internal.Text,
                                                Data.Text.Internal.Text)]))>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                                                            <Foundation.App>_N
                                                                                            <GHC.Base.Maybe
                                                                                               (Data.Either.Either
                                                                                                  Data.Text.Internal.Text
                                                                                                  (Yesod.Routes.Class.Route
                                                                                                     Foundation.App,
                                                                                                   [(Data.Text.Internal.Text,
                                                                                                     Data.Text.Internal.Text)]))>_R))
                  Foundation.$fYesodApp_$cmaximumContentLength
                  Foundation.$fYesodApp22
                    `cast`
                  (<Foundation.App>_R
                   ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.Logger>_R))
                  Foundation.$fYesodApp20
                    `cast`
                  (<Foundation.App>_R
                   ->_R <Yesod.Core.Types.Logger>_R
                   ->_R <Language.Haskell.TH.Syntax.Loc>_R
                   ->_R <Control.Monad.Logger.LogSource>_R
                   ->_R <Control.Monad.Logger.LogLevel>_R
                   ->_R <System.Log.FastLogger.LogStr.LogStr>_R
                   ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                  Foundation.$fYesodApp_$cjsLoader
                  Foundation.$fYesodApp_$cjsAttributes
                  Foundation.$fYesodApp18
                    `cast`
                  (<Foundation.App>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <GHC.Base.Maybe Yesod.Core.Types.SessionBackend>_R))
                  Foundation.$fYesodApp_$cfileUpload
                  Foundation.$fYesodApp14
                    `cast`
                  (<Foundation.App>_R
                   ->_R <Control.Monad.Logger.LogSource>_R
                   ->_R <Control.Monad.Logger.LogLevel>_R
                   ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                  Foundation.$fYesodApp12
                    `cast`
                  (forall (res :: <*>_N).
                   <Yesod.Core.Content.ToTypedContent res>_R
                   ->_R <Yesod.Core.Types.HandlerFor Foundation.App res>_R
                   ->_R (<Yesod.Core.Types.HandlerData
                            Foundation.App Foundation.App>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <res>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                            <Foundation.App>_N <res>_R))
                  Foundation.$fYesodApp_$cyesodWithInternalState
                  Foundation.$fYesodApp1
                    `cast`
                  (<Text.Blaze.Html.Html>_R
                   ->_R <Text.Hamlet.HtmlUrl
                           (Yesod.Routes.Class.Route Foundation.App)>_R
                   ->_R (<Yesod.Core.Types.WidgetData Foundation.App>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <()>_R)) ; Sym (Yesod.Core.Types.N:WidgetFor[0]
                                                           <Foundation.App>_N <()>_R)) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp1 ::
    Text.Blaze.Html.Html
    -> Text.Hamlet.HtmlUrl (Yesod.Routes.Class.Route Foundation.App)
    -> Yesod.Core.Types.WidgetData Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <L,U><L,C(U)><S(SLLSS),1*U(U,A,A,1*U,1*U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Text.Blaze.Html.Html)
                   (w1 :: Text.Hamlet.HtmlUrl
                            (Yesod.Routes.Class.Route Foundation.App))
                   (w2 :: Yesod.Core.Types.WidgetData Foundation.App)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w2 of ww { Yesod.Core.Types.WidgetData ww1 ww2 ww3 ww4 ww5 ->
                 Foundation.$w$cdefaultMessageWidget w w1 ww1 ww4 ww5 w3 }) -}
58de3fb242f5d8ec6925f64630cc1cab
  $fYesodApp10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fYesodApp11) -}
bac1b69c2d33e8aa48af08cf866d69f6
  $fYesodApp11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<h1>"#) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp12 ::
    Yesod.Core.Content.ToTypedContent res =>
    Yesod.Core.Types.HandlerFor Foundation.App res
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, res #)
  {- Arity: 4, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ res
                   ($dToTypedContent :: Yesod.Core.Content.ToTypedContent res) ->
                 Foundation.$fYesodApp13 @ res) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp13 ::
    Yesod.Core.Types.HandlerFor Foundation.App res
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, res #)
  {- Arity: 3 -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp14 ::
    Foundation.App
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><L,A><L,1*U><S,U>,
     Unfolding: InlineRule (4, True, True)
                (\ (ds :: Foundation.App)
                   (eta :: Control.Monad.Logger.LogSource)
                   (eta1 :: Control.Monad.Logger.LogLevel)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Yesod.Core.Class.Yesod.$dmshouldLogIO1 eta eta1 eta2) -}
1481b05885461c4d5964d33b7ffc8bfe
  $fYesodApp15 :: Yesod.Core.Types.FileUpload
  {- Strictness: m1,
     Unfolding: (Yesod.Core.Types.FileUploadMemory
                   Foundation.$fYesodApp16) -}
da7f063b81116bb7a87c30debd03222a
  $fYesodApp16 ::
    Network.Wai.Parse.BackEnd Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (w1 :: Data.ByteString.Internal.ByteString)
                   (w2 :: Network.Wai.Parse.FileInfo ())
                   (w3 :: GHC.Types.IO Data.ByteString.Internal.ByteString) ->
                 Network.Wai.Parse.$wlbsBackEnd
                   @ GHC.Types.IO
                   @ Data.ByteString.Internal.ByteString
                   @ (Network.Wai.Parse.FileInfo ())
                   GHC.Base.$fMonadIO
                   w3) -}
29283ff13798a1b9131c3418152b7e81
  $fYesodApp17 :: Yesod.Core.Types.FileUpload
  {- Strictness: m2,
     Unfolding: (Yesod.Core.Types.FileUploadDisk
                   (Network.Wai.Parse.tempFileBackEnd1
                      @ Data.ByteString.Internal.ByteString
                      @ (Network.Wai.Parse.FileInfo ()))
                     `cast`
                   (<Control.Monad.Trans.Resource.InternalState>_R
                    ->_R <Data.ByteString.Internal.ByteString>_R
                    ->_R <Network.Wai.Parse.FileInfo ()>_R
                    ->_R <GHC.Types.IO Data.ByteString.Internal.ByteString>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R))) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp18 ::
    Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Yesod.Core.Types.SessionBackend #)
  {- Arity: 2, Strictness: <L,A><S,U>, Inline: [0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Foundation.$w$cmakeSessionBackend w1) -}
080f329625b2bd78d03a2d4323014aca
  $fYesodApp19 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (7200000000000000) -}
2f1bf6f1e6bce4e9d1273acf9571077c
  $fYesodApp2 :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Foundation.$fYesodApp3
                   GHC.Tuple.()) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp20 ::
    Foundation.App
    -> Yesod.Core.Types.Logger
    -> Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> System.Log.FastLogger.LogStr.LogStr
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (site1 :: Foundation.App) -> Foundation.$fYesodApp21) -}
39b1a2f0b6c2320134d4f4e35976d55b
  $fYesodApp21 ::
    Yesod.Core.Types.Logger
    -> Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> System.Log.FastLogger.LogStr.LogStr
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Unfolding: (Yesod.Core.Class.Yesod.$dmmessageLoggerSource1
                   Yesod.Core.Class.Yesod.$dmshouldLogIO1
                     `cast`
                   (<Control.Monad.Logger.LogSource>_R
                    ->_R <Control.Monad.Logger.LogLevel>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp22 ::
    Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.Logger #)
  {- Arity: 2, Strictness: <L,A><S,U>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Foundation.App)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Yesod.Core.Class.Yesod.$dmmakeLogger1 eta) -}
3f605fa34d4a05ff2c50f3884cf3d4bf
  $fYesodApp23 :: GHC.Base.Maybe GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Word.Word64
                   Foundation.$fYesodApp24) -}
c7c4f4730e3823d3256ff63bb07b1634
  $fYesodApp24 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 2097152##) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp25 ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe
            (Data.Either.Either
               Data.Text.Internal.Text
               (Yesod.Routes.Class.Route Foundation.App,
                [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) #)
  {- Arity: 5, HasNoCafRefs, Strictness: <L,A><L,A><L,A><L,A><S,U>,
     Unfolding: InlineRule (5, True, True)
                (\ (ds :: Data.Text.Internal.Text)
                   (ds1 :: Data.Text.Internal.Text)
                   (ds2 :: Data.ByteString.Lazy.Internal.ByteString)
                   (eta :: Yesod.Core.Types.HandlerData Foundation.App Foundation.App)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta1,
                    GHC.Base.Nothing
                      @ (Data.Either.Either
                           Data.Text.Internal.Text
                           (Yesod.Routes.Class.Route Foundation.App,
                            [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) #)) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp26 ::
    Foundation.App
    -> Data.Text.Internal.Text
    -> [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BufferRange
       -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)
  {- Arity: 4, Strictness: <L,A><L,U(U,U,U)><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (4, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: Data.Text.Internal.Text)
                   (w2 :: [Data.Text.Internal.Text])
                   (w3 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                 Foundation.$w$cjoinPath w1 w2 w3) -}
c129bc047b2f4b8545726fe67330fc12
  $fYesodApp27 ::
    (Data.Text.Internal.Text, Data.Text.Internal.Text)
    -> (Data.ByteString.Internal.ByteString,
        GHC.Base.Maybe Data.ByteString.Internal.ByteString)
  {- Arity: 1, Strictness: <L,U(U(U,U,U),U(U,U,U))>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (Data.Text.Internal.Text, Data.Text.Internal.Text)) ->
                 case Foundation.$wlvl w of ww { (#,#) ww1 ww2 -> (ww1, ww2) }) -}
68f392cbd7a5f63cad1a49569f1a86cd
  $fYesodApp28 :: Data.Text.Internal.Text -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S(SSS),1*U(U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Foundation.$wlvl1 ww1 ww2 ww3 }) -}
24364d2ecdcb74b389956e068c37ef1a
  $fYesodApp29 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Data.Text.Internal.empty_
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
38ced204a66b161d59b1d2e72e41f125
  $fYesodApp3 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Foundation.$fYesodApp4) -}
85f3ce293e0be363200fda7748a364ab
  $fYesodApp30 :: Data.Text.Internal.Text -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S(SSS),1*U(U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Foundation.$wlvl2 ww1 ww2 ww3 }) -}
fe4b8a223ba4597e6e55581cebc9e27a
  $fYesodApp31 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
1e2f50dfae764b8bea76c7fe7f5de951
  $fYesodApp32 :: Data.Text.Internal.Text -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x3 :: Data.Text.Internal.Text) ->
                 case x3 of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                 case GHC.Prim.<=# dt2 0# of lwild {
                   DEFAULT -> GHC.Types.True 1# -> GHC.Types.False } }) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp33 ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 3,
     Strictness: <L,A><L,1*U(U(A,A,U(1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A,A,A),A,A,A)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: Yesod.Routes.Class.Route Foundation.App)
                   (r :: Yesod.Core.Types.HandlerData Foundation.App Foundation.App)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s,
                    case GHC.List.elem
                           @ Network.HTTP.Types.Method.Method
                           Data.ByteString.Internal.$fEqByteString
                           (case r `cast`
                                 (Yesod.Core.Types.HandlerData
                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                              <Foundation.App>_N))
                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                              <Foundation.App>_N)))_R of wild { Yesod.Core.Types.HandlerData ds1 ds2 dt1 dt2 ->
                            case ds1 of wild1 { Yesod.Core.Types.YesodRequest ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            case ds3 of wild2 { Network.Wai.Internal.Request ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ->
                            ds10 } } })
                           Foundation.$fYesodApp34 of wild {
                      GHC.Types.False -> GHC.Types.True
                      GHC.Types.True -> GHC.Types.False } #)) -}
c26a3ac0de1024ba4c75b02f1c0ba08a
  $fYesodApp34 :: [Network.HTTP.Types.Method.Method]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp41
                   Foundation.$fYesodApp35) -}
123c618a662e640e64fa81cb86f14ac7
  $fYesodApp35 :: [Network.HTTP.Types.Method.Method]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp40
                   Foundation.$fYesodApp36) -}
bb049c971b37be3a2bd8dbba05e9faa2
  $fYesodApp36 :: [Network.HTTP.Types.Method.Method]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp39
                   Foundation.$fYesodApp37) -}
eba6774172af696e8ceb4857cda7ced5
  $fYesodApp37 :: [Network.HTTP.Types.Method.Method]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp38
                   (GHC.Types.[] @ Network.HTTP.Types.Method.Method)) -}
268b96f7b3343ee702d6a74b9a554751
  $fYesodApp38 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Foundation.$fYesodApp_addr#
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Foundation.$fYesodApp_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
c1e1f0ba2f6e05b834f4384c0b1285b5
  $fYesodApp39 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Foundation.$fYesodApp_addr#1
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Foundation.$fYesodApp_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
7d7eee6ffdbf20aa55a711a1459013d7
  $fYesodApp4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Foundation.$fYesodApp5) -}
15cf58bdeeb10ae922da43b619d2c526
  $fYesodApp40 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Foundation.$fYesodApp_addr#2
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Foundation.$fYesodApp_addr#2
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
359aa63418514fc3434d4213b2aa106c
  $fYesodApp41 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Foundation.$fYesodApp42
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Foundation.$fYesodApp42
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
974b90cc0fa497b304da729d1c2198f4
  $fYesodApp42 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GET"#) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp43 ::
    Yesod.Routes.Class.Route Foundation.App
    -> GHC.Types.Bool
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.AuthResult #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><L,A><L,A><S,U>,
     Unfolding: InlineRule (4, True, True)
                (\ (ds :: Yesod.Routes.Class.Route Foundation.App)
                   (ds1 :: GHC.Types.Bool)
                   (eta :: Yesod.Core.Types.HandlerData Foundation.App Foundation.App)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta1, Yesod.Core.Types.Authorized #)) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp44 ::
    Yesod.Core.Types.WidgetFor Foundation.App ()
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Text.Blaze.Internal.MarkupM () #)
  {- Arity: 3,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,A)))><L,U(U,U(U,U,U,U,U,U,U,U,U),U,U)><S,U> -}
14d21c22a6678a9ca1598abddefee26c
  $fYesodApp5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fYesodApp6) -}
7ede23f3213f254f414eca323bd77fe8
  $fYesodApp6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("</h1>\n"#) -}
b53a43adadbee3f0f4c39b1b90ccfaf4
  $fYesodApp7 :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Foundation.$fYesodApp8
                   GHC.Tuple.()) -}
89f67ba56e9b68f7d4ac6934521586b5
  $fYesodApp8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Foundation.$fYesodApp9) -}
c8d4260fb0adad1915b30aee464793f7
  $fYesodApp9 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Foundation.$fYesodApp10) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp_$cauthRoute ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.App) ->
                 GHC.Base.Nothing @ (Yesod.Routes.Class.Route Foundation.App)) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp_$ccleanPath ::
    Foundation.App
    -> [Data.Text.Internal.Text]
    -> Data.Either.Either
         [Data.Text.Internal.Text] [Data.Text.Internal.Text]
  {- Arity: 2, Strictness: <L,A><S,U>, Inline: [0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App) (w1 :: [Data.Text.Internal.Text]) ->
                 Foundation.$w$ccleanPath w1) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp_$cerrorHandler ::
    Yesod.Core.Types.ErrorResponse
    -> Yesod.Core.Types.HandlerFor
         Foundation.App Yesod.Core.Types.TypedContent
  {- Arity: 1 -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp_$cfileUpload ::
    Foundation.App
    -> Network.Wai.Internal.RequestBodyLength
    -> Yesod.Core.Types.FileUpload
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Foundation.App)
                   (ds1 :: Network.Wai.Internal.RequestBodyLength) ->
                 case ds1 of wild {
                   Network.Wai.Internal.ChunkedBody -> Foundation.$fYesodApp17
                   Network.Wai.Internal.KnownLength size
                   -> case size of wild1 { GHC.Word.W64# x ->
                      case GHC.Prim.leWord# x 50000## of lwild {
                        DEFAULT -> Foundation.$fYesodApp17
                        1# -> Foundation.$fYesodApp15 } } }) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp_$cjsAttributes ::
    Foundation.App
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.App) ->
                 GHC.Types.[]
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp_$cjsLoader ::
    Foundation.App
    -> Yesod.Core.Types.ScriptLoadPosition Foundation.App
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.App) ->
                 Yesod.Core.Types.BottomOfBody @ Foundation.App) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp_$cmaximumContentLength ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
    -> GHC.Base.Maybe GHC.Word.Word64
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>m2,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Foundation.App)
                   (ds1 :: GHC.Base.Maybe
                             (Yesod.Routes.Class.Route Foundation.App)) ->
                 Foundation.$fYesodApp23) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp_$curlParamRenderOverride ::
    Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> GHC.Base.Maybe Data.ByteString.Builder.Internal.Builder
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><L,A>,
     Unfolding: InlineRule (3, True, True)
                (\ (ds :: Foundation.App)
                   (ds1 :: Yesod.Routes.Class.Route Foundation.App)
                   (ds2 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                 GHC.Base.Nothing @ Data.ByteString.Builder.Internal.Builder) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodApp_$cyesodWithInternalState ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
    -> (Control.Monad.Trans.Resource.InternalState -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 4, Strictness: <L,A><L,A><L,1*C1(C1(U))><S,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   (ds :: Foundation.App)
                   (ds1 :: GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App))
                   (thing :: Control.Monad.Trans.Resource.InternalState
                             -> GHC.Types.IO a)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.getMaskingState# eta of ds2 { (#,#) ipv ipv1 ->
                 case ipv1 of ds3 {
                   DEFAULT
                   -> case GHC.Prim.newMutVar#
                             @ Control.Monad.Trans.Resource.Internal.ReleaseMap
                             @ GHC.Prim.RealWorld
                             (Control.Monad.Trans.Resource.Internal.ReleaseMap
                                9223372036854775807#
                                1##
                                (Data.IntMap.Internal.Nil
                                   @ (Data.Acquire.Internal.ReleaseType -> GHC.Types.IO ())))
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ a
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ a
                                (thing
                                   (GHC.STRef.STRef
                                      @ GHC.Prim.RealWorld
                                      @ Control.Monad.Trans.Resource.Internal.ReleaseMap
                                      ipv3)
                                     `cast`
                                   (Sym (GHC.IORef.N:IORef[0]) <Control.Monad.Trans.Resource.Internal.ReleaseMap>_N))
                                  `cast`
                                (GHC.Types.N:IO[0] <a>_R))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case Control.Monad.Trans.Resource.Internal.$wstateCleanup
                                     Data.Acquire.Internal.ReleaseNormal
                                     ipv3
                                     s of ds5 { (#,#) ipv4 ipv5 ->
                              GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ a e1 ipv4 })
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      case Control.Monad.Trans.Resource.Internal.$wstateCleanup
                             Data.Acquire.Internal.ReleaseNormal
                             ipv3
                             ipv4 of ds6 { (#,#) ipv6 ipv7 ->
                      (# ipv6, ipv5 #) } } }
                   0#
                   -> GHC.Prim.maskAsyncExceptions#
                        @ a
                        (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newMutVar#
                                @ Control.Monad.Trans.Resource.Internal.ReleaseMap
                                @ GHC.Prim.RealWorld
                                (Control.Monad.Trans.Resource.Internal.ReleaseMap
                                   9223372036854775807#
                                   1##
                                   (Data.IntMap.Internal.Nil
                                      @ (Data.Acquire.Internal.ReleaseType -> GHC.Types.IO ())))
                                s of ds4 { (#,#) ipv2 ipv3 ->
                         case GHC.Prim.catch#
                                @ a
                                @ GHC.Exception.SomeException
                                (GHC.Prim.unmaskAsyncExceptions#
                                   @ a
                                   (thing
                                      (GHC.STRef.STRef
                                         @ GHC.Prim.RealWorld
                                         @ Control.Monad.Trans.Resource.Internal.ReleaseMap
                                         ipv3)
                                        `cast`
                                      (Sym (GHC.IORef.N:IORef[0]) <Control.Monad.Trans.Resource.Internal.ReleaseMap>_N))
                                     `cast`
                                   (GHC.Types.N:IO[0] <a>_R))
                                (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Control.Monad.Trans.Resource.Internal.$wstateCleanup
                                        Data.Acquire.Internal.ReleaseNormal
                                        ipv3
                                        s1 of ds5 { (#,#) ipv4 ipv5 ->
                                 GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ a e1 ipv4 })
                                ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                         case Control.Monad.Trans.Resource.Internal.$wstateCleanup
                                Data.Acquire.Internal.ReleaseNormal
                                ipv3
                                ipv4 of ds6 { (#,#) ipv6 ipv7 ->
                         (# ipv6, ipv5 #) } } })
                        ipv
                   1#
                   -> case GHC.Prim.newMutVar#
                             @ Control.Monad.Trans.Resource.Internal.ReleaseMap
                             @ GHC.Prim.RealWorld
                             (Control.Monad.Trans.Resource.Internal.ReleaseMap
                                9223372036854775807#
                                1##
                                (Data.IntMap.Internal.Nil
                                   @ (Data.Acquire.Internal.ReleaseType -> GHC.Types.IO ())))
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ a
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ a
                                (thing
                                   (GHC.STRef.STRef
                                      @ GHC.Prim.RealWorld
                                      @ Control.Monad.Trans.Resource.Internal.ReleaseMap
                                      ipv3)
                                     `cast`
                                   (Sym (GHC.IORef.N:IORef[0]) <Control.Monad.Trans.Resource.Internal.ReleaseMap>_N))
                                  `cast`
                                (GHC.Types.N:IO[0] <a>_R))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case Control.Monad.Trans.Resource.Internal.$wstateCleanup
                                     Data.Acquire.Internal.ReleaseNormal
                                     ipv3
                                     s of ds5 { (#,#) ipv4 ipv5 ->
                              GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ a e1 ipv4 })
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      case Control.Monad.Trans.Resource.Internal.$wstateCleanup
                             Data.Acquire.Internal.ReleaseNormal
                             ipv3
                             ipv4 of ds6 { (#,#) ipv6 ipv7 ->
                      (# ipv6, ipv5 #) } } } } })
                  `cast`
                (forall (a :: <*>_N).
                 <Foundation.App>_R
                 ->_R <GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)>_R
                 ->_R <Control.Monad.Trans.Resource.InternalState
                       -> GHC.Types.IO a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
f721dbccc24f8d90032a647dad68a55b
  $fYesodApp_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TRACE"#) -}
424ee1f48d3e8b5d840687f90db06bf7
  $fYesodApp_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OPTIONS"#) -}
0c18865890725c792bd38eafb6364aa9
  $fYesodApp_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HEAD"#) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodPersistApp :: Yesod.Persist.Core.YesodPersist Foundation.App
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT
                     @ Database.Persist.Sql.Types.Internal.SqlBackend)
                    `cast`
                  (GHC.Base.Monad
                     (Control.Monad.Trans.Reader.ReaderT
                        <*>_N
                        (Sym (Foundation.D:R:YesodPersistBackendApp[0]))
                        <Yesod.Core.Types.HandlerFor Foundation.App>_N)_N)_R
                  Foundation.$fYesodPersistApp1
                    `cast`
                  (forall (a :: <*>_N).
                   <Yesod.Persist.Core.YesodDB Foundation.App a>_R
                   ->_R (<Yesod.Core.Types.HandlerData
                            Foundation.App Foundation.App>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <a>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                          <Foundation.App>_N <a>_R)) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodPersistApp1 ::
    Yesod.Persist.Core.YesodDB Foundation.App a
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 3,
     Strictness: <L,C(U)><L,U(U,U(U,U,U,U(U(U,U,U(U),U,U(U),U(U,U,U),U)),U,U,U,U,U),U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (f :: Yesod.Persist.Core.YesodDB Foundation.App a)
                   (eta :: Yesod.Core.Types.HandlerData Foundation.App Foundation.App)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 ((Database.Persist.Sql.Run.runSqlPool
                     @ (Yesod.Core.Types.HandlerFor Foundation.App)
                     @ Database.Persist.Sql.Types.Internal.SqlBackend
                     @ a
                     (Yesod.Core.Types.$fMonadUnliftIOHandlerFor @ Foundation.App)
                     Foundation.$fYesodPersistApp2
                       `cast`
                     (GHC.Classes.(%,%)
                        <Database.Persist.Class.PersistStore.IsPersistBackend
                           Database.Persist.Sql.Types.Internal.SqlBackend>_N
                        ((Data.Type.Equality.~)
                           <*>_N
                           (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                           <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                     f `cast`
                     (Control.Monad.Trans.Reader.ReaderT
                        <*>_N
                        (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                        <Yesod.Core.Types.HandlerFor Foundation.App>_R
                        <a>_N)_R
                     (case eta
                             `cast`
                           (Yesod.Core.Types.HandlerData
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                        <Foundation.App>_N))
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                        <Foundation.App>_N)))_R of wild { Yesod.Core.Types.HandlerData ds1 ds2 dt dt1 ->
                      case ds2 of wild1 { Yesod.Core.Types.RunHandlerEnv ds4 ds5 ds3 ds6 ds7 ds8 ds9 ds10 ds11 ->
                      case ds6
                             `cast`
                           (Sub (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                     <Foundation.App>_N)) of wild2 { Foundation.App ds ->
                      ds } } }))
                    `cast`
                  (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <a>_R)
                    eta)
                   `cast`
                 (GHC.Types.N:IO[0] <a>_R)
                   eta1) -}
2688219c569a5cc29e9d2a815bd19fc0
  $fYesodPersistApp2 ::
    (Database.Persist.Class.PersistStore.IsPersistBackend
       Database.Persist.Sql.Types.Internal.SqlBackend,
     (Database.Persist.Sql.Types.Internal.SqlBackend :: *)
     Data.Type.Equality.~ (Database.Persist.Sql.Types.Internal.SqlBackend :: *))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend,
                  Foundation.$fToBackendKeySqlBackendCliente_$d~~
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodPersistApp_$s$fApplicativeReaderT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App))
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerFor Foundation.App))
                  (Foundation.$fYesodPersistApp_$s$fFunctorReaderT @ r)
                  (\ @ a (x :: a) ->
                   let {
                     m1 :: Yesod.Core.Types.HandlerData Foundation.App Foundation.App
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 2 -}
                     = \ (eta :: Yesod.Core.Types.HandlerData
                                   Foundation.App Foundation.App)
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       (# eta1, x #)
                   } in
                   (\ (ds :: r) -> m1)
                     `cast`
                   ((<r>_R
                     ->_R (<Yesod.Core.Types.HandlerData
                              Foundation.App Foundation.App>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <a>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                            <Foundation.App>_N
                                                            <a>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                               <*>_N
                                                                               <r>_R
                                                                               <Yesod.Core.Types.HandlerFor
                                                                                  Foundation.App>_R
                                                                               <a>_N)))
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c<*> @ r)
                  (Control.Monad.Trans.Reader.$fApplicativeReaderT_$cliftA2
                     @ (Yesod.Core.Types.HandlerFor Foundation.App)
                     @ r
                     (Yesod.Core.Types.$fApplicativeHandlerFor @ Foundation.App))
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c*> @ r)
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c<* @ r) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodPersistApp_$s$fApplicativeReaderT_$c*> ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerFor Foundation.App) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) b
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(C(C1(U(U,A))))><L,1*C1(C(C1(U)))><L,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (u :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerFor Foundation.App) a)
                   (v :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerFor Foundation.App) b)
                   (r1 :: r) ->
                 let {
                   eta :: Yesod.Core.Types.HandlerFor Foundation.App a
                   = u `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N <r>_R <Yesod.Core.Types.HandlerFor Foundation.App>_R <a>_N)
                       r1
                 } in
                 let {
                   eta1 :: Yesod.Core.Types.HandlerFor Foundation.App b
                   = v `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N <r>_R <Yesod.Core.Types.HandlerFor Foundation.App>_R <b>_N)
                       r1
                 } in
                 (\ (eta2 :: Yesod.Core.Types.HandlerData
                               Foundation.App Foundation.App)
                    (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case (eta
                          `cast`
                        (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <a>_R)
                          eta2)
                         `cast`
                       (GHC.Types.N:IO[0] <a>_R)
                         eta3 of ds1 { (#,#) ipv ipv1 ->
                  (eta1
                     `cast`
                   (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <b>_R)
                     eta2)
                    `cast`
                  (GHC.Types.N:IO[0] <b>_R)
                    ipv })
                   `cast`
                 ((<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <b>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                    <Foundation.App>_N <b>_R)))
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <Control.Monad.Trans.Reader.ReaderT
                    r (Yesod.Core.Types.HandlerFor Foundation.App) a>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerFor Foundation.App) b>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerFor Foundation.App>_R
                               <b>_N)) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodPersistApp_$s$fApplicativeReaderT_$c<* ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerFor Foundation.App) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) b
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(C(C1(U(U,U))))><L,1*C1(C(C1(U(U,A))))><L,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (u :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerFor Foundation.App) a)
                   (v :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerFor Foundation.App) b)
                   (r1 :: r) ->
                 let {
                   x :: Yesod.Core.Types.HandlerFor Foundation.App a
                   = u `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N <r>_R <Yesod.Core.Types.HandlerFor Foundation.App>_R <a>_N)
                       r1
                 } in
                 let {
                   eta :: Yesod.Core.Types.HandlerFor Foundation.App b
                   = v `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N <r>_R <Yesod.Core.Types.HandlerFor Foundation.App>_R <b>_N)
                       r1
                 } in
                 (\ (eta1 :: Yesod.Core.Types.HandlerData
                               Foundation.App Foundation.App)
                    (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case (x `cast`
                        (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <a>_R)
                          eta1)
                         `cast`
                       (GHC.Types.N:IO[0] <a>_R)
                         eta2 of ds { (#,#) ipv ipv1 ->
                  case (eta
                          `cast`
                        (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <b>_R)
                          eta1)
                         `cast`
                       (GHC.Types.N:IO[0] <b>_R)
                         ipv of ds1 { (#,#) ipv2 ipv3 ->
                  (# ipv2, ipv1 #) } })
                   `cast`
                 ((<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <a>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                    <Foundation.App>_N <a>_R)))
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <Control.Monad.Trans.Reader.ReaderT
                    r (Yesod.Core.Types.HandlerFor Foundation.App) a>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerFor Foundation.App) b>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerFor Foundation.App>_R
                               <a>_N)) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodPersistApp_$s$fApplicativeReaderT_$c<*> ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerFor Foundation.App) (a -> b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(C(C1(U(U,1*C1(U)))))><L,1*C1(C(C1(U(U,U))))><L,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (f :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerFor Foundation.App) (a -> b))
                   (v :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerFor Foundation.App) a)
                   (r1 :: r) ->
                 let {
                   m1 :: Yesod.Core.Types.HandlerFor Foundation.App (a -> b)
                   = f `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <r>_R
                          <Yesod.Core.Types.HandlerFor Foundation.App>_R
                          <a -> b>_N)
                       r1
                 } in
                 let {
                   m2 :: Yesod.Core.Types.HandlerFor Foundation.App a
                   = v `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N <r>_R <Yesod.Core.Types.HandlerFor Foundation.App>_R <a>_N)
                       r1
                 } in
                 (\ (eta :: Yesod.Core.Types.HandlerData
                              Foundation.App Foundation.App)
                    (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case (m1
                          `cast`
                        (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <a -> b>_R)
                          eta)
                         `cast`
                       (GHC.Types.N:IO[0] <a -> b>_R)
                         eta1 of ds1 { (#,#) ipv ipv1 ->
                  case (m2
                          `cast`
                        (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <a>_R)
                          eta)
                         `cast`
                       (GHC.Types.N:IO[0] <a>_R)
                         ipv of ds2 { (#,#) ipv2 ipv3 ->
                  (# ipv2, ipv1 ipv3 #) } })
                   `cast`
                 ((<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <b>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                    <Foundation.App>_N <b>_R)))
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <Control.Monad.Trans.Reader.ReaderT
                    r (Yesod.Core.Types.HandlerFor Foundation.App) (a -> b)>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerFor Foundation.App) a>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerFor Foundation.App>_R
                               <b>_N)) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodPersistApp_$s$fFunctorReaderT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App))
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerFor Foundation.App))
                  (Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$cfmap @ r)
                  (Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$c<$ @ r) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodPersistApp_$s$fFunctorReaderT_$c<$ ::
    a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) b
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><L,1*C1(C(C1(U(U,A))))><L,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (x :: a)
                   (v :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerFor Foundation.App) b)
                   (x1 :: r) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerFor Foundation.App b
                   = v `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N <r>_R <Yesod.Core.Types.HandlerFor Foundation.App>_R <b>_N)
                       x1
                 } in
                 (\ (b4 :: Yesod.Core.Types.HandlerData
                             Foundation.App Foundation.App)
                    (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <b>_R)
                          b4)
                         `cast`
                       (GHC.Types.N:IO[0] <b>_R)
                         eta1 of ds1 { (#,#) ipv ipv1 ->
                  (# ipv, x #) })
                   `cast`
                 ((<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <a>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                    <Foundation.App>_N <a>_R)))
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <a>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerFor Foundation.App) b>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerFor Foundation.App>_R
                               <a>_N)) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodPersistApp_$s$fFunctorReaderT_$cfmap ::
    (a -> b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,C(U)><L,1*C1(C(C1(U(U,U))))><L,U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ r @ a @ b (f :: a -> b) ->
                 Control.Monad.Trans.Reader.mapReaderT
                   @ *
                   @ *
                   @ (Yesod.Core.Types.HandlerFor Foundation.App)
                   @ a
                   @ (Yesod.Core.Types.HandlerFor Foundation.App)
                   @ b
                   @ r
                   (Yesod.Core.Types.$fFunctorHandlerFor2 @ Foundation.App @ a @ b f)
                     `cast`
                   (<Yesod.Core.Types.HandlerFor Foundation.App a>_R
                    ->_R (<Yesod.Core.Types.HandlerData
                             Foundation.App Foundation.App>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <b>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                           <Foundation.App>_N <b>_R))) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodPersistApp_$s$fMonadReaderT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerFor Foundation.App))
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT @ r)
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>>= @ r)
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c*> @ r)
                  (\ @ a (eta :: a) ->
                   let {
                     m1 :: Yesod.Core.Types.HandlerData Foundation.App Foundation.App
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 2 -}
                     = \ (eta1 :: Yesod.Core.Types.HandlerData
                                    Foundation.App Foundation.App)
                         (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       (# eta2, eta #)
                   } in
                   (\ (ds :: r) -> m1)
                     `cast`
                   ((<r>_R
                     ->_R (<Yesod.Core.Types.HandlerData
                              Foundation.App Foundation.App>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <a>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                            <Foundation.App>_N
                                                            <a>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                               <*>_N
                                                                               <r>_R
                                                                               <Yesod.Core.Types.HandlerFor
                                                                                  Foundation.App>_R
                                                                               <a>_N)))
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cfail @ r) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodPersistApp_$s$fMonadReaderT_$c>>= ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerFor Foundation.App) a
    -> (a
        -> Control.Monad.Trans.Reader.ReaderT
             r (Yesod.Core.Types.HandlerFor Foundation.App) b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(C(C1(U(U,U))))><L,C(C1(C1(C1(U))))><L,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Reader.ReaderT
                            r (Yesod.Core.Types.HandlerFor Foundation.App) a)
                   (k :: a
                         -> Control.Monad.Trans.Reader.ReaderT
                              r (Yesod.Core.Types.HandlerFor Foundation.App) b)
                   (r1 :: r) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerFor Foundation.App a
                   = m1
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N <r>_R <Yesod.Core.Types.HandlerFor Foundation.App>_R <a>_N)
                       r1
                 } in
                 (\ (r2 :: Yesod.Core.Types.HandlerData
                             Foundation.App Foundation.App)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <a>_R)
                          r2)
                         `cast`
                       (GHC.Types.N:IO[0] <a>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (((k ipv1)
                      `cast`
                    (Control.Monad.Trans.Reader.N:ReaderT[0]
                         <*>_N <r>_R <Yesod.Core.Types.HandlerFor Foundation.App>_R <b>_N)
                      r1)
                     `cast`
                   (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <b>_R)
                     r2)
                    `cast`
                  (GHC.Types.N:IO[0] <b>_R)
                    ipv })
                   `cast`
                 ((<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <b>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                    <Foundation.App>_N <b>_R)))
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <Control.Monad.Trans.Reader.ReaderT
                    r (Yesod.Core.Types.HandlerFor Foundation.App) a>_R
                 ->_R <a
                       -> Control.Monad.Trans.Reader.ReaderT
                            r (Yesod.Core.Types.HandlerFor Foundation.App) b>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerFor Foundation.App>_R
                               <b>_N)) -}
fad4d7498437d0835053b4479d34e8e2
  $fYesodPersistApp_$s$fMonadReaderT_$cfail ::
    GHC.Base.String
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) a
  {- Arity: 2, Strictness: <B,U><B,A>x, Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ r @ a (msg :: GHC.Base.String) ->
                 let {
                   m1 :: Yesod.Core.Types.HandlerFor Foundation.App a
                     {- Strictness: x -}
                   = GHC.Err.errorWithoutStackTrace
                       @ 'GHC.Types.LiftedRep
                       @ (Yesod.Core.Types.HandlerFor Foundation.App a)
                       msg
                 } in
                 (\ (ds :: r) -> m1)
                   `cast`
                 (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                           <*>_N
                           <r>_R
                           <Yesod.Core.Types.HandlerFor Foundation.App>_R
                           <a>_N))) -}
3912a57342a0f2534281f193813d2043
  $tc'App :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18228106807686294786##
                   7576357492955368772##
                   Foundation.$trModule
                   Foundation.$tc'App2
                   0#
                   Foundation.$tc'App1) -}
70cc6482c2c6fd1e48cb8950b52ae67d
  $tc'App1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6727fd3dad07b57d0d4dbc4c8f27b1c0
  $tc'App2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'App3) -}
fbb4bda0351e0756c697b96b975261fb
  $tc'App3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'App"#) -}
54a2b5828375b25f67ea225cf4cbd647
  $tc'CardapioR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6444562648121543781##
                   3834634816532740726##
                   Foundation.$trModule
                   Foundation.$tc'CardapioR2
                   0#
                   Foundation.$tc'CardapioR1) -}
2e98cd10a1f409e2a6f957e7be522667
  $tc'CardapioR1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
e294da5246c16e2fe5020ee7e3e33457
  $tc'CardapioR2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'CardapioR3) -}
c9ccb520a89c812f20e5f4b831a77116
  $tc'CardapioR3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CardapioR"#) -}
e1666b78517afd20cd667e5be2d43840
  $tc'Cliente :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9954446582419411703##
                   3306353874888448582##
                   Foundation.$trModule
                   Foundation.$tc'Cliente2
                   0#
                   Foundation.$tc'Cliente1) -}
258cd7b06fc996dea363f0ac92d17dae
  $tc'Cliente1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
52d231e966e42522eebffab035c1c6d3
  $tc'Cliente2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'Cliente3) -}
100327604356b4e7d973409a7e154e2b
  $tc'Cliente3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Cliente"#) -}
abe61d36749188bac5cc244abef06b5a
  $tc'ClienteEndereco :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13291342275328409978##
                   10530921814751148119##
                   Foundation.$trModule
                   Foundation.$tc'ClienteEndereco2
                   1#
                   Foundation.$tc'ClienteEndereco1) -}
78f91b02591e8eea4bb250e729da6e92
  $tc'ClienteEndereco1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
b736be2a45706123a299e749fa0c867e
  $tc'ClienteEndereco2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ClienteEndereco3) -}
67e35dc24addc671813ae89e6d2c3723
  $tc'ClienteEndereco3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ClienteEndereco"#) -}
fe1f3dc6fa883748ec026a8e93b0f54c
  $tc'ClienteId :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7300136230897771668##
                   6224875411755269978##
                   Foundation.$trModule
                   Foundation.$tc'ClienteId2
                   1#
                   Foundation.$tc'ClienteId1) -}
87da7b0a08cb6701cab9c8439cd01864
  $tc'ClienteId1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
dc8bdcab083b57c25903ed9d386ed49b
  $tc'ClienteId2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ClienteId3) -}
b58dca42971705a9093a50a68a67d816
  $tc'ClienteId3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ClienteId"#) -}
916cffd2b050fb77a324fda737d97901
  $tc'ClienteKey :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9868442426056538107##
                   7303842651712537373##
                   Foundation.$trModule
                   Foundation.$tc'ClienteKey2
                   0#
                   Foundation.$tc'ClienteKey1) -}
c504d73088a5d118a5b9c32aa409cfcb
  $tc'ClienteKey1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f76e70628d2ef79b4aed64e5e8215b40
  $tc'ClienteKey2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ClienteKey3) -}
67fea73be24d0b5362b4d3bd1d4247bb
  $tc'ClienteKey3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ClienteKey"#) -}
4c2a33471ed71fde1978b017a0972767
  $tc'ClienteLogin :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8679495638534209086##
                   1291699022298766466##
                   Foundation.$trModule
                   Foundation.$tc'ClienteLogin1
                   1#
                   Foundation.$tc'ClienteEndereco1) -}
f95ab50fad5b44a3924db28c48fc039d
  $tc'ClienteLogin1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ClienteLogin2) -}
3762e98a96f9ffbb388cf742a60d7bb3
  $tc'ClienteLogin2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ClienteLogin"#) -}
c1b4cc3af34504fc9556714d60b734bf
  $tc'ClienteNome :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16852116646962843997##
                   1049627963949232636##
                   Foundation.$trModule
                   Foundation.$tc'ClienteNome1
                   1#
                   Foundation.$tc'ClienteEndereco1) -}
0fb05e54d6fd9e50bd4d3caa152d3c47
  $tc'ClienteNome1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ClienteNome2) -}
b73b643ffe6757f6975d0ada7f66ed34
  $tc'ClienteNome2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ClienteNome"#) -}
e54e549181afcc939fb70b07efedc1d7
  $tc'ClientePword :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8888424430250250213##
                   6171982027124860366##
                   Foundation.$trModule
                   Foundation.$tc'ClientePword1
                   1#
                   Foundation.$tc'ClienteEndereco1) -}
119c91c8bbef049831d42e2ed96fdd28
  $tc'ClientePword1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ClientePword2) -}
a4afd749d9f1279013b84e46e3160c38
  $tc'ClientePword2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ClientePword"#) -}
ed0a460c7e77da291757ca0404631321
  $tc'ClienteR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12587998742432114060##
                   6480055293532209358##
                   Foundation.$trModule
                   Foundation.$tc'ClienteR1
                   0#
                   Foundation.$tc'CardapioR1) -}
def36b700f483fa8520afb5fbf924102
  $tc'ClienteR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ClienteR2) -}
82b985e50162052f84225a4d1c699325
  $tc'ClienteR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ClienteR"#) -}
74a99f590dffaa494c551a56a827a6fb
  $tc'ClienteTelefone :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1122411009200380248##
                   9484964016985469080##
                   Foundation.$trModule
                   Foundation.$tc'ClienteTelefone1
                   1#
                   Foundation.$tc'ClienteEndereco1) -}
04dcd50a3bf4c8ae24bfc03dd3e46d09
  $tc'ClienteTelefone1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ClienteTelefone2) -}
4fc9301500295362199864861a265829
  $tc'ClienteTelefone2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ClienteTelefone"#) -}
b959dd5a471076661359575299b9d169
  $tc'HomeR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18434977714674446495##
                   16997719617847356275##
                   Foundation.$trModule
                   Foundation.$tc'HomeR1
                   0#
                   Foundation.$tc'CardapioR1) -}
9f566f9baec6c8febb76ddbe0921a1e8
  $tc'HomeR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'HomeR2) -}
78b3308c443f00c3029c9d9823c015cd
  $tc'HomeR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'HomeR"#) -}
c4b60c7ecfd95872241bea759c24114d
  $tc'ItemPedido :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4831124806759119706##
                   6892353317841856198##
                   Foundation.$trModule
                   Foundation.$tc'ItemPedido2
                   0#
                   Foundation.$tc'ItemPedido1) -}
21fb1867f547167576a7ad43c9a50d10
  $tc'ItemPedido1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
fb0cf17f19fe4073725e7c92d2749c07
  $tc'ItemPedido2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ItemPedido3) -}
4b0c8d9d3145744320708d65a92db1ab
  $tc'ItemPedido3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ItemPedido"#) -}
4d13296e076b4d98c0111dacd61576a1
  $tc'ItemPedidoId :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3129058689505404800##
                   3539591438553548191##
                   Foundation.$trModule
                   Foundation.$tc'ItemPedidoId2
                   1#
                   Foundation.$tc'ItemPedidoId1) -}
80e3b38f304635a4d0d796fb91a7abc0
  $tc'ItemPedidoId1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
04384c7f0cd6c8822ee7464580eb6c70
  $tc'ItemPedidoId2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ItemPedidoId3) -}
6ed1db633028cfb66288cf7728bb13d5
  $tc'ItemPedidoId3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ItemPedidoId"#) -}
37b47b7cafc384aea6387828a3210075
  $tc'ItemPedidoKey :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13434368865653996233##
                   2349523864161549324##
                   Foundation.$trModule
                   Foundation.$tc'ItemPedidoKey2
                   0#
                   Foundation.$tc'ItemPedidoKey1) -}
829e7f126ddb2579699e9f6fb610d2c4
  $tc'ItemPedidoKey1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
aeace4b7aea6e8eb794a3ef9f24b8975
  $tc'ItemPedidoKey2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ItemPedidoKey3) -}
d3239f063ed11cc76b9cb6c236719189
  $tc'ItemPedidoKey3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ItemPedidoKey"#) -}
e9e257c9cd30a7b2863cf854c536c300
  $tc'ItemPedidoPedidoid :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8617097964819279658##
                   7211587299131671404##
                   Foundation.$trModule
                   Foundation.$tc'ItemPedidoPedidoid2
                   1#
                   Foundation.$tc'ItemPedidoPedidoid1) -}
b42d409101816ed3e2208030fff909fe
  $tc'ItemPedidoPedidoid1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
5bdfb616d2a96367b92986291c5b8feb
  $tc'ItemPedidoPedidoid2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Foundation.$tc'ItemPedidoPedidoid3) -}
979e0a82d7a6e283265e4b2784d3e204
  $tc'ItemPedidoPedidoid3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ItemPedidoPedidoid"#) -}
f5a6249c275bf1e6e98ef244b9443f71
  $tc'ItemPedidoProdutoid :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   855252763381051058##
                   12450416280206901763##
                   Foundation.$trModule
                   Foundation.$tc'ItemPedidoProdutoid2
                   1#
                   Foundation.$tc'ItemPedidoProdutoid1) -}
b9e72f8785d8d8be54cd36ffc8e0a7fa
  $tc'ItemPedidoProdutoid1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
600f739bf5f6f950a68997f5c8f5718b
  $tc'ItemPedidoProdutoid2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Foundation.$tc'ItemPedidoProdutoid3) -}
6a228546aed85312bee56fb2707b369d
  $tc'ItemPedidoProdutoid3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ItemPedidoProdutoid"#) -}
56ee4a5b0b193ca9f26ef44eb20d53ab
  $tc'ItemPedidoVlunit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12594820036730883292##
                   10501859726226147277##
                   Foundation.$trModule
                   Foundation.$tc'ItemPedidoVlunit2
                   1#
                   Foundation.$tc'ItemPedidoVlunit1) -}
448195ea299358caaaee33e8be7cfa35
  $tc'ItemPedidoVlunit1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
670536033d46c8be0f784a440f1af3f6
  $tc'ItemPedidoVlunit2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ItemPedidoVlunit3) -}
75c155c1d36466be7165456cd10e08f0
  $tc'ItemPedidoVlunit3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ItemPedidoVlunit"#) -}
d77614c0365bbeda5368f10687eb57fe
  $tc'LoginR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18415469904464835##
                   7235051020652549185##
                   Foundation.$trModule
                   Foundation.$tc'LoginR1
                   0#
                   Foundation.$tc'CardapioR1) -}
7b63a68d7becf16f7e976545412992b6
  $tc'LoginR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'LoginR2) -}
d6ba541fcdaf7dffd0fa0e9b3386cf4f
  $tc'LoginR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LoginR"#) -}
5ae3864358d3fccc7624ee83541dae1d
  $tc'LogoutR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12236155680384737402##
                   16997421681978252979##
                   Foundation.$trModule
                   Foundation.$tc'LogoutR1
                   0#
                   Foundation.$tc'CardapioR1) -}
7f4ed74c8ab9d7be06b1037b0a2837c2
  $tc'LogoutR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'LogoutR2) -}
753852caf9bff1b9c6e53327b3632ac1
  $tc'LogoutR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LogoutR"#) -}
6c8e8b735899fddf34d4018e3fceeae6
  $tc'Pedido :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6722760771362300379##
                   4122083995020265174##
                   Foundation.$trModule
                   Foundation.$tc'Pedido2
                   0#
                   Foundation.$tc'Pedido1) -}
ff2b79674aed2f39e54769f6869d6124
  $tc'Pedido1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
307ae7e673cdfb6f7a26dd83e634bbca
  $tc'Pedido2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'Pedido3) -}
cca38e7bab1618ae4d42c18266944a8d
  $tc'Pedido3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Pedido"#) -}
63b8992d9bbf3931df06ac2934619ab5
  $tc'PedidoClienteid :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16586289693970184557##
                   13150657567713075635##
                   Foundation.$trModule
                   Foundation.$tc'PedidoClienteid2
                   1#
                   Foundation.$tc'PedidoClienteid1) -}
975affcefef24bd1923b441ba8d31fe6
  $tc'PedidoClienteid1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f778a81eacd0128ceb060cfed8f63b3e
  $tc'PedidoClienteid2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'PedidoClienteid3) -}
d3dafe0b518baed0238025aaa6cf5d0c
  $tc'PedidoClienteid3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PedidoClienteid"#) -}
569cbf9ed53efbc637632d33004f7052
  $tc'PedidoFinalizado :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18358563416204969398##
                   4048682581227359609##
                   Foundation.$trModule
                   Foundation.$tc'PedidoFinalizado2
                   1#
                   Foundation.$tc'PedidoFinalizado1) -}
9e942df2799776d4cbf8b2332f1d3c35
  $tc'PedidoFinalizado1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c6568dfbb38a43cbc3d8ff01efded911
  $tc'PedidoFinalizado2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'PedidoFinalizado3) -}
9f91ffe8c871f0a556ce36bf906ff83d
  $tc'PedidoFinalizado3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PedidoFinalizado"#) -}
5bf7385e9091a2133ba65e7a7ee9dd57
  $tc'PedidoHrpedido :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18047879937345717747##
                   5179812471986744620##
                   Foundation.$trModule
                   Foundation.$tc'PedidoHrpedido2
                   1#
                   Foundation.$tc'PedidoHrpedido1) -}
633f20aa02056bc207f48a5dca99962e
  $tc'PedidoHrpedido1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f8c9622a55ac498d82a69b5c05772fa7
  $tc'PedidoHrpedido2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'PedidoHrpedido3) -}
570fe20d57cebe79d30b9661bda621ba
  $tc'PedidoHrpedido3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PedidoHrpedido"#) -}
076b86bb77478ecd9a227eeb69a28aac
  $tc'PedidoId :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17804354265948622973##
                   15650314370870967663##
                   Foundation.$trModule
                   Foundation.$tc'PedidoId2
                   1#
                   Foundation.$tc'PedidoId1) -}
5a79bda792f8df55b6ff50fffc5b421e
  $tc'PedidoId1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1b1e35ca5241d2e539bde8164c9d1120
  $tc'PedidoId2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'PedidoId3) -}
717f1376b5e71fb62b9bd32be99f85ba
  $tc'PedidoId3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PedidoId"#) -}
767991d10e7f34c9c0a07aec352d12cc
  $tc'PedidoKey :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12267471803664302520##
                   12979235814380813251##
                   Foundation.$trModule
                   Foundation.$tc'PedidoKey2
                   0#
                   Foundation.$tc'PedidoKey1) -}
6d75e533f37b08cc9aad2383c67ffa16
  $tc'PedidoKey1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
85dc81bcfcbcc194f83ca421960bcafa
  $tc'PedidoKey2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'PedidoKey3) -}
04724964aa1e5c65436426d31795a53e
  $tc'PedidoKey3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PedidoKey"#) -}
61438f6ee41bc940514c73d989370723
  $tc'PedidoVltot :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9176187465442456320##
                   4706807625637096497##
                   Foundation.$trModule
                   Foundation.$tc'PedidoVltot1
                   1#
                   Foundation.$tc'PedidoHrpedido1) -}
c8da2aac5b0148400f93e6ea5943673f
  $tc'PedidoVltot1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'PedidoVltot2) -}
d23c35bd019191abafb5cfb86c773f8c
  $tc'PedidoVltot2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PedidoVltot"#) -}
55306031710c8642d9e2dbd51c638433
  $tc'Produto :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17091916560263732789##
                   510237851016042655##
                   Foundation.$trModule
                   Foundation.$tc'Produto2
                   0#
                   Foundation.$tc'Produto1) -}
eadecfb46a29271b86a1a3e629323573
  $tc'Produto1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4355c7b11b8c316a27359dd93066dd4d
  $tc'Produto2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'Produto3) -}
41c1000470563cdf53ca91dd69eead0e
  $tc'Produto3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Produto"#) -}
22e0e8a432caa2d712e18d10ee253ea7
  $tc'ProdutoId :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6721547912869735240##
                   8927088850289337001##
                   Foundation.$trModule
                   Foundation.$tc'ProdutoId2
                   1#
                   Foundation.$tc'ProdutoId1) -}
80da991dc66b79fc85a8bf62197e46a9
  $tc'ProdutoId1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ac78cec65a55d4d0588dd6d9fb4b4ccd
  $tc'ProdutoId2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ProdutoId3) -}
6ba6f05b16f98e6839d54a4baa341e60
  $tc'ProdutoId3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ProdutoId"#) -}
bcfd20e51f5a3a53173f680f1fb2ff73
  $tc'ProdutoKey :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15310094027938950509##
                   12294326223309754823##
                   Foundation.$trModule
                   Foundation.$tc'ProdutoKey2
                   0#
                   Foundation.$tc'ProdutoKey1) -}
b25284357796d225877a75c4e2a96526
  $tc'ProdutoKey1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
e133050472b9c993262ee0687a01e860
  $tc'ProdutoKey2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ProdutoKey3) -}
49c477ac4d2fe61c32aaa86053ca2f95
  $tc'ProdutoKey3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ProdutoKey"#) -}
b12d2e47d66d6105a9871a2f567875f9
  $tc'ProdutoNome :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3903728958080915037##
                   11802729317431583844##
                   Foundation.$trModule
                   Foundation.$tc'ProdutoNome2
                   1#
                   Foundation.$tc'ProdutoNome1) -}
d23029fefeadc141d6ce77db1dbf8153
  $tc'ProdutoNome1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
eca40bbcde1db0fc057abecb1c90a495
  $tc'ProdutoNome2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ProdutoNome3) -}
306d0ae7615f4c8d2972b8b048b20fa5
  $tc'ProdutoNome3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ProdutoNome"#) -}
e694ab6508570f58f7306584e258e047
  $tc'ProdutoTipoprodutoid :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10540193670935881986##
                   12225608655296163183##
                   Foundation.$trModule
                   Foundation.$tc'ProdutoTipoprodutoid2
                   1#
                   Foundation.$tc'ProdutoTipoprodutoid1) -}
8e9e824fb7d8b29296f45094873af710
  $tc'ProdutoTipoprodutoid1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
09b3d862efe8a7a3f64d83dcb610a0d8
  $tc'ProdutoTipoprodutoid2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Foundation.$tc'ProdutoTipoprodutoid3) -}
ebfbc6c3697b937f10888d20e54c4730
  $tc'ProdutoTipoprodutoid3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ProdutoTipoprodutoid"#) -}
30e84d05289f4ecc9d535bcd4fed7e88
  $tc'ProdutoValor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2821149571421265503##
                   889622162684335004##
                   Foundation.$trModule
                   Foundation.$tc'ProdutoValor2
                   1#
                   Foundation.$tc'ProdutoValor1) -}
50023e0429191f1fedcfcc1564b99788
  $tc'ProdutoValor1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
3ef01c853f758d8e377863e1ec8ec4a7
  $tc'ProdutoValor2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ProdutoValor3) -}
95598d8a3b9f46adb02d37ea71c5b168
  $tc'ProdutoValor3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ProdutoValor"#) -}
f00f0b3d76875d6a997b72e8978b20c2
  $tc'TipoProduto :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1921149501279252329##
                   7747100220653893540##
                   Foundation.$trModule
                   Foundation.$tc'TipoProduto2
                   0#
                   Foundation.$tc'TipoProduto1) -}
28f6068d1ca174a52dc58f052c6eecf4
  $tc'TipoProduto1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d98aa7312a065ba5d6f0e70dcaa96cb8
  $tc'TipoProduto2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'TipoProduto3) -}
6a2d8337de869b0a261e40cd5630893c
  $tc'TipoProduto3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TipoProduto"#) -}
9ca341456cd61c721c725ab39de67b0f
  $tc'TipoProdutoId :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2388882543441528887##
                   11617596139812336333##
                   Foundation.$trModule
                   Foundation.$tc'TipoProdutoId2
                   1#
                   Foundation.$tc'TipoProdutoId1) -}
ba07c525bfe06979d4564c112ac5fe3c
  $tc'TipoProdutoId1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
391ddd543dcdb0961f541feaa9f7ac9d
  $tc'TipoProdutoId2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'TipoProdutoId3) -}
84b74cc6fabfc390efbab440aeb831e1
  $tc'TipoProdutoId3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TipoProdutoId"#) -}
b3f2790e55fa6024295295d1fa8ca71f
  $tc'TipoProdutoKey :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4876200606687061869##
                   2647904990408205483##
                   Foundation.$trModule
                   Foundation.$tc'TipoProdutoKey2
                   0#
                   Foundation.$tc'TipoProdutoKey1) -}
3944ec09d91f9dc38dd3e20bafa9744b
  $tc'TipoProdutoKey1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1e986b5cf2afdbbebd0fa567620c9e2c
  $tc'TipoProdutoKey2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'TipoProdutoKey3) -}
7dbad19cc113a23db4fb45ba29bc6feb
  $tc'TipoProdutoKey3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TipoProdutoKey"#) -}
cd61ff405059c4fced9cd92a1ab58f7c
  $tc'TipoProdutoNometipo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8131707841285616504##
                   13976957837029066174##
                   Foundation.$trModule
                   Foundation.$tc'TipoProdutoNometipo2
                   1#
                   Foundation.$tc'TipoProdutoNometipo1) -}
a7a95c4b2302dd1f208cca90943c12e6
  $tc'TipoProdutoNometipo1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c398cfc97af651ffa35e7c6b60b9f331
  $tc'TipoProdutoNometipo2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Foundation.$tc'TipoProdutoNometipo3) -}
ead66c0652fbb9a81857aaaa324054be
  $tc'TipoProdutoNometipo3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TipoProdutoNometipo"#) -}
e9c54ff5e0ac81afe1a53fb0b1f97537
  $tc'UniqueLogin :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18201610499458300224##
                   17591764547815745828##
                   Foundation.$trModule
                   Foundation.$tc'UniqueLogin2
                   0#
                   Foundation.$tc'UniqueLogin1) -}
36775f3e3e725a6428717c05f3ae78ac
  $tc'UniqueLogin1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
fa99aaaf1505be724c3b7fde48871b57
  $tc'UniqueLogin2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'UniqueLogin3) -}
15f0b3aa6fe433b2d88e4de9ec086c5b
  $tc'UniqueLogin3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UniqueLogin"#) -}
4350a901297c539a7755ef45cab1f537
  $tcApp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12038506887025550618##
                   8389207061001481594##
                   Foundation.$trModule
                   Foundation.$tcApp1
                   0#
                   GHC.Types.krep$*) -}
798383f26f5626fedd42548bc280d28b
  $tcApp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tcApp2) -}
aa67e879720e6ce6f5ffbc936718ac1c
  $tcApp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("App"#) -}
0283197e24652275e39b5607708baef9
  $tcCliente :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5264173169372547117##
                   16657673324052889765##
                   Foundation.$trModule
                   Foundation.$tcCliente1
                   0#
                   GHC.Types.krep$*) -}
3a0f71e91f877c95e94e524d414a910a
  $tcCliente1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Foundation.$fPersistEntityCliente26) -}
e1a08fb476355de4c6229bdd3c6c07e6
  $tcItemPedido :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14054636028814414513##
                   11551044970744324729##
                   Foundation.$trModule
                   Foundation.$tcItemPedido1
                   0#
                   GHC.Types.krep$*) -}
743368ef0f3b03b6a2999918accabb52
  $tcItemPedido1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Foundation.$fPersistEntityItemPedido25) -}
890a1dc41f75d531cf0349c42f8b342c
  $tcPedido :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13422808917620893658##
                   16089721685436251291##
                   Foundation.$trModule
                   Foundation.$tcPedido1
                   0#
                   GHC.Types.krep$*) -}
ef1bebd4e8c119d658511bf5637433fc
  $tcPedido1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Foundation.$fPersistEntityItemPedido18) -}
e54d90a940b78ba6b3b468f46c347e5f
  $tcProduto :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17761926081017116604##
                   11442937684512432919##
                   Foundation.$trModule
                   Foundation.$tcProduto1
                   0#
                   GHC.Types.krep$*) -}
bbf6e74e398f5bec3b947de5c6356843
  $tcProduto1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Foundation.$fPersistEntityItemPedido11) -}
960c85b9e149e84db348afc2e929b0b0
  $tcTipoProduto :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3789539929257478883##
                   7315455190966995051##
                   Foundation.$trModule
                   Foundation.$tcTipoProduto1
                   0#
                   GHC.Types.krep$*) -}
1a097369746879ad1c6a72e92d8ddea6
  $tcTipoProduto1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Foundation.$fPersistEntityProduto5) -}
c548ff4a0bf63caf582dc092fb7b7a5e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Foundation.$trModule3
                   Foundation.$trModule1) -}
1e1710664d6783d5183ac5ff7e4e9bf9
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$trModule2) -}
69aef36795c530c9409752a7bcdbe7c4
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Foundation"#) -}
d46240bfc4fff7416bd8786e49b16895
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$trModule4) -}
0b1464c57d2288ad04c63705ca81a1fb
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
6656ef233785d408c17a10210a6e6041
  $w$ccleanPath ::
    [Data.Text.Internal.Text]
    -> Data.Either.Either
         [Data.Text.Internal.Text] [Data.Text.Internal.Text]
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: [Data.Text.Internal.Text]) ->
                 let {
                   corrected :: [Data.Text.Internal.Text]
                   = GHC.List.filter
                       @ Data.Text.Internal.Text
                       Foundation.$fYesodApp32
                       w
                 } in
                 case GHC.Classes.$fEq[]_$c==
                        @ Data.Text.Internal.Text
                        Data.Text.$fEqText
                        corrected
                        w of wild {
                   GHC.Types.False
                   -> Data.Either.Left
                        @ [Data.Text.Internal.Text]
                        @ [Data.Text.Internal.Text]
                        corrected
                   GHC.Types.True
                   -> Data.Either.Right
                        @ [Data.Text.Internal.Text]
                        @ [Data.Text.Internal.Text]
                        (GHC.Base.map
                           @ Data.Text.Internal.Text
                           @ Data.Text.Internal.Text
                           Foundation.$fYesodApp30
                           w) }) -}
fad4d7498437d0835053b4479d34e8e2
  $w$cdefaultMessageWidget ::
    Text.Blaze.Html.Html
    -> Text.Hamlet.HtmlUrl (Yesod.Routes.Class.Route Foundation.App)
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld
         (Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
    -> GHC.Prim.MutVar# GHC.Prim.RealWorld Yesod.Core.Types.GHState
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6, Strictness: <L,U><L,C(U)><S,U><L,A><L,A><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: Text.Blaze.Html.Html)
                   (w1 :: Text.Hamlet.HtmlUrl
                            (Yesod.Routes.Class.Route Foundation.App))
                   (ww :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld
                            (Yesod.Core.Types.GWData
                               (Yesod.Routes.Class.Route Foundation.App)))
                   (ww1 :: GHC.Prim.MutVar#
                             GHC.Prim.RealWorld Yesod.Core.Types.GHState)
                   (ww2 :: GHC.Prim.MutVar#
                             GHC.Prim.RealWorld
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        ww
                          `cast`
                        (GHC.Prim.MutVar#
                           <GHC.Prim.RealWorld>_N
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R)_R
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv1
                        (Yesod.Core.Types.GWData
                           @ (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App)))
                           (Yesod.Core.Types.$fIsStringWidgetFor2
                              @ (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                             `cast`
                           (Sym (Yesod.Core.Types.N:Body[0]
                                     <Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetFor Foundation.App))>_R))
                           (GHC.Base.Just
                              @ Yesod.Core.Types.Title
                              w `cast` (Sym (Yesod.Core.Types.N:Title[0])))
                             `cast`
                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Script
                                   (Yesod.Routes.Class.Route
                                      (Yesod.Core.Class.Handler.HandlerSite
                                         (Yesod.Core.Types.WidgetFor Foundation.App)))])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Script
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetFor Foundation.App)))>_R))
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Stylesheet
                                   (Yesod.Routes.Class.Route
                                      (Yesod.Core.Class.Handler.HandlerSite
                                         (Yesod.Core.Types.WidgetFor Foundation.App)))])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Stylesheet
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetFor Foundation.App)))>_R))
                           (Data.Map.Internal.Tip
                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                              @ ((Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetFor Foundation.App))
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Data.Text.Internal.Builder.Builder))
                           (GHC.Base.Nothing
                              @ ((Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetFor Foundation.App))
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Text.Julius.Javascript))
                           (Yesod.Core.Types.$fIsStringWidgetFor2
                              @ (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                             `cast`
                           (Sym (Yesod.Core.Types.N:Head[0]
                                     <Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetFor
                                              Foundation.App))>_R))) of x' { Yesod.Core.Types.GWData ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        ww
                          `cast`
                        (GHC.Prim.MutVar#
                           <GHC.Prim.RealWorld>_N
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R)_R
                        x'
                        ipv of s2# { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        ww
                          `cast`
                        (GHC.Prim.MutVar#
                           <GHC.Prim.RealWorld>_N
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R)_R
                        s2# of ds2 { (#,#) ipv11 ipv12 ->
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv12
                        (Yesod.Core.Types.GWData
                           @ (Yesod.Routes.Class.Route Foundation.App)
                           (\ (_render :: Text.Hamlet.Render
                                            (Yesod.Routes.Class.Route Foundation.App)) ->
                            Text.Blaze.Internal.Append
                              @ ()
                              @ ()
                              Foundation.$fYesodApp7
                              (Text.Blaze.Internal.Append
                                 @ ()
                                 @ ()
                                 w
                                 (Text.Blaze.Internal.Append
                                    @ ()
                                    @ ()
                                    Foundation.$fYesodApp2
                                    (w1 _render))))
                             `cast`
                           (Sym (Yesod.Core.Types.N:Body[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R))
                           (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                             `cast`
                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Script
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Script
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Stylesheet
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Stylesheet
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (Data.Map.Internal.Tip
                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Data.Text.Internal.Builder.Builder))
                           (GHC.Base.Nothing
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Text.Julius.Javascript))
                           (Yesod.Core.Types.$fIsStringWidgetFor2
                              @ (Yesod.Routes.Class.Route Foundation.App))
                             `cast`
                           (Sym (Yesod.Core.Types.N:Head[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R)))
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x'1 { Yesod.Core.Types.GWData ipv13 ipv14 ipv15 ipv16 ipv17 ipv18 ipv19 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        ww
                          `cast`
                        (GHC.Prim.MutVar#
                           <GHC.Prim.RealWorld>_N
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R)_R
                        x'1
                        ipv11 of s2#1 { DEFAULT ->
                 (# s2#1, GHC.Tuple.() #) } } } } } }) -}
3dac9b08c31051e4d3a131a8dcf8ab01
  $w$cjoinPath ::
    Data.Text.Internal.Text
    -> [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BufferRange
       -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)
  {- Arity: 3, Strictness: <L,U(U,U,U)><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Text.Internal.Text)
                   (w1 :: [Data.Text.Internal.Text])
                   (w2 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
                   @ r ->
                 let {
                   g :: Data.ByteString.Builder.Internal.BuildStep r
                        -> Data.ByteString.Builder.Internal.BuildStep r
                   = (Network.HTTP.Types.URI.encodePath
                        (case w1 of wild {
                           [] -> Foundation.$fYesodApp29
                           : ds1 ds2
                           -> GHC.Base.map
                                @ Data.Text.Internal.Text
                                @ Data.Text.Internal.Text
                                Foundation.$fYesodApp28
                                wild })
                        (GHC.Base.map
                           @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                           @ (Data.ByteString.Internal.ByteString,
                              GHC.Base.Maybe Data.ByteString.Internal.ByteString)
                           Foundation.$fYesodApp27
                           w2))
                       `cast`
                     (Data.ByteString.Builder.Internal.N:Builder[0])
                       @ r
                 } in
                 (\ (x :: Data.ByteString.Builder.Internal.BuildStep r) ->
                  let {
                    w3 :: Data.ByteString.Builder.Internal.BufferRange
                          -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)
                    = g x
                  } in
                  \ (w4 :: Data.ByteString.Builder.Internal.BufferRange)
                    (w5 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case w of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                  case w4 of ww4 { Data.ByteString.Builder.Internal.BufferRange ww5 ww6 ->
                  Data.Text.Encoding.$wencodeUtf8Builder
                    ww1
                    ww2
                    ww3
                    @ r
                    w3
                    ww5
                    ww6
                    w5 } })
                   `cast`
                 (<Data.ByteString.Builder.Internal.BuildStep r>_R
                  ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                  ->_R Sym (GHC.Types.N:IO[0]
                                <Data.ByteString.Builder.Internal.BuildSignal r>_R))) -}
90a6dd4b5a391ad18c4dfe57fe1a56ab
  $w$cmakeSessionBackend ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Yesod.Core.Types.SessionBackend #)
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Web.ClientSession.getDefaultKey2
                        Web.ClientSession.defaultKeyFile
                        w of ds1 { (#,#) ipv ipv1 ->
                 case Yesod.Core.Internal.Session.clientSessionDateCacher1
                        Foundation.$fYesodApp19
                          `cast`
                        (Sym (Data.Fixed.N:Fixed[0]
                                  <Data.Fixed.E12>_P) ; Sym (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,) getCachedDate _closeDateCacher ->
                 (# ipv2,
                    GHC.Base.Just
                      @ Yesod.Core.Types.SessionBackend
                      (Yesod.Core.Class.Yesod.$dmmakeSessionBackend1 ipv1 getCachedDate)
                        `cast`
                      ((<Network.Wai.Internal.Request>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <(Data.Map.Internal.Map
                                          Data.Text.Internal.Text
                                          Data.ByteString.Internal.ByteString,
                                        Yesod.Core.Types.SessionMap
                                        -> GHC.Types.IO
                                             [Yesod.Core.Types.Header])>_R)) ; Sym (Yesod.Core.Types.N:SessionBackend[0])) #) } } }) -}
fad4d7498437d0835053b4479d34e8e2
  $w$cparseRoute ::
    [Data.Text.Internal.Text]
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: [Data.Text.Internal.Text]) ->
                 case ww of wild {
                   [] -> Foundation.$fParseRouteApp13
                   : ds ds1
                   -> case ds of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                      case Foundation.$fParseRouteApp11 of wild2 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                      let {
                        fail :: GHC.Prim.Void#
                                -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
                          <join 1> {- Arity: 1, Strictness: <L,A> -}
                        = \ (ds2 :: GHC.Prim.Void#)[OneShot] ->
                          case Foundation.$fParseRouteApp9 of wild3 { Data.Text.Internal.Text dt7 dt8 dt9 ->
                          let {
                            fail1 :: GHC.Prim.Void#
                                     -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
                              <join 1> {- Arity: 1, Strictness: <L,A> -}
                            = \ (ds3 :: GHC.Prim.Void#)[OneShot] ->
                              case Foundation.$fParseRouteApp7 of wild4 { Data.Text.Internal.Text dt10 dt11 dt12 ->
                              let {
                                fail2 :: GHC.Prim.Void#
                                         -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
                                  <join 1> {- Arity: 1, Strictness: <L,A> -}
                                = \ (ds4 :: GHC.Prim.Void#)[OneShot] ->
                                  case Foundation.$fParseRouteApp5 of wild5 { Data.Text.Internal.Text dt13 dt14 dt15 ->
                                  case GHC.Prim.==# dt2 dt15 of lwild {
                                    DEFAULT
                                    -> GHC.Base.Nothing @ (Yesod.Routes.Class.Route Foundation.App)
                                    1#
                                    -> case {__pkg_ccall text-1.2.3.1 GHC.Prim.ByteArray#
                                                                      -> GHC.Prim.Word#
                                                                      -> GHC.Prim.ByteArray#
                                                                      -> GHC.Prim.Word#
                                                                      -> GHC.Prim.Word#
                                                                      -> GHC.Prim.State#
                                                                           GHC.Prim.RealWorld
                                                                      -> (# GHC.Prim.State#
                                                                              GHC.Prim.RealWorld,
                                                                            GHC.Prim.Int# #)}
                                              dt
                                              (GHC.Prim.int2Word# dt1)
                                              dt13
                                              (GHC.Prim.int2Word# dt14)
                                              (GHC.Prim.int2Word# dt2)
                                              GHC.Prim.realWorld# of wild6 { (#,#) ds5 ds6 ->
                                       case GHC.Prim.narrow32Int# ds6 of wild7 {
                                         DEFAULT
                                         -> GHC.Base.Nothing
                                              @ (Yesod.Routes.Class.Route Foundation.App)
                                         0#
                                         -> case ds1 of wild8 {
                                              [] -> Foundation.$fParseRouteApp4
                                              : ipv ipv1
                                              -> GHC.Base.Nothing
                                                   @ (Yesod.Routes.Class.Route
                                                        Foundation.App) } } } } }
                              } in
                              case GHC.Prim.==# dt2 dt12 of lwild {
                                DEFAULT -> fail2 GHC.Prim.void#
                                1#
                                -> case {__pkg_ccall text-1.2.3.1 GHC.Prim.ByteArray#
                                                                  -> GHC.Prim.Word#
                                                                  -> GHC.Prim.ByteArray#
                                                                  -> GHC.Prim.Word#
                                                                  -> GHC.Prim.Word#
                                                                  -> GHC.Prim.State#
                                                                       GHC.Prim.RealWorld
                                                                  -> (# GHC.Prim.State#
                                                                          GHC.Prim.RealWorld,
                                                                        GHC.Prim.Int# #)}
                                          dt
                                          (GHC.Prim.int2Word# dt1)
                                          dt10
                                          (GHC.Prim.int2Word# dt11)
                                          (GHC.Prim.int2Word# dt2)
                                          GHC.Prim.realWorld# of wild5 { (#,#) ds4 ds5 ->
                                   case GHC.Prim.narrow32Int# ds5 of wild6 {
                                     DEFAULT -> fail2 GHC.Prim.void#
                                     0#
                                     -> case ds1 of wild7 {
                                          [] -> Foundation.$fParseRouteApp3
                                          : ipv ipv1 -> fail2 GHC.Prim.void# } } } } }
                          } in
                          case GHC.Prim.==# dt2 dt9 of lwild {
                            DEFAULT -> fail1 GHC.Prim.void#
                            1#
                            -> case {__pkg_ccall text-1.2.3.1 GHC.Prim.ByteArray#
                                                              -> GHC.Prim.Word#
                                                              -> GHC.Prim.ByteArray#
                                                              -> GHC.Prim.Word#
                                                              -> GHC.Prim.Word#
                                                              -> GHC.Prim.State# GHC.Prim.RealWorld
                                                              -> (# GHC.Prim.State#
                                                                      GHC.Prim.RealWorld,
                                                                    GHC.Prim.Int# #)}
                                      dt
                                      (GHC.Prim.int2Word# dt1)
                                      dt7
                                      (GHC.Prim.int2Word# dt8)
                                      (GHC.Prim.int2Word# dt2)
                                      GHC.Prim.realWorld# of wild5 { (#,#) ds3 ds4 ->
                               case GHC.Prim.narrow32Int# ds4 of wild4 {
                                 DEFAULT -> fail1 GHC.Prim.void#
                                 0#
                                 -> case ds1 of wild6 {
                                      [] -> Foundation.$fParseRouteApp2
                                      : ipv ipv1 -> fail1 GHC.Prim.void# } } } } }
                      } in
                      case GHC.Prim.==# dt2 dt5 of lwild {
                        DEFAULT -> fail GHC.Prim.void#
                        1#
                        -> case {__pkg_ccall text-1.2.3.1 GHC.Prim.ByteArray#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.ByteArray#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.State# GHC.Prim.RealWorld
                                                          -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                GHC.Prim.Int# #)}
                                  dt
                                  (GHC.Prim.int2Word# dt1)
                                  dt3
                                  (GHC.Prim.int2Word# dt4)
                                  (GHC.Prim.int2Word# dt2)
                                  GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                           case GHC.Prim.narrow32Int# ds3 of wild3 {
                             DEFAULT -> fail GHC.Prim.void#
                             0#
                             -> case ds1 of wild4 {
                                  [] -> Foundation.$fParseRouteApp1
                                  : ipv ipv1 -> fail GHC.Prim.void# } } } } } } }) -}
3e59c820aeae0c1a09a9ca0f514a3811
  $w$cpersistUniqueToFieldNames ::
    GHC.Prim.Void#
    -> [(Database.Persist.Types.Base.HaskellName,
         Database.Persist.Types.Base.DBName)]
  {- Arity: 1, Strictness: <B,A>x, Inline: [0] -}
13e2918cedd72731609eb50d40a269a8
  $w$cpersistUniqueToValues ::
    GHC.Prim.Void# -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, Strictness: <B,A>x, Inline: [0] -}
ab0e720acfd8349912d50cf443256369
  $w$creadPrec ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Cliente
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   @ b
                   (w :: Database.Persist.Class.PersistEntity.Key Foundation.Cliente
                         -> Text.ParserCombinators.ReadP.P b) ->
                 case GHC.Prim.<=# ww 11# of lwild {
                   DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                   1#
                   -> let {
                        lvl118 :: Text.ParserCombinators.ReadP.P b
                        = let {
                            lvl55 :: Text.ParserCombinators.ReadP.P b
                            = let {
                                lvl119 :: Text.ParserCombinators.ReadP.P b
                                = ((GHC.Read.readField
                                      @ (Database.Persist.Class.PersistStore.BackendKey
                                           Database.Persist.Sql.Types.Internal.SqlBackend)
                                      Foundation.$fReadKey14
                                      Foundation.$fReadKey13
                                        `cast`
                                      ((<Text.ParserCombinators.ReadPrec.Prec>_R
                                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                                      <Database.Persist.Class.PersistStore.BackendKey
                                                         Database.Persist.Sql.Types.Internal.SqlBackend>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                                                                        <Database.Persist.Class.PersistStore.BackendKey
                                                                                                                           Database.Persist.Sql.Types.Internal.SqlBackend>_R)))
                                     `cast`
                                   (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                        <Database.Persist.Class.PersistStore.BackendKey
                                           Database.Persist.Sql.Types.Internal.SqlBackend>_R)
                                     Foundation.$fReadKey12)
                                    `cast`
                                  (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Database.Persist.Class.PersistStore.BackendKey
                                          Database.Persist.Sql.Types.Internal.SqlBackend>_R)
                                    @ b
                                    (\ (a1 :: Database.Persist.Class.PersistStore.BackendKey
                                                Database.Persist.Sql.Types.Internal.SqlBackend) ->
                                     let {
                                       lvl56 :: Text.ParserCombinators.ReadP.P b
                                       = let {
                                           lvl57 :: Text.ParserCombinators.ReadP.P b
                                           = w a1
                                                 `cast`
                                               (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0]))
                                         } in
                                         Text.Read.Lex.expect2
                                           @ b
                                           (\ (a3 :: Text.Read.Lex.Lexeme) ->
                                            case a3 of wild {
                                              DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                              Text.Read.Lex.Punc a2
                                              -> case GHC.Base.eqString
                                                        a2
                                                        Foundation.$fReadKey10 of wild1 {
                                                   GHC.Types.False
                                                   -> Text.ParserCombinators.ReadP.Fail @ b
                                                   GHC.Types.True -> lvl57 } })
                                     } in
                                     let {
                                       k :: () -> Text.ParserCombinators.ReadP.P b
                                         {- Arity: 1, Strictness: <L,A>,
                                            Unfolding: InlineRule (1, True, True)
                                                       (\ (a3 :: ()) -> lvl56) -}
                                       = \ (a3 :: ()) -> lvl56
                                     } in
                                     Text.ParserCombinators.ReadP.Look
                                       @ b
                                       (\ (a :: GHC.Base.String) ->
                                        Text.ParserCombinators.ReadP.skipSpaces2 a @ b k))
                              } in
                              Text.Read.Lex.expect2
                                @ b
                                (\ (a3 :: Text.Read.Lex.Lexeme) ->
                                 case a3 of wild {
                                   DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                   Text.Read.Lex.Punc a1
                                   -> case GHC.Base.eqString a1 Foundation.$fReadKey8 of wild1 {
                                        GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                        GHC.Types.True -> lvl119 } })
                          } in
                          let {
                            k :: () -> Text.ParserCombinators.ReadP.P b
                              {- Arity: 1, Strictness: <L,A>,
                                 Unfolding: InlineRule (1, True, True) (\ (a3 :: ()) -> lvl55) -}
                            = \ (a3 :: ()) -> lvl55
                          } in
                          let {
                            lvl119 :: GHC.Base.String -> Text.ParserCombinators.ReadP.P b
                              {- Arity: 1, Strictness: <S,1*U>,
                                 Unfolding: InlineRule (1, True, False)
                                            (\ (a :: GHC.Base.String) ->
                                             Text.ParserCombinators.ReadP.skipSpaces2 a @ b k) -}
                            = \ (a :: GHC.Base.String) ->
                              Text.ParserCombinators.ReadP.skipSpaces2 a @ b k
                          } in
                          let {
                            lvl56 :: Text.ParserCombinators.ReadP.P b
                            = Text.ParserCombinators.ReadP.Look @ b lvl119
                          } in
                          Text.Read.Lex.expect2
                            @ b
                            (\ (a3 :: Text.Read.Lex.Lexeme) ->
                             case a3 of wild {
                               DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                               Text.Read.Lex.Ident a1
                               -> case GHC.Base.eqString a1 Foundation.$fReadKey6 of wild1 {
                                    GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                    GHC.Types.True -> lvl56 } })
                      } in
                      let {
                        k :: () -> Text.ParserCombinators.ReadP.P b
                          {- Arity: 1, Strictness: <L,A>,
                             Unfolding: InlineRule (1, True, True) (\ (a3 :: ()) -> lvl118) -}
                        = \ (a3 :: ()) -> lvl118
                      } in
                      Text.ParserCombinators.ReadP.Look
                        @ b
                        (\ (a :: GHC.Base.String) ->
                         Text.ParserCombinators.ReadP.skipSpaces2 a @ b k) }) -}
388dd4c04563308c88c61ef89b3610ad
  $w$creadPrec1 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   @ b
                   (w :: Database.Persist.Class.PersistEntity.Key
                           Foundation.ItemPedido
                         -> Text.ParserCombinators.ReadP.P b) ->
                 case GHC.Prim.<=# ww 11# of lwild {
                   DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                   1#
                   -> let {
                        lvl118 :: Text.ParserCombinators.ReadP.P b
                        = let {
                            lvl55 :: Text.ParserCombinators.ReadP.P b
                            = let {
                                lvl119 :: Text.ParserCombinators.ReadP.P b
                                = ((GHC.Read.readField
                                      @ (Database.Persist.Class.PersistStore.BackendKey
                                           Database.Persist.Sql.Types.Internal.SqlBackend)
                                      Foundation.$fReadKey21
                                      Foundation.$fReadKey13
                                        `cast`
                                      ((<Text.ParserCombinators.ReadPrec.Prec>_R
                                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                                      <Database.Persist.Class.PersistStore.BackendKey
                                                         Database.Persist.Sql.Types.Internal.SqlBackend>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                                                                        <Database.Persist.Class.PersistStore.BackendKey
                                                                                                                           Database.Persist.Sql.Types.Internal.SqlBackend>_R)))
                                     `cast`
                                   (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                        <Database.Persist.Class.PersistStore.BackendKey
                                           Database.Persist.Sql.Types.Internal.SqlBackend>_R)
                                     Foundation.$fReadKey12)
                                    `cast`
                                  (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Database.Persist.Class.PersistStore.BackendKey
                                          Database.Persist.Sql.Types.Internal.SqlBackend>_R)
                                    @ b
                                    (\ (a1 :: Database.Persist.Class.PersistStore.BackendKey
                                                Database.Persist.Sql.Types.Internal.SqlBackend) ->
                                     let {
                                       lvl56 :: Text.ParserCombinators.ReadP.P b
                                       = let {
                                           lvl57 :: Text.ParserCombinators.ReadP.P b
                                           = w a1
                                                 `cast`
                                               (Sym (Foundation.N:R:KeyItemPedido[0]) ; Sym (Foundation.D:R:KeyItemPedido0[0]))
                                         } in
                                         Text.Read.Lex.expect2
                                           @ b
                                           (\ (a3 :: Text.Read.Lex.Lexeme) ->
                                            case a3 of wild {
                                              DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                              Text.Read.Lex.Punc a2
                                              -> case GHC.Base.eqString
                                                        a2
                                                        Foundation.$fReadKey10 of wild1 {
                                                   GHC.Types.False
                                                   -> Text.ParserCombinators.ReadP.Fail @ b
                                                   GHC.Types.True -> lvl57 } })
                                     } in
                                     let {
                                       k :: () -> Text.ParserCombinators.ReadP.P b
                                         {- Arity: 1, Strictness: <L,A>,
                                            Unfolding: InlineRule (1, True, True)
                                                       (\ (a3 :: ()) -> lvl56) -}
                                       = \ (a3 :: ()) -> lvl56
                                     } in
                                     Text.ParserCombinators.ReadP.Look
                                       @ b
                                       (\ (a :: GHC.Base.String) ->
                                        Text.ParserCombinators.ReadP.skipSpaces2 a @ b k))
                              } in
                              Text.Read.Lex.expect2
                                @ b
                                (\ (a3 :: Text.Read.Lex.Lexeme) ->
                                 case a3 of wild {
                                   DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                   Text.Read.Lex.Punc a1
                                   -> case GHC.Base.eqString a1 Foundation.$fReadKey8 of wild1 {
                                        GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                        GHC.Types.True -> lvl119 } })
                          } in
                          let {
                            k :: () -> Text.ParserCombinators.ReadP.P b
                              {- Arity: 1, Strictness: <L,A>,
                                 Unfolding: InlineRule (1, True, True) (\ (a3 :: ()) -> lvl55) -}
                            = \ (a3 :: ()) -> lvl55
                          } in
                          let {
                            lvl119 :: GHC.Base.String -> Text.ParserCombinators.ReadP.P b
                              {- Arity: 1, Strictness: <S,1*U>,
                                 Unfolding: InlineRule (1, True, False)
                                            (\ (a :: GHC.Base.String) ->
                                             Text.ParserCombinators.ReadP.skipSpaces2 a @ b k) -}
                            = \ (a :: GHC.Base.String) ->
                              Text.ParserCombinators.ReadP.skipSpaces2 a @ b k
                          } in
                          let {
                            lvl56 :: Text.ParserCombinators.ReadP.P b
                            = Text.ParserCombinators.ReadP.Look @ b lvl119
                          } in
                          Text.Read.Lex.expect2
                            @ b
                            (\ (a3 :: Text.Read.Lex.Lexeme) ->
                             case a3 of wild {
                               DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                               Text.Read.Lex.Ident a1
                               -> case GHC.Base.eqString a1 Foundation.$fReadKey19 of wild1 {
                                    GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                    GHC.Types.True -> lvl56 } })
                      } in
                      let {
                        k :: () -> Text.ParserCombinators.ReadP.P b
                          {- Arity: 1, Strictness: <L,A>,
                             Unfolding: InlineRule (1, True, True) (\ (a3 :: ()) -> lvl118) -}
                        = \ (a3 :: ()) -> lvl118
                      } in
                      Text.ParserCombinators.ReadP.Look
                        @ b
                        (\ (a :: GHC.Base.String) ->
                         Text.ParserCombinators.ReadP.skipSpaces2 a @ b k) }) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $w$creadPrec2 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Pedido
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   @ b
                   (w :: Database.Persist.Class.PersistEntity.Key Foundation.Pedido
                         -> Text.ParserCombinators.ReadP.P b) ->
                 case GHC.Prim.<=# ww 11# of lwild {
                   DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                   1#
                   -> let {
                        lvl118 :: Text.ParserCombinators.ReadP.P b
                        = let {
                            lvl55 :: Text.ParserCombinators.ReadP.P b
                            = let {
                                lvl119 :: Text.ParserCombinators.ReadP.P b
                                = ((GHC.Read.readField
                                      @ (Database.Persist.Class.PersistStore.BackendKey
                                           Database.Persist.Sql.Types.Internal.SqlBackend)
                                      Foundation.$fReadKey28
                                      Foundation.$fReadKey13
                                        `cast`
                                      ((<Text.ParserCombinators.ReadPrec.Prec>_R
                                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                                      <Database.Persist.Class.PersistStore.BackendKey
                                                         Database.Persist.Sql.Types.Internal.SqlBackend>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                                                                        <Database.Persist.Class.PersistStore.BackendKey
                                                                                                                           Database.Persist.Sql.Types.Internal.SqlBackend>_R)))
                                     `cast`
                                   (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                        <Database.Persist.Class.PersistStore.BackendKey
                                           Database.Persist.Sql.Types.Internal.SqlBackend>_R)
                                     Foundation.$fReadKey12)
                                    `cast`
                                  (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Database.Persist.Class.PersistStore.BackendKey
                                          Database.Persist.Sql.Types.Internal.SqlBackend>_R)
                                    @ b
                                    (\ (a1 :: Database.Persist.Class.PersistStore.BackendKey
                                                Database.Persist.Sql.Types.Internal.SqlBackend) ->
                                     let {
                                       lvl56 :: Text.ParserCombinators.ReadP.P b
                                       = let {
                                           lvl57 :: Text.ParserCombinators.ReadP.P b
                                           = w a1
                                                 `cast`
                                               (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0]))
                                         } in
                                         Text.Read.Lex.expect2
                                           @ b
                                           (\ (a3 :: Text.Read.Lex.Lexeme) ->
                                            case a3 of wild {
                                              DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                              Text.Read.Lex.Punc a2
                                              -> case GHC.Base.eqString
                                                        a2
                                                        Foundation.$fReadKey10 of wild1 {
                                                   GHC.Types.False
                                                   -> Text.ParserCombinators.ReadP.Fail @ b
                                                   GHC.Types.True -> lvl57 } })
                                     } in
                                     let {
                                       k :: () -> Text.ParserCombinators.ReadP.P b
                                         {- Arity: 1, Strictness: <L,A>,
                                            Unfolding: InlineRule (1, True, True)
                                                       (\ (a3 :: ()) -> lvl56) -}
                                       = \ (a3 :: ()) -> lvl56
                                     } in
                                     Text.ParserCombinators.ReadP.Look
                                       @ b
                                       (\ (a :: GHC.Base.String) ->
                                        Text.ParserCombinators.ReadP.skipSpaces2 a @ b k))
                              } in
                              Text.Read.Lex.expect2
                                @ b
                                (\ (a3 :: Text.Read.Lex.Lexeme) ->
                                 case a3 of wild {
                                   DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                   Text.Read.Lex.Punc a1
                                   -> case GHC.Base.eqString a1 Foundation.$fReadKey8 of wild1 {
                                        GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                        GHC.Types.True -> lvl119 } })
                          } in
                          let {
                            k :: () -> Text.ParserCombinators.ReadP.P b
                              {- Arity: 1, Strictness: <L,A>,
                                 Unfolding: InlineRule (1, True, True) (\ (a3 :: ()) -> lvl55) -}
                            = \ (a3 :: ()) -> lvl55
                          } in
                          let {
                            lvl119 :: GHC.Base.String -> Text.ParserCombinators.ReadP.P b
                              {- Arity: 1, Strictness: <S,1*U>,
                                 Unfolding: InlineRule (1, True, False)
                                            (\ (a :: GHC.Base.String) ->
                                             Text.ParserCombinators.ReadP.skipSpaces2 a @ b k) -}
                            = \ (a :: GHC.Base.String) ->
                              Text.ParserCombinators.ReadP.skipSpaces2 a @ b k
                          } in
                          let {
                            lvl56 :: Text.ParserCombinators.ReadP.P b
                            = Text.ParserCombinators.ReadP.Look @ b lvl119
                          } in
                          Text.Read.Lex.expect2
                            @ b
                            (\ (a3 :: Text.Read.Lex.Lexeme) ->
                             case a3 of wild {
                               DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                               Text.Read.Lex.Ident a1
                               -> case GHC.Base.eqString a1 Foundation.$fReadKey26 of wild1 {
                                    GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                    GHC.Types.True -> lvl56 } })
                      } in
                      let {
                        k :: () -> Text.ParserCombinators.ReadP.P b
                          {- Arity: 1, Strictness: <L,A>,
                             Unfolding: InlineRule (1, True, True) (\ (a3 :: ()) -> lvl118) -}
                        = \ (a3 :: ()) -> lvl118
                      } in
                      Text.ParserCombinators.ReadP.Look
                        @ b
                        (\ (a :: GHC.Base.String) ->
                         Text.ParserCombinators.ReadP.skipSpaces2 a @ b k) }) -}
d115186e041a4b3c4d5ea956a0e873a2
  $w$creadPrec3 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Produto
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   @ b
                   (w :: Database.Persist.Class.PersistEntity.Key Foundation.Produto
                         -> Text.ParserCombinators.ReadP.P b) ->
                 case GHC.Prim.<=# ww 11# of lwild {
                   DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                   1#
                   -> let {
                        lvl118 :: Text.ParserCombinators.ReadP.P b
                        = let {
                            lvl55 :: Text.ParserCombinators.ReadP.P b
                            = let {
                                lvl119 :: Text.ParserCombinators.ReadP.P b
                                = ((GHC.Read.readField
                                      @ (Database.Persist.Class.PersistStore.BackendKey
                                           Database.Persist.Sql.Types.Internal.SqlBackend)
                                      Foundation.$fReadKey35
                                      Foundation.$fReadKey13
                                        `cast`
                                      ((<Text.ParserCombinators.ReadPrec.Prec>_R
                                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                                      <Database.Persist.Class.PersistStore.BackendKey
                                                         Database.Persist.Sql.Types.Internal.SqlBackend>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                                                                        <Database.Persist.Class.PersistStore.BackendKey
                                                                                                                           Database.Persist.Sql.Types.Internal.SqlBackend>_R)))
                                     `cast`
                                   (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                        <Database.Persist.Class.PersistStore.BackendKey
                                           Database.Persist.Sql.Types.Internal.SqlBackend>_R)
                                     Foundation.$fReadKey12)
                                    `cast`
                                  (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Database.Persist.Class.PersistStore.BackendKey
                                          Database.Persist.Sql.Types.Internal.SqlBackend>_R)
                                    @ b
                                    (\ (a1 :: Database.Persist.Class.PersistStore.BackendKey
                                                Database.Persist.Sql.Types.Internal.SqlBackend) ->
                                     let {
                                       lvl56 :: Text.ParserCombinators.ReadP.P b
                                       = let {
                                           lvl57 :: Text.ParserCombinators.ReadP.P b
                                           = w a1
                                                 `cast`
                                               (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0]))
                                         } in
                                         Text.Read.Lex.expect2
                                           @ b
                                           (\ (a3 :: Text.Read.Lex.Lexeme) ->
                                            case a3 of wild {
                                              DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                              Text.Read.Lex.Punc a2
                                              -> case GHC.Base.eqString
                                                        a2
                                                        Foundation.$fReadKey10 of wild1 {
                                                   GHC.Types.False
                                                   -> Text.ParserCombinators.ReadP.Fail @ b
                                                   GHC.Types.True -> lvl57 } })
                                     } in
                                     let {
                                       k :: () -> Text.ParserCombinators.ReadP.P b
                                         {- Arity: 1, Strictness: <L,A>,
                                            Unfolding: InlineRule (1, True, True)
                                                       (\ (a3 :: ()) -> lvl56) -}
                                       = \ (a3 :: ()) -> lvl56
                                     } in
                                     Text.ParserCombinators.ReadP.Look
                                       @ b
                                       (\ (a :: GHC.Base.String) ->
                                        Text.ParserCombinators.ReadP.skipSpaces2 a @ b k))
                              } in
                              Text.Read.Lex.expect2
                                @ b
                                (\ (a3 :: Text.Read.Lex.Lexeme) ->
                                 case a3 of wild {
                                   DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                   Text.Read.Lex.Punc a1
                                   -> case GHC.Base.eqString a1 Foundation.$fReadKey8 of wild1 {
                                        GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                        GHC.Types.True -> lvl119 } })
                          } in
                          let {
                            k :: () -> Text.ParserCombinators.ReadP.P b
                              {- Arity: 1, Strictness: <L,A>,
                                 Unfolding: InlineRule (1, True, True) (\ (a3 :: ()) -> lvl55) -}
                            = \ (a3 :: ()) -> lvl55
                          } in
                          let {
                            lvl119 :: GHC.Base.String -> Text.ParserCombinators.ReadP.P b
                              {- Arity: 1, Strictness: <S,1*U>,
                                 Unfolding: InlineRule (1, True, False)
                                            (\ (a :: GHC.Base.String) ->
                                             Text.ParserCombinators.ReadP.skipSpaces2 a @ b k) -}
                            = \ (a :: GHC.Base.String) ->
                              Text.ParserCombinators.ReadP.skipSpaces2 a @ b k
                          } in
                          let {
                            lvl56 :: Text.ParserCombinators.ReadP.P b
                            = Text.ParserCombinators.ReadP.Look @ b lvl119
                          } in
                          Text.Read.Lex.expect2
                            @ b
                            (\ (a3 :: Text.Read.Lex.Lexeme) ->
                             case a3 of wild {
                               DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                               Text.Read.Lex.Ident a1
                               -> case GHC.Base.eqString a1 Foundation.$fReadKey33 of wild1 {
                                    GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                    GHC.Types.True -> lvl56 } })
                      } in
                      let {
                        k :: () -> Text.ParserCombinators.ReadP.P b
                          {- Arity: 1, Strictness: <L,A>,
                             Unfolding: InlineRule (1, True, True) (\ (a3 :: ()) -> lvl118) -}
                        = \ (a3 :: ()) -> lvl118
                      } in
                      Text.ParserCombinators.ReadP.Look
                        @ b
                        (\ (a :: GHC.Base.String) ->
                         Text.ParserCombinators.ReadP.skipSpaces2 a @ b k) }) -}
b5272135afcffe4d7282ae6ad9b22515
  $w$creadPrec4 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   @ b
                   (w :: Database.Persist.Class.PersistEntity.Key
                           Foundation.TipoProduto
                         -> Text.ParserCombinators.ReadP.P b) ->
                 case GHC.Prim.<=# ww 11# of lwild {
                   DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                   1#
                   -> let {
                        lvl118 :: Text.ParserCombinators.ReadP.P b
                        = let {
                            lvl55 :: Text.ParserCombinators.ReadP.P b
                            = let {
                                lvl119 :: Text.ParserCombinators.ReadP.P b
                                = ((GHC.Read.readField
                                      @ (Database.Persist.Class.PersistStore.BackendKey
                                           Database.Persist.Sql.Types.Internal.SqlBackend)
                                      Foundation.$fReadKey42
                                      Foundation.$fReadKey13
                                        `cast`
                                      ((<Text.ParserCombinators.ReadPrec.Prec>_R
                                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                                      <Database.Persist.Class.PersistStore.BackendKey
                                                         Database.Persist.Sql.Types.Internal.SqlBackend>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                                                                        <Database.Persist.Class.PersistStore.BackendKey
                                                                                                                           Database.Persist.Sql.Types.Internal.SqlBackend>_R)))
                                     `cast`
                                   (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                        <Database.Persist.Class.PersistStore.BackendKey
                                           Database.Persist.Sql.Types.Internal.SqlBackend>_R)
                                     Foundation.$fReadKey12)
                                    `cast`
                                  (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Database.Persist.Class.PersistStore.BackendKey
                                          Database.Persist.Sql.Types.Internal.SqlBackend>_R)
                                    @ b
                                    (\ (a1 :: Database.Persist.Class.PersistStore.BackendKey
                                                Database.Persist.Sql.Types.Internal.SqlBackend) ->
                                     let {
                                       lvl56 :: Text.ParserCombinators.ReadP.P b
                                       = let {
                                           lvl57 :: Text.ParserCombinators.ReadP.P b
                                           = w a1
                                                 `cast`
                                               (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0]))
                                         } in
                                         Text.Read.Lex.expect2
                                           @ b
                                           (\ (a3 :: Text.Read.Lex.Lexeme) ->
                                            case a3 of wild {
                                              DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                              Text.Read.Lex.Punc a2
                                              -> case GHC.Base.eqString
                                                        a2
                                                        Foundation.$fReadKey10 of wild1 {
                                                   GHC.Types.False
                                                   -> Text.ParserCombinators.ReadP.Fail @ b
                                                   GHC.Types.True -> lvl57 } })
                                     } in
                                     let {
                                       k :: () -> Text.ParserCombinators.ReadP.P b
                                         {- Arity: 1, Strictness: <L,A>,
                                            Unfolding: InlineRule (1, True, True)
                                                       (\ (a3 :: ()) -> lvl56) -}
                                       = \ (a3 :: ()) -> lvl56
                                     } in
                                     Text.ParserCombinators.ReadP.Look
                                       @ b
                                       (\ (a :: GHC.Base.String) ->
                                        Text.ParserCombinators.ReadP.skipSpaces2 a @ b k))
                              } in
                              Text.Read.Lex.expect2
                                @ b
                                (\ (a3 :: Text.Read.Lex.Lexeme) ->
                                 case a3 of wild {
                                   DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                   Text.Read.Lex.Punc a1
                                   -> case GHC.Base.eqString a1 Foundation.$fReadKey8 of wild1 {
                                        GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                        GHC.Types.True -> lvl119 } })
                          } in
                          let {
                            k :: () -> Text.ParserCombinators.ReadP.P b
                              {- Arity: 1, Strictness: <L,A>,
                                 Unfolding: InlineRule (1, True, True) (\ (a3 :: ()) -> lvl55) -}
                            = \ (a3 :: ()) -> lvl55
                          } in
                          let {
                            lvl119 :: GHC.Base.String -> Text.ParserCombinators.ReadP.P b
                              {- Arity: 1, Strictness: <S,1*U>,
                                 Unfolding: InlineRule (1, True, False)
                                            (\ (a :: GHC.Base.String) ->
                                             Text.ParserCombinators.ReadP.skipSpaces2 a @ b k) -}
                            = \ (a :: GHC.Base.String) ->
                              Text.ParserCombinators.ReadP.skipSpaces2 a @ b k
                          } in
                          let {
                            lvl56 :: Text.ParserCombinators.ReadP.P b
                            = Text.ParserCombinators.ReadP.Look @ b lvl119
                          } in
                          Text.Read.Lex.expect2
                            @ b
                            (\ (a3 :: Text.Read.Lex.Lexeme) ->
                             case a3 of wild {
                               DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                               Text.Read.Lex.Ident a1
                               -> case GHC.Base.eqString a1 Foundation.$fReadKey40 of wild1 {
                                    GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                    GHC.Types.True -> lvl56 } })
                      } in
                      let {
                        k :: () -> Text.ParserCombinators.ReadP.P b
                          {- Arity: 1, Strictness: <L,A>,
                             Unfolding: InlineRule (1, True, True) (\ (a3 :: ()) -> lvl118) -}
                        = \ (a3 :: ()) -> lvl118
                      } in
                      Text.ParserCombinators.ReadP.Look
                        @ b
                        (\ (a :: GHC.Base.String) ->
                         Text.ParserCombinators.ReadP.skipSpaces2 a @ b k) }) -}
ab0e720acfd8349912d50cf443256369
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><L,1*U(U)><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   (w1 :: GHC.Base.String) ->
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> GHC.CString.unpackAppendCString#
                        Foundation.$fShowKey6
                        (GHC.CString.unpackAppendCString#
                           Foundation.$fShowKey5
                           (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                              0#
                              w `cast`
                              (Foundation.D:R:KeyCliente0[0] ; Foundation.N:R:KeyCliente[0])
                              (GHC.CString.unpackAppendCString# Foundation.$fReadKey11 w1)))
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Foundation.$fShowKey6
                           (GHC.CString.unpackAppendCString#
                              Foundation.$fShowKey5
                              (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                                 0#
                                 w `cast`
                                 (Foundation.D:R:KeyCliente0[0] ; Foundation.N:R:KeyCliente[0])
                                 (GHC.CString.unpackAppendCString#
                                    Foundation.$fReadKey11
                                    (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w1))))) }) -}
388dd4c04563308c88c61ef89b3610ad
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><L,1*U(U)><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Database.Persist.Class.PersistEntity.Key
                           Foundation.ItemPedido)
                   (w1 :: GHC.Base.String) ->
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> GHC.CString.unpackAppendCString#
                        Foundation.$fShowKey9
                        (GHC.CString.unpackAppendCString#
                           Foundation.$fShowKey8
                           (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                              0#
                              w `cast`
                              (Foundation.D:R:KeyItemPedido0[0] ; Foundation.N:R:KeyItemPedido[0])
                              (GHC.CString.unpackAppendCString# Foundation.$fReadKey11 w1)))
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Foundation.$fShowKey9
                           (GHC.CString.unpackAppendCString#
                              Foundation.$fShowKey8
                              (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                                 0#
                                 w `cast`
                                 (Foundation.D:R:KeyItemPedido0[0] ; Foundation.N:R:KeyItemPedido[0])
                                 (GHC.CString.unpackAppendCString#
                                    Foundation.$fReadKey11
                                    (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w1))))) }) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> Database.Persist.Class.PersistEntity.Key Foundation.Pedido
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><L,1*U(U)><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                   (w1 :: GHC.Base.String) ->
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> GHC.CString.unpackAppendCString#
                        Foundation.$fShowKey12
                        (GHC.CString.unpackAppendCString#
                           Foundation.$fShowKey11
                           (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                              0#
                              w `cast`
                              (Foundation.D:R:KeyPedido0[0] ; Foundation.N:R:KeyPedido[0])
                              (GHC.CString.unpackAppendCString# Foundation.$fReadKey11 w1)))
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Foundation.$fShowKey12
                           (GHC.CString.unpackAppendCString#
                              Foundation.$fShowKey11
                              (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                                 0#
                                 w `cast`
                                 (Foundation.D:R:KeyPedido0[0] ; Foundation.N:R:KeyPedido[0])
                                 (GHC.CString.unpackAppendCString#
                                    Foundation.$fReadKey11
                                    (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w1))))) }) -}
d115186e041a4b3c4d5ea956a0e873a2
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> Database.Persist.Class.PersistEntity.Key Foundation.Produto
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><L,1*U(U)><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                   (w1 :: GHC.Base.String) ->
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> GHC.CString.unpackAppendCString#
                        Foundation.$fShowKey15
                        (GHC.CString.unpackAppendCString#
                           Foundation.$fShowKey14
                           (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                              0#
                              w `cast`
                              (Foundation.D:R:KeyProduto0[0] ; Foundation.N:R:KeyProduto[0])
                              (GHC.CString.unpackAppendCString# Foundation.$fReadKey11 w1)))
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Foundation.$fShowKey15
                           (GHC.CString.unpackAppendCString#
                              Foundation.$fShowKey14
                              (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                                 0#
                                 w `cast`
                                 (Foundation.D:R:KeyProduto0[0] ; Foundation.N:R:KeyProduto[0])
                                 (GHC.CString.unpackAppendCString#
                                    Foundation.$fReadKey11
                                    (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w1))))) }) -}
b5272135afcffe4d7282ae6ad9b22515
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><L,1*U(U)><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Database.Persist.Class.PersistEntity.Key
                           Foundation.TipoProduto)
                   (w1 :: GHC.Base.String) ->
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> GHC.CString.unpackAppendCString#
                        Foundation.$fShowKey18
                        (GHC.CString.unpackAppendCString#
                           Foundation.$fShowKey17
                           (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                              0#
                              w `cast`
                              (Foundation.D:R:KeyTipoProduto0[0] ; Foundation.N:R:KeyTipoProduto[0])
                              (GHC.CString.unpackAppendCString# Foundation.$fReadKey11 w1)))
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Foundation.$fShowKey18
                           (GHC.CString.unpackAppendCString#
                              Foundation.$fShowKey17
                              (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                                 0#
                                 w `cast`
                                 (Foundation.D:R:KeyTipoProduto0[0] ; Foundation.N:R:KeyTipoProduto[0])
                                 (GHC.CString.unpackAppendCString#
                                    Foundation.$fReadKey11
                                    (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w1))))) }) -}
fad4d7498437d0835053b4479d34e8e2
  $w$cshowsPrec5 ::
    Yesod.Routes.Class.Route Foundation.App
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Yesod.Routes.Class.Route Foundation.App)
                   (w1 :: GHC.Base.String) ->
                 case w `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   Foundation.HomeR
                   -> GHC.Base.++ @ GHC.Types.Char Foundation.$fReadRoute25 w1
                   Foundation.ClienteR
                   -> GHC.Base.++ @ GHC.Types.Char Foundation.$fReadRoute21 w1
                   Foundation.LoginR
                   -> GHC.Base.++ @ GHC.Types.Char Foundation.$fReadRoute17 w1
                   Foundation.CardapioR
                   -> GHC.Base.++ @ GHC.Types.Char Foundation.$fReadRoute13 w1
                   Foundation.LogoutR
                   -> GHC.Base.++ @ GHC.Types.Char Foundation.$fReadRoute9 w1 }) -}
ab0e720acfd8349912d50cf443256369
  $w$ctoPersistValue ::
    Foundation.Cliente
    -> (# [(Data.Text.Internal.Text,
            Database.Persist.Types.Base.PersistValue)] #)
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U,U)>, Inline: [0],
     Unfolding: (\ (w :: Foundation.Cliente) ->
                 (# case w of wild { Foundation.Cliente x x1 x2 x3 x4 ->
                    case GHC.Base.map
                           @ Database.Persist.Class.PersistField.SomePersistField
                           @ Database.Persist.Types.Base.PersistValue
                           Database.Persist.Class.PersistField.$fPersistFieldSomePersistField_$ctoPersistValue
                           (GHC.Types.:
                              @ Database.Persist.Class.PersistField.SomePersistField
                              (Database.Persist.Class.PersistField.SomePersistField
                                 @ Data.Text.Internal.Text
                                 Database.Persist.Class.PersistField.$fPersistFieldText0
                                 x)
                              (GHC.Types.:
                                 @ Database.Persist.Class.PersistField.SomePersistField
                                 (Database.Persist.Class.PersistField.SomePersistField
                                    @ Data.Text.Internal.Text
                                    Database.Persist.Class.PersistField.$fPersistFieldText0
                                    x1)
                                 (GHC.Types.:
                                    @ Database.Persist.Class.PersistField.SomePersistField
                                    (Database.Persist.Class.PersistField.SomePersistField
                                       @ Data.Text.Internal.Text
                                       Database.Persist.Class.PersistField.$fPersistFieldText0
                                       x2)
                                    (GHC.Types.:
                                       @ Database.Persist.Class.PersistField.SomePersistField
                                       (Database.Persist.Class.PersistField.SomePersistField
                                          @ Data.Text.Internal.Text
                                          Database.Persist.Class.PersistField.$fPersistFieldText0
                                          x3)
                                       (GHC.Types.:
                                          @ Database.Persist.Class.PersistField.SomePersistField
                                          (Database.Persist.Class.PersistField.SomePersistField
                                             @ Data.Text.Internal.Text
                                             Database.Persist.Class.PersistField.$fPersistFieldText0
                                             x4)
                                          (GHC.Types.[]
                                             @ Database.Persist.Class.PersistField.SomePersistField)))))) of wild1 {
                      []
                      -> GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              Database.Persist.Types.Base.PersistValue)
                      : y ys
                      -> GHC.Types.:
                           @ (Data.Text.Internal.Text,
                              Database.Persist.Types.Base.PersistValue)
                           (Foundation.$fPersistFieldCliente14, y)
                           (case ys of wild2 {
                              []
                              -> GHC.Types.[]
                                   @ (Data.Text.Internal.Text,
                                      Database.Persist.Types.Base.PersistValue)
                              : y1 ys1
                              -> GHC.Types.:
                                   @ (Data.Text.Internal.Text,
                                      Database.Persist.Types.Base.PersistValue)
                                   (Foundation.$fPersistFieldCliente12, y1)
                                   (case ys1 of wild3 {
                                      []
                                      -> GHC.Types.[]
                                           @ (Data.Text.Internal.Text,
                                              Database.Persist.Types.Base.PersistValue)
                                      : y2 ys2
                                      -> GHC.Types.:
                                           @ (Data.Text.Internal.Text,
                                              Database.Persist.Types.Base.PersistValue)
                                           (Foundation.$fPersistFieldCliente10, y2)
                                           (case ys2 of wild4 {
                                              []
                                              -> GHC.Types.[]
                                                   @ (Data.Text.Internal.Text,
                                                      Database.Persist.Types.Base.PersistValue)
                                              : y3 ys3
                                              -> GHC.Types.:
                                                   @ (Data.Text.Internal.Text,
                                                      Database.Persist.Types.Base.PersistValue)
                                                   (Foundation.$fPersistFieldCliente8, y3)
                                                   (case ys3 of wild5 {
                                                      []
                                                      -> GHC.Types.[]
                                                           @ (Data.Text.Internal.Text,
                                                              Database.Persist.Types.Base.PersistValue)
                                                      : y4 ys4
                                                      -> GHC.Types.:
                                                           @ (Data.Text.Internal.Text,
                                                              Database.Persist.Types.Base.PersistValue)
                                                           (Foundation.$fPersistFieldCliente6, y4)
                                                           (GHC.Types.[]
                                                              @ (Data.Text.Internal.Text,
                                                                 Database.Persist.Types.Base.PersistValue)) }) }) }) }) } } #)) -}
388dd4c04563308c88c61ef89b3610ad
  $w$ctoPersistValue1 ::
    Foundation.ItemPedido
    -> (# [(Data.Text.Internal.Text,
            Database.Persist.Types.Base.PersistValue)] #)
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>, Inline: [0],
     Unfolding: (\ (w :: Foundation.ItemPedido) ->
                 (# case w of wild { Foundation.ItemPedido dt dt1 dt2 ->
                    case GHC.Base.map
                           @ Database.Persist.Class.PersistField.SomePersistField
                           @ Database.Persist.Types.Base.PersistValue
                           Database.Persist.Class.PersistField.$fPersistFieldSomePersistField_$ctoPersistValue
                           (GHC.Types.:
                              @ Database.Persist.Class.PersistField.SomePersistField
                              (Database.Persist.Class.PersistField.SomePersistField
                                 @ (Database.Persist.Class.PersistEntity.Key Foundation.Pedido)
                                 Foundation.$fPersistFieldKey2
                                 (GHC.Int.I64# dt)
                                   `cast`
                                 (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0])))))
                              (GHC.Types.:
                                 @ Database.Persist.Class.PersistField.SomePersistField
                                 (Database.Persist.Class.PersistField.SomePersistField
                                    @ (Database.Persist.Class.PersistEntity.Key Foundation.Produto)
                                    Foundation.$fPersistFieldKey0
                                    (GHC.Int.I64# dt1)
                                      `cast`
                                    (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0])))))
                                 (GHC.Types.:
                                    @ Database.Persist.Class.PersistField.SomePersistField
                                    (Database.Persist.Class.PersistField.SomePersistField
                                       @ GHC.Types.Double
                                       Database.Persist.Class.PersistField.$fPersistFieldDouble
                                       (GHC.Types.D# dt2))
                                    (GHC.Types.[]
                                       @ Database.Persist.Class.PersistField.SomePersistField)))) of wild1 {
                      []
                      -> GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              Database.Persist.Types.Base.PersistValue)
                      : y ys
                      -> GHC.Types.:
                           @ (Data.Text.Internal.Text,
                              Database.Persist.Types.Base.PersistValue)
                           (Foundation.$fPersistFieldItemPedido8, y)
                           (case ys of wild2 {
                              []
                              -> GHC.Types.[]
                                   @ (Data.Text.Internal.Text,
                                      Database.Persist.Types.Base.PersistValue)
                              : y1 ys1
                              -> GHC.Types.:
                                   @ (Data.Text.Internal.Text,
                                      Database.Persist.Types.Base.PersistValue)
                                   (Foundation.$fPersistFieldItemPedido6, y1)
                                   (case ys1 of wild3 {
                                      []
                                      -> GHC.Types.[]
                                           @ (Data.Text.Internal.Text,
                                              Database.Persist.Types.Base.PersistValue)
                                      : y2 ys2
                                      -> GHC.Types.:
                                           @ (Data.Text.Internal.Text,
                                              Database.Persist.Types.Base.PersistValue)
                                           (Foundation.$fPersistFieldItemPedido4, y2)
                                           (GHC.Types.[]
                                              @ (Data.Text.Internal.Text,
                                                 Database.Persist.Types.Base.PersistValue)) }) }) } } #)) -}
a0af1d2de58a84f46d8a9e227dc8f746
  $w$ctoPersistValue2 ::
    Foundation.Pedido
    -> (# [(Data.Text.Internal.Text,
            Database.Persist.Types.Base.PersistValue)] #)
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U)>, Inline: [0],
     Unfolding: (\ (w :: Foundation.Pedido) ->
                 (# case w of wild { Foundation.Pedido dt dt1 dt2 x ->
                    case GHC.Base.map
                           @ Database.Persist.Class.PersistField.SomePersistField
                           @ Database.Persist.Types.Base.PersistValue
                           Database.Persist.Class.PersistField.$fPersistFieldSomePersistField_$ctoPersistValue
                           (GHC.Types.:
                              @ Database.Persist.Class.PersistField.SomePersistField
                              (Database.Persist.Class.PersistField.SomePersistField
                                 @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                                 Foundation.$fPersistFieldKey3
                                 (GHC.Int.I64# dt)
                                   `cast`
                                 (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0])))))
                              (GHC.Types.:
                                 @ Database.Persist.Class.PersistField.SomePersistField
                                 (Database.Persist.Class.PersistField.SomePersistField
                                    @ GHC.Types.Double
                                    Database.Persist.Class.PersistField.$fPersistFieldDouble
                                    (GHC.Types.D# dt1))
                                 (GHC.Types.:
                                    @ Database.Persist.Class.PersistField.SomePersistField
                                    (Database.Persist.Class.PersistField.SomePersistField
                                       @ GHC.Types.Double
                                       Database.Persist.Class.PersistField.$fPersistFieldDouble
                                       (GHC.Types.D# dt2))
                                    (GHC.Types.:
                                       @ Database.Persist.Class.PersistField.SomePersistField
                                       (Database.Persist.Class.PersistField.SomePersistField
                                          @ GHC.Types.Bool
                                          Database.Persist.Class.PersistField.$fPersistFieldBool
                                          x)
                                       (GHC.Types.[]
                                          @ Database.Persist.Class.PersistField.SomePersistField))))) of wild1 {
                      []
                      -> GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              Database.Persist.Types.Base.PersistValue)
                      : y ys
                      -> GHC.Types.:
                           @ (Data.Text.Internal.Text,
                              Database.Persist.Types.Base.PersistValue)
                           (Foundation.$fPersistFieldPedido11, y)
                           (case ys of wild2 {
                              []
                              -> GHC.Types.[]
                                   @ (Data.Text.Internal.Text,
                                      Database.Persist.Types.Base.PersistValue)
                              : y1 ys1
                              -> GHC.Types.:
                                   @ (Data.Text.Internal.Text,
                                      Database.Persist.Types.Base.PersistValue)
                                   (Foundation.$fPersistFieldPedido9, y1)
                                   (case ys1 of wild3 {
                                      []
                                      -> GHC.Types.[]
                                           @ (Data.Text.Internal.Text,
                                              Database.Persist.Types.Base.PersistValue)
                                      : y2 ys2
                                      -> GHC.Types.:
                                           @ (Data.Text.Internal.Text,
                                              Database.Persist.Types.Base.PersistValue)
                                           (Foundation.$fPersistFieldPedido7, y2)
                                           (case ys2 of wild4 {
                                              []
                                              -> GHC.Types.[]
                                                   @ (Data.Text.Internal.Text,
                                                      Database.Persist.Types.Base.PersistValue)
                                              : y3 ys3
                                              -> GHC.Types.:
                                                   @ (Data.Text.Internal.Text,
                                                      Database.Persist.Types.Base.PersistValue)
                                                   (Foundation.$fPersistFieldPedido5, y3)
                                                   (GHC.Types.[]
                                                      @ (Data.Text.Internal.Text,
                                                         Database.Persist.Types.Base.PersistValue)) }) }) }) } } #)) -}
d115186e041a4b3c4d5ea956a0e873a2
  $w$ctoPersistValue3 ::
    Foundation.Produto
    -> (# [(Data.Text.Internal.Text,
            Database.Persist.Types.Base.PersistValue)] #)
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>, Inline: [0],
     Unfolding: (\ (w :: Foundation.Produto) ->
                 (# case w of wild { Foundation.Produto x dt dt1 ->
                    case GHC.Base.map
                           @ Database.Persist.Class.PersistField.SomePersistField
                           @ Database.Persist.Types.Base.PersistValue
                           Database.Persist.Class.PersistField.$fPersistFieldSomePersistField_$ctoPersistValue
                           (GHC.Types.:
                              @ Database.Persist.Class.PersistField.SomePersistField
                              (Database.Persist.Class.PersistField.SomePersistField
                                 @ Data.Text.Internal.Text
                                 Database.Persist.Class.PersistField.$fPersistFieldText0
                                 x)
                              (GHC.Types.:
                                 @ Database.Persist.Class.PersistField.SomePersistField
                                 (Database.Persist.Class.PersistField.SomePersistField
                                    @ GHC.Types.Double
                                    Database.Persist.Class.PersistField.$fPersistFieldDouble
                                    (GHC.Types.D# dt))
                                 (GHC.Types.:
                                    @ Database.Persist.Class.PersistField.SomePersistField
                                    (Database.Persist.Class.PersistField.SomePersistField
                                       @ (Database.Persist.Class.PersistEntity.Key
                                            Foundation.TipoProduto)
                                       Foundation.$fPersistFieldKey1
                                       (GHC.Int.I64# dt1)
                                         `cast`
                                       (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0])))))
                                    (GHC.Types.[]
                                       @ Database.Persist.Class.PersistField.SomePersistField)))) of wild1 {
                      []
                      -> GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              Database.Persist.Types.Base.PersistValue)
                      : y ys
                      -> GHC.Types.:
                           @ (Data.Text.Internal.Text,
                              Database.Persist.Types.Base.PersistValue)
                           (Foundation.$fPersistFieldCliente14, y)
                           (case ys of wild2 {
                              []
                              -> GHC.Types.[]
                                   @ (Data.Text.Internal.Text,
                                      Database.Persist.Types.Base.PersistValue)
                              : y1 ys1
                              -> GHC.Types.:
                                   @ (Data.Text.Internal.Text,
                                      Database.Persist.Types.Base.PersistValue)
                                   (Foundation.$fPersistFieldProduto5, y1)
                                   (case ys1 of wild3 {
                                      []
                                      -> GHC.Types.[]
                                           @ (Data.Text.Internal.Text,
                                              Database.Persist.Types.Base.PersistValue)
                                      : y2 ys2
                                      -> GHC.Types.:
                                           @ (Data.Text.Internal.Text,
                                              Database.Persist.Types.Base.PersistValue)
                                           (Foundation.$fPersistFieldProduto3, y2)
                                           (GHC.Types.[]
                                              @ (Data.Text.Internal.Text,
                                                 Database.Persist.Types.Base.PersistValue)) }) }) } } #)) -}
57319d54a006e0ced7eb256af1d47362
  $w$s$wupdateOrSnocWithKey ::
    (Data.Text.Internal.Text -> v -> v -> v)
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> Data.HashMap.Array.Array#
         (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
    -> Data.HashMap.Array.Array
         (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
  {- Arity: 6, Strictness: <L,C(C1(C1(U)))><S,U><S,U><S,U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ v
                   (w :: Data.Text.Internal.Text -> v -> v -> v)
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (w1 :: v)
                   (w2 :: Data.HashMap.Array.Array#
                            (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)) ->
                 let {
                   exit :: v
                           -> Data.HashMap.Array.Array#
                                (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                           -> GHC.Prim.Int#
                           -> Data.Text.Internal.Text
                           -> v
                           -> Data.HashMap.Array.Array
                                (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                     <join 5> {- Arity: 5, Strictness: <L,U><S,U><S,U><L,U><L,U> -}
                   = \ (w3 :: v)[OneShot]
                       (ww3 :: Data.HashMap.Array.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v))[OneShot]
                       (ww4 :: GHC.Prim.Int#)[OneShot]
                       (k2 :: Data.Text.Internal.Text)[OneShot]
                       (y :: v)[OneShot] ->
                     case GHC.Magic.runRW#
                            @ ('GHC.Types.TupleRep
                                 '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                            @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                 Data.HashMap.Array.Array
                                   (Data.HashMap.Base.Leaf Data.Text.Internal.Text v) #)
                            (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             case GHC.Prim.thawSmallArray#
                                    @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                    @ GHC.Prim.RealWorld
                                    ww3
                                    0#
                                    (GHC.Prim.sizeofSmallArray#
                                       @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                       ww3)
                                    s1 of ds2 { (#,#) ipv4 ipv5 ->
                             case GHC.Prim.writeSmallArray#
                                    @ GHC.Prim.RealWorld
                                    @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                    ipv5
                                    ww4
                                    (Data.HashMap.Base.L
                                       @ Data.Text.Internal.Text
                                       @ v
                                       k2
                                       (w k2 w3 y))
                                    ipv4 of s' { DEFAULT ->
                             case GHC.Prim.unsafeFreezeSmallArray#
                                    @ GHC.Prim.RealWorld
                                    @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                    ipv5
                                    s' of ds3 { (#,#) ipv6 ipv7 ->
                             (# ipv6,
                                Data.HashMap.Array.Array
                                  @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                  ipv7 #) } } }) of ds2 { (#,#) ipv4 ipv5 ->
                     ipv5 }
                 } in
                 letrec {
                   $wgo1 :: GHC.Prim.ByteArray#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> v
                            -> Data.HashMap.Array.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> Data.HashMap.Array.Array
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                     <join 7> {- Arity: 7,
                                 Strictness: <L,U><L,U><L,U><L,U><S,U><S,U><S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.ByteArray#)
                       (ww4 :: GHC.Prim.Int#)
                       (ww5 :: GHC.Prim.Int#)
                       (w3 :: v)
                       (ww6 :: Data.HashMap.Array.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v))
                       (ww7 :: GHC.Prim.Int#)
                       (ww8 :: GHC.Prim.Int#) ->
                     case GHC.Prim.>=# ww7 ww8 of lwild {
                       DEFAULT
                       -> case GHC.Prim.indexSmallArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ww6
                                 ww7 of ds1 { Unit# ipv3 ->
                          case ipv3 of wild { Data.HashMap.Base.L kx y ->
                          case kx of wild1 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                          case GHC.Prim.==# ww5 dt5 of lwild1 {
                            DEFAULT -> $wgo1 ww3 ww4 ww5 w3 ww6 (GHC.Prim.+# ww7 1#) ww8
                            1#
                            -> case {__pkg_ccall text-1.2.3.1 GHC.Prim.ByteArray#
                                                              -> GHC.Prim.Word#
                                                              -> GHC.Prim.ByteArray#
                                                              -> GHC.Prim.Word#
                                                              -> GHC.Prim.Word#
                                                              -> GHC.Prim.State# GHC.Prim.RealWorld
                                                              -> (# GHC.Prim.State#
                                                                      GHC.Prim.RealWorld,
                                                                    GHC.Prim.Int# #)}
                                      ww3
                                      (GHC.Prim.int2Word# ww4)
                                      dt3
                                      (GHC.Prim.int2Word# dt4)
                                      (GHC.Prim.int2Word# ww5)
                                      GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                               case GHC.Prim.narrow32Int# ds3 of wild2 {
                                 DEFAULT -> $wgo1 ww3 ww4 ww5 w3 ww6 (GHC.Prim.+# ww7 1#) ww8
                                 0#
                                 -> exit
                                      w3
                                      ww6
                                      ww7
                                      (Data.Text.Internal.Text ww3 ww4 ww5)
                                      y } } } } } }
                       1#
                       -> case GHC.Magic.runRW#
                                 @ ('GHC.Types.TupleRep
                                      '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                 @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                      Data.HashMap.Array.Array
                                        (Data.HashMap.Base.Leaf Data.Text.Internal.Text v) #)
                                 (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newSmallArray#
                                         @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                         @ GHC.Prim.RealWorld
                                         (GHC.Prim.+# ww8 1#)
                                         (Data.HashMap.Array.undefinedElem
                                            @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v))
                                         s1 of ds { (#,#) ipv3 ipv4 ->
                                  case GHC.Prim.copySmallArray#
                                         @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                         @ GHC.Prim.RealWorld
                                         ww6
                                         0#
                                         ipv4
                                         0#
                                         ww8
                                         ipv3 of s2 { DEFAULT ->
                                  case GHC.Prim.writeSmallArray#
                                         @ GHC.Prim.RealWorld
                                         @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                         ipv4
                                         ww8
                                         (Data.HashMap.Base.L
                                            @ Data.Text.Internal.Text
                                            @ v
                                            (Data.Text.Internal.Text ww3 ww4 ww5)
                                            w3)
                                         s2 of s' { DEFAULT ->
                                  case GHC.Prim.unsafeFreezeSmallArray#
                                         @ GHC.Prim.RealWorld
                                         @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                         ipv4
                                         s' of ds2 { (#,#) ipv5 ipv6 ->
                                  (# ipv5,
                                     Data.HashMap.Array.Array
                                       @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                       ipv6 #) } } } }) of ds1 { (#,#) ipv3 ipv4 ->
                          ipv4 } }
                 } in
                 $wgo1
                   ww
                   ww1
                   ww2
                   w1
                   w2
                   0#
                   (GHC.Prim.sizeofSmallArray#
                      @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                      w2)) -}
476d6889ca405ea3cfb1dfbde914417f
  $w$sgo13 ::
    Data.Text.Internal.Text
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map Data.Text.Internal.Text a1
    -> Data.Map.Internal.Map Data.Text.Internal.Text a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
98a96231ca3036f68b8a56d62b888b19
  $w$sgo3 ::
    Data.Text.Internal.Text
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Set.Internal.Set Data.Text.Internal.Text
    -> Data.Set.Internal.Set Data.Text.Internal.Text
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
be4d75007037b36a405e447ef76f1b93
  $w$sunsafeInsert ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
  {- Arity: 5, Strictness: <S,U><S,U><S,U><L,U><L,1*U>, Inline: [0],
     Unfolding: (\ @ v
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (w :: v)
                   (w1 :: Data.HashMap.Base.HashMap Data.Text.Internal.Text v) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.HashMap.Base.HashMap Data.Text.Internal.Text v #)
                        (\ (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case {__pkg_ccall hashable-1.2.7.0 GHC.Prim.ByteArray#
                                                            -> GHC.Prim.Int#
                                                            -> GHC.Prim.Int#
                                                            -> GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld,
                                                                  GHC.Prim.Int# #)}
                                ww
                                (GHC.Prim.uncheckedIShiftL# ww1 1#)
                                (GHC.Prim.uncheckedIShiftL# ww2 1#)
                                -2578643520546668380#
                                GHC.Prim.realWorld# of wild1 { (#,#) ds1 ds2 ->
                         Foundation.$wpoly_go1
                           @ v
                           (GHC.Prim.int2Word# ds2)
                           ww
                           ww1
                           ww2
                           w
                           0#
                           w1
                           w2 }) of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
3431a0dc93b2c5369629fbfbbd30e9d5
  $wlvl ::
    (Data.Text.Internal.Text, Data.Text.Internal.Text)
    -> (# Data.ByteString.Internal.ByteString,
          GHC.Base.Maybe Data.ByteString.Internal.ByteString #)
  {- Arity: 1, Strictness: <L,U(1*U(U,U,1*U),1*U(U,U,U))>,
     Inline: [0],
     Unfolding: (\ (w :: (Data.Text.Internal.Text,
                          Data.Text.Internal.Text)) ->
                 (# case w of wild { (,) x3 y -> Data.Text.Encoding.encodeUtf8 x3 },
                    case w of wild { (,) x3 y ->
                    case y of wild1 { Data.Text.Internal.Text dt1 dt2 dt3 ->
                    case Data.Text.Internal.empty_ of wild2 { Data.Text.Internal.Text dt4 dt5 dt6 ->
                    case GHC.Prim.==# dt3 dt6 of lwild {
                      DEFAULT
                      -> GHC.Base.Just
                           @ Data.ByteString.Internal.ByteString
                           (Data.Text.Encoding.$wencodeUtf8 dt1 dt2 dt3)
                      1#
                      -> case {__pkg_ccall text-1.2.3.1 GHC.Prim.ByteArray#
                                                        -> GHC.Prim.Word#
                                                        -> GHC.Prim.ByteArray#
                                                        -> GHC.Prim.Word#
                                                        -> GHC.Prim.Word#
                                                        -> GHC.Prim.State# GHC.Prim.RealWorld
                                                        -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                              GHC.Prim.Int# #)}
                                dt1
                                (GHC.Prim.int2Word# dt2)
                                dt4
                                (GHC.Prim.int2Word# dt5)
                                (GHC.Prim.int2Word# dt3)
                                GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                         case GHC.Prim.narrow32Int# ds3 of wild4 {
                           DEFAULT
                           -> GHC.Base.Just
                                @ Data.ByteString.Internal.ByteString
                                (Data.Text.Encoding.$wencodeUtf8 dt1 dt2 dt3)
                           0#
                           -> GHC.Base.Nothing
                                @ Data.ByteString.Internal.ByteString } } } } } } #)) -}
188b38b3761979f1867235b246f69ee7
  $wlvl1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int# -> GHC.Prim.Int# -> Data.Text.Internal.Text
  {- Arity: 3, Strictness: <L,U><S,U><S,U>, Inline: [0] -}
07f341fb33662fbae7ea2bf66e84aa69
  $wlvl2 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int# -> GHC.Prim.Int# -> Data.Text.Internal.Text
  {- Arity: 3, Strictness: <L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#) ->
                 let {
                   end :: GHC.Prim.Int# = GHC.Prim.+# ww1 ww2
                 } in
                 let {
                   $j :: Data.Text.Internal.Text <join 0>
                   = case GHC.Prim.>=# 1# ww2 of lwild1 {
                       DEFAULT
                       -> case Data.Text.$witerN
                                 Foundation.$fYesodApp31
                                 ww
                                 ww1
                                 ww2 of ww4 { DEFAULT ->
                          case GHC.Prim.-# ww2 ww4 of wild3 {
                            DEFAULT -> Data.Text.Internal.Text ww (GHC.Prim.+# ww1 ww4) wild3
                            0# -> Data.Text.Internal.empty } }
                       1# -> Data.Text.Internal.empty }
                 } in
                 let {
                   wild :: Data.Text.Internal.Text <join 0> {- Strictness: m -}
                   = Data.Text.Internal.Text ww ww1 ww2
                 } in
                 letrec {
                   $wloop_all :: GHC.Prim.Int# -> Data.Text.Internal.Text
                     <join 1> {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.Int#) ->
                     case GHC.Prim.>=# ww3 end of lwild {
                       DEFAULT
                       -> case GHC.Prim.indexWord16Array# ww ww3 of r# { DEFAULT ->
                          case GHC.Prim.geWord# r# 55296## of lwild1 {
                            DEFAULT
                            -> case GHC.Prim.chr# (GHC.Prim.word2Int# r#) of wild1 {
                                 DEFAULT -> wild '-'# -> $wloop_all (GHC.Prim.+# ww3 1#) }
                            1#
                            -> case GHC.Prim.leWord# r# 56319## of lwild2 {
                                 DEFAULT
                                 -> case GHC.Prim.chr# (GHC.Prim.word2Int# r#) of wild1 {
                                      DEFAULT -> wild '-'# -> $wloop_all (GHC.Prim.+# ww3 1#) }
                                 1#
                                 -> case GHC.Prim.indexWord16Array#
                                           ww
                                           (GHC.Prim.+# ww3 1#) of r#1 { DEFAULT ->
                                    case GHC.Prim.chr#
                                           (GHC.Prim.+#
                                              (GHC.Prim.+#
                                                 (GHC.Prim.uncheckedIShiftL#
                                                    (GHC.Prim.-# (GHC.Prim.word2Int# r#) 55296#)
                                                    10#)
                                                 (GHC.Prim.-# (GHC.Prim.word2Int# r#1) 56320#))
                                              65536#) of wild1 {
                                      DEFAULT -> wild
                                      '-'# -> $wloop_all (GHC.Prim.+# ww3 2#) } } } } }
                       1# -> $j }
                 } in
                 $wloop_all ww1) -}
24d1e367e99e91df420375e6f6b5e76b
  $wmigrateAll ::
    (Data.Text.Internal.Text
     -> GHC.Types.IO Database.Persist.Sql.Types.Internal.Statement)
    -> GHC.IORef.IORef
         (Data.Map.Internal.Map
            Data.Text.Internal.Text
            Database.Persist.Sql.Types.Internal.Statement)
    -> ([Database.Persist.Types.Base.EntityDef]
        -> (Data.Text.Internal.Text
            -> GHC.Types.IO Database.Persist.Sql.Types.Internal.Statement)
        -> Database.Persist.Types.Base.EntityDef
        -> GHC.Types.IO
             (Data.Either.Either
                [Data.Text.Internal.Text]
                [(GHC.Types.Bool, Data.Text.Internal.Text)]))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (((), [Data.Text.Internal.Text]),
           [(GHC.Types.Bool, Database.Persist.Sql.Types.Sql)]) #)
  {- Arity: 4,
     Strictness: <L,C(C1(U(U,U(C(U(U,A)),C(U(U,U)),C(C1(U(U,U))),C(C1(C1(C1(U))))))))><L,U(U)><C(C(C(C(S(SS))))),C(C1(C1(C1(U(U,1*U)))))><S,U>,
     Inline: [0] -}
e415c6c422a65a212a331ff69d4eafe6
  $wouter ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U><S,U><S,1*U><S,U><S,U>,
     Inline: [0] -}
2bae57b43626aaa61b9656afa13ba574
  $wouter1 ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U><S,U><S,1*U><S,U><S,U>,
     Inline: [0] -}
c8efb1bc2706a65cb4a825e8ba041cbb
  $wouter2 ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U><S,U><S,1*U><S,U><S,U>,
     Inline: [0] -}
568eebea46ad4767c4fa507276a32f1a
  $wouter3 ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U><S,U><S,1*U><S,U><S,U>,
     Inline: [0] -}
aea0093bf59eee61ab8acb79bbf302c2
  $wouter4 ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U><S,U><S,1*U><S,U><S,U>,
     Inline: [0] -}
5ab1ec57005f15360cf2308011800237
  $wouter5 ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U><S,U><S,1*U><S,U><S,U>,
     Inline: [0] -}
160bc842d274d9c6ad02cdc64c158fed
  $wpoly_go1 ::
    GHC.Prim.Word#
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> GHC.Prim.Int#
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.HashMap.Base.HashMap Data.Text.Internal.Text v #)
  {- Arity: 8,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><S,1*U><L,U>,
     Inline: [0] -}
fad4d7498437d0835053b4479d34e8e2
  data App
    = App {connPool :: Database.Persist.Sql.Types.ConnectionPool}
ab0e720acfd8349912d50cf443256369
  data Cliente
    = Cliente {clienteNome :: !Data.Text.Internal.Text,
               clienteEndereco :: !Data.Text.Internal.Text,
               clienteTelefone :: !Data.Text.Internal.Text,
               clienteLogin :: !Data.Text.Internal.Text,
               clientePword :: !Data.Text.Internal.Text}
6e8760c206fd9a71d7316e2d7412a464
  type ClienteId =
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
ab0e720acfd8349912d50cf443256369
  axiom Foundation.D:R:EntityFieldClientetyp0::
      Database.Persist.Class.PersistEntity.EntityField Foundation.Cliente
        = Foundation.R:EntityFieldClientetyp
388dd4c04563308c88c61ef89b3610ad
  axiom Foundation.D:R:EntityFieldItemPedidotyp0::
      Database.Persist.Class.PersistEntity.EntityField
        Foundation.ItemPedido
        = Foundation.R:EntityFieldItemPedidotyp
a0af1d2de58a84f46d8a9e227dc8f746
  axiom Foundation.D:R:EntityFieldPedidotyp0::
      Database.Persist.Class.PersistEntity.EntityField Foundation.Pedido
        = Foundation.R:EntityFieldPedidotyp
d115186e041a4b3c4d5ea956a0e873a2
  axiom Foundation.D:R:EntityFieldProdutotyp0::
      Database.Persist.Class.PersistEntity.EntityField Foundation.Produto
        = Foundation.R:EntityFieldProdutotyp
b5272135afcffe4d7282ae6ad9b22515
  axiom Foundation.D:R:EntityFieldTipoProdutotyp0::
      Database.Persist.Class.PersistEntity.EntityField
        Foundation.TipoProduto
        = Foundation.R:EntityFieldTipoProdutotyp
ab0e720acfd8349912d50cf443256369
  axiom Foundation.D:R:KeyCliente0::
      Database.Persist.Class.PersistEntity.Key Foundation.Cliente
        = Foundation.R:KeyCliente
388dd4c04563308c88c61ef89b3610ad
  axiom Foundation.D:R:KeyItemPedido0::
      Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido
        = Foundation.R:KeyItemPedido
a0af1d2de58a84f46d8a9e227dc8f746
  axiom Foundation.D:R:KeyPedido0::
      Database.Persist.Class.PersistEntity.Key Foundation.Pedido
        = Foundation.R:KeyPedido
d115186e041a4b3c4d5ea956a0e873a2
  axiom Foundation.D:R:KeyProduto0::
      Database.Persist.Class.PersistEntity.Key Foundation.Produto
        = Foundation.R:KeyProduto
b5272135afcffe4d7282ae6ad9b22515
  axiom Foundation.D:R:KeyTipoProduto0::
      Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto
        = Foundation.R:KeyTipoProduto
ab0e720acfd8349912d50cf443256369
  axiom Foundation.D:R:PersistEntityBackendCliente::
      Database.Persist.Class.PersistEntity.PersistEntityBackend
        Foundation.Cliente
        = Database.Persist.Sql.Types.Internal.SqlBackend
388dd4c04563308c88c61ef89b3610ad
  axiom Foundation.D:R:PersistEntityBackendItemPedido::
      Database.Persist.Class.PersistEntity.PersistEntityBackend
        Foundation.ItemPedido
        = Database.Persist.Sql.Types.Internal.SqlBackend
a0af1d2de58a84f46d8a9e227dc8f746
  axiom Foundation.D:R:PersistEntityBackendPedido::
      Database.Persist.Class.PersistEntity.PersistEntityBackend
        Foundation.Pedido
        = Database.Persist.Sql.Types.Internal.SqlBackend
d115186e041a4b3c4d5ea956a0e873a2
  axiom Foundation.D:R:PersistEntityBackendProduto::
      Database.Persist.Class.PersistEntity.PersistEntityBackend
        Foundation.Produto
        = Database.Persist.Sql.Types.Internal.SqlBackend
b5272135afcffe4d7282ae6ad9b22515
  axiom Foundation.D:R:PersistEntityBackendTipoProduto::
      Database.Persist.Class.PersistEntity.PersistEntityBackend
        Foundation.TipoProduto
        = Database.Persist.Sql.Types.Internal.SqlBackend
fad4d7498437d0835053b4479d34e8e2
  axiom Foundation.D:R:RouteApp0::
      Yesod.Routes.Class.Route Foundation.App = Foundation.R:RouteApp
ab0e720acfd8349912d50cf443256369
  axiom Foundation.D:R:UniqueCliente0::
      Database.Persist.Class.PersistEntity.Unique Foundation.Cliente
        = Foundation.R:UniqueCliente
388dd4c04563308c88c61ef89b3610ad
  axiom Foundation.D:R:UniqueItemPedido0::
      Database.Persist.Class.PersistEntity.Unique Foundation.ItemPedido
        = Foundation.R:UniqueItemPedido
a0af1d2de58a84f46d8a9e227dc8f746
  axiom Foundation.D:R:UniquePedido0::
      Database.Persist.Class.PersistEntity.Unique Foundation.Pedido
        = Foundation.R:UniquePedido
d115186e041a4b3c4d5ea956a0e873a2
  axiom Foundation.D:R:UniqueProduto0::
      Database.Persist.Class.PersistEntity.Unique Foundation.Produto
        = Foundation.R:UniqueProduto
5be8ea94ccb17bc33c3313646dcdd91f
  axiom Foundation.D:R:UniqueTipoProduto0::
      Database.Persist.Class.PersistEntity.Unique Foundation.TipoProduto
        = Foundation.R:UniqueTipoProduto
fad4d7498437d0835053b4479d34e8e2
  axiom Foundation.D:R:YesodPersistBackendApp::
      Yesod.Persist.Core.YesodPersistBackend Foundation.App
        = Database.Persist.Sql.Types.Internal.SqlBackend
13f3aeb51611925276de418d03a20948
  type Form a =
    Text.Blaze.Html.Html
    -> Yesod.Form.Types.MForm
         Foundation.Handler
         (Yesod.Form.Types.FormResult a, Foundation.Widget)
75ae7b29b0bc8728adc2f28c19257c8c
  type Handler = Yesod.Core.Types.HandlerFor Foundation.App :: * -> *
388dd4c04563308c88c61ef89b3610ad
  data ItemPedido
    = ItemPedido {itemPedidoPedidoid :: ! {-# UNPACK #-}(((Foundation.D:R:KeyPedido0[0] ; Foundation.N:R:KeyPedido[0]) ; Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])(Database.Persist.Class.PersistEntity.Key
                                                                                                                                                                                                                                                                          Foundation.Pedido),
                  itemPedidoProdutoid :: ! {-# UNPACK #-}(((Foundation.D:R:KeyProduto0[0] ; Foundation.N:R:KeyProduto[0]) ; Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])(Database.Persist.Class.PersistEntity.Key
                                                                                                                                                                                                                                                                             Foundation.Produto),
                  itemPedidoVlunit :: {-# UNPACK #-}GHC.Types.Double}
037d9a0f5ead04e6909f34fa8d6489e8
  type ItemPedidoId =
    Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido
a0af1d2de58a84f46d8a9e227dc8f746
  data Pedido
    = Pedido {pedidoClienteid :: ! {-# UNPACK #-}(((Foundation.D:R:KeyCliente0[0] ; Foundation.N:R:KeyCliente[0]) ; Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])(Database.Persist.Class.PersistEntity.Key
                                                                                                                                                                                                                                                                     Foundation.Cliente),
              pedidoVltot :: {-# UNPACK #-}GHC.Types.Double,
              pedidoHrpedido :: {-# UNPACK #-}GHC.Types.Double,
              pedidoFinalizado :: !GHC.Types.Bool}
35ded3d7cb092b2704f87707e3e1217d
  type PedidoId =
    Database.Persist.Class.PersistEntity.Key Foundation.Pedido
d115186e041a4b3c4d5ea956a0e873a2
  data Produto
    = Produto {produtoNome :: !Data.Text.Internal.Text,
               produtoValor :: {-# UNPACK #-}GHC.Types.Double,
               produtoTipoprodutoid :: ! {-# UNPACK #-}(((Foundation.D:R:KeyTipoProduto0[0] ; Foundation.N:R:KeyTipoProduto[0]) ; Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])(Database.Persist.Class.PersistEntity.Key
                                                                                                                                                                                                                                                                                   Foundation.TipoProduto)}
8a687dd35e5c09170800186c48fd588c
  type ProdutoId =
    Database.Persist.Class.PersistEntity.Key Foundation.Produto
ab0e720acfd8349912d50cf443256369
  data instance Database.Persist.Class.PersistEntity.EntityField
                  Foundation.Cliente typ
    = ((typ :: *)
       Data.Type.Equality.~ (Database.Persist.Class.PersistEntity.Key
                               Foundation.Cliente :: *)) =>
      ClienteId
    | ((typ :: *)
       Data.Type.Equality.~ (Data.Text.Internal.Text :: *)) =>
      ClienteNome
    | ((typ :: *)
       Data.Type.Equality.~ (Data.Text.Internal.Text :: *)) =>
      ClienteEndereco
    | ((typ :: *)
       Data.Type.Equality.~ (Data.Text.Internal.Text :: *)) =>
      ClienteTelefone
    | ((typ :: *)
       Data.Type.Equality.~ (Data.Text.Internal.Text :: *)) =>
      ClienteLogin
    | ((typ :: *)
       Data.Type.Equality.~ (Data.Text.Internal.Text :: *)) =>
      ClientePword
388dd4c04563308c88c61ef89b3610ad
  data instance Database.Persist.Class.PersistEntity.EntityField
                  Foundation.ItemPedido typ
    = ((typ :: *)
       Data.Type.Equality.~ (Database.Persist.Class.PersistEntity.Key
                               Foundation.ItemPedido :: *)) =>
      ItemPedidoId
    | ((typ :: *)
       Data.Type.Equality.~ (Database.Persist.Class.PersistEntity.Key
                               Foundation.Pedido :: *)) =>
      ItemPedidoPedidoid
    | ((typ :: *)
       Data.Type.Equality.~ (Database.Persist.Class.PersistEntity.Key
                               Foundation.Produto :: *)) =>
      ItemPedidoProdutoid
    | ((typ :: *) Data.Type.Equality.~ (GHC.Types.Double :: *)) =>
      ItemPedidoVlunit
a0af1d2de58a84f46d8a9e227dc8f746
  data instance Database.Persist.Class.PersistEntity.EntityField
                  Foundation.Pedido typ
    = ((typ :: *)
       Data.Type.Equality.~ (Database.Persist.Class.PersistEntity.Key
                               Foundation.Pedido :: *)) =>
      PedidoId
    | ((typ :: *)
       Data.Type.Equality.~ (Database.Persist.Class.PersistEntity.Key
                               Foundation.Cliente :: *)) =>
      PedidoClienteid
    | ((typ :: *) Data.Type.Equality.~ (GHC.Types.Double :: *)) =>
      PedidoVltot
    | ((typ :: *) Data.Type.Equality.~ (GHC.Types.Double :: *)) =>
      PedidoHrpedido
    | ((typ :: *) Data.Type.Equality.~ (GHC.Types.Bool :: *)) =>
      PedidoFinalizado
d115186e041a4b3c4d5ea956a0e873a2
  data instance Database.Persist.Class.PersistEntity.EntityField
                  Foundation.Produto typ
    = ((typ :: *)
       Data.Type.Equality.~ (Database.Persist.Class.PersistEntity.Key
                               Foundation.Produto :: *)) =>
      ProdutoId
    | ((typ :: *)
       Data.Type.Equality.~ (Data.Text.Internal.Text :: *)) =>
      ProdutoNome
    | ((typ :: *) Data.Type.Equality.~ (GHC.Types.Double :: *)) =>
      ProdutoValor
    | ((typ :: *)
       Data.Type.Equality.~ (Database.Persist.Class.PersistEntity.Key
                               Foundation.TipoProduto :: *)) =>
      ProdutoTipoprodutoid
b5272135afcffe4d7282ae6ad9b22515
  data instance Database.Persist.Class.PersistEntity.EntityField
                  Foundation.TipoProduto typ
    = ((typ :: *)
       Data.Type.Equality.~ (Database.Persist.Class.PersistEntity.Key
                               Foundation.TipoProduto :: *)) =>
      TipoProdutoId
    | ((typ :: *)
       Data.Type.Equality.~ (Data.Text.Internal.Text :: *)) =>
      TipoProdutoNometipo
ab0e720acfd8349912d50cf443256369
  newtype instance Database.Persist.Class.PersistEntity.Key
                     Foundation.Cliente
    = ClienteKey {unClienteKey :: Database.Persist.Class.PersistStore.BackendKey
                                    Database.Persist.Sql.Types.Internal.SqlBackend}
388dd4c04563308c88c61ef89b3610ad
  newtype instance Database.Persist.Class.PersistEntity.Key
                     Foundation.ItemPedido
    = ItemPedidoKey {unItemPedidoKey :: Database.Persist.Class.PersistStore.BackendKey
                                          Database.Persist.Sql.Types.Internal.SqlBackend}
a0af1d2de58a84f46d8a9e227dc8f746
  newtype instance Database.Persist.Class.PersistEntity.Key
                     Foundation.Pedido
    = PedidoKey {unPedidoKey :: Database.Persist.Class.PersistStore.BackendKey
                                  Database.Persist.Sql.Types.Internal.SqlBackend}
d115186e041a4b3c4d5ea956a0e873a2
  newtype instance Database.Persist.Class.PersistEntity.Key
                     Foundation.Produto
    = ProdutoKey {unProdutoKey :: Database.Persist.Class.PersistStore.BackendKey
                                    Database.Persist.Sql.Types.Internal.SqlBackend}
b5272135afcffe4d7282ae6ad9b22515
  newtype instance Database.Persist.Class.PersistEntity.Key
                     Foundation.TipoProduto
    = TipoProdutoKey {unTipoProdutoKey :: Database.Persist.Class.PersistStore.BackendKey
                                            Database.Persist.Sql.Types.Internal.SqlBackend}
fad4d7498437d0835053b4479d34e8e2
  data instance Yesod.Routes.Class.Route Foundation.App
    = HomeR | ClienteR | LoginR | CardapioR | LogoutR
ab0e720acfd8349912d50cf443256369
  data instance Database.Persist.Class.PersistEntity.Unique
                  Foundation.Cliente
    = UniqueLogin Data.Text.Internal.Text
388dd4c04563308c88c61ef89b3610ad
  data instance Database.Persist.Class.PersistEntity.Unique
                  Foundation.ItemPedido
a0af1d2de58a84f46d8a9e227dc8f746
  data instance Database.Persist.Class.PersistEntity.Unique
                  Foundation.Pedido
d115186e041a4b3c4d5ea956a0e873a2
  data instance Database.Persist.Class.PersistEntity.Unique
                  Foundation.Produto
5be8ea94ccb17bc33c3313646dcdd91f
  data instance Database.Persist.Class.PersistEntity.Unique
                  Foundation.TipoProduto
b5272135afcffe4d7282ae6ad9b22515
  data TipoProduto
    = TipoProduto {tipoProdutoNometipo :: !Data.Text.Internal.Text}
ebab8cf142e88f8bd7495957a6c53f37
  type TipoProdutoId =
    Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto
c6cb556bd8940a6c642b67d19001f54b
  type Widget = Yesod.Core.Types.WidgetFor Foundation.App ()
ab0e720acfd8349912d50cf443256369
  clienteEndereco :: Foundation.Cliente -> Data.Text.Internal.Text
  RecSel Left Foundation.Cliente
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLL),1*U(A,U(U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Cliente) ->
                 case ds of wild { Foundation.Cliente ds1 ds2 ds3 ds4 ds5 ->
                 ds2 }) -}
ab0e720acfd8349912d50cf443256369
  clienteLogin :: Foundation.Cliente -> Data.Text.Internal.Text
  RecSel Left Foundation.Cliente
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Cliente) ->
                 case ds of wild { Foundation.Cliente ds1 ds2 ds3 ds4 ds5 ->
                 ds4 }) -}
ab0e720acfd8349912d50cf443256369
  clienteNome :: Foundation.Cliente -> Data.Text.Internal.Text
  RecSel Left Foundation.Cliente
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(U(U,U,U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Cliente) ->
                 case ds of wild { Foundation.Cliente ds1 ds2 ds3 ds4 ds5 ->
                 ds1 }) -}
ab0e720acfd8349912d50cf443256369
  clientePword :: Foundation.Cliente -> Data.Text.Internal.Text
  RecSel Left Foundation.Cliente
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLS),1*U(A,A,A,A,U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Cliente) ->
                 case ds of wild { Foundation.Cliente ds1 ds2 ds3 ds4 ds5 ->
                 ds5 }) -}
ab0e720acfd8349912d50cf443256369
  clienteTelefone :: Foundation.Cliente -> Data.Text.Internal.Text
  RecSel Left Foundation.Cliente
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLL),1*U(A,A,U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Cliente) ->
                 case ds of wild { Foundation.Cliente ds1 ds2 ds3 ds4 ds5 ->
                 ds3 }) -}
fad4d7498437d0835053b4479d34e8e2
  connPool ::
    Foundation.App -> Database.Persist.Sql.Types.ConnectionPool
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U(U,U,U,U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 -> ds1 }) -}
388dd4c04563308c88c61ef89b3610ad
  itemPedidoPedidoid ::
    Foundation.ItemPedido
    -> Database.Persist.Class.PersistEntity.Key Foundation.Pedido
  RecSel Left Foundation.ItemPedido
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(U,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.ItemPedido) ->
                 case ds of wild { Foundation.ItemPedido dt dt1 dt2 ->
                 (GHC.Int.I64# dt)
                   `cast`
                 (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyPedido[0]) ; Sym (Foundation.D:R:KeyPedido0[0])))) }) -}
388dd4c04563308c88c61ef89b3610ad
  itemPedidoProdutoid ::
    Foundation.ItemPedido
    -> Database.Persist.Class.PersistEntity.Key Foundation.Produto
  RecSel Left Foundation.ItemPedido
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.ItemPedido) ->
                 case ds of wild { Foundation.ItemPedido dt dt1 dt2 ->
                 (GHC.Int.I64# dt1)
                   `cast`
                 (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyProduto[0]) ; Sym (Foundation.D:R:KeyProduto0[0])))) }) -}
388dd4c04563308c88c61ef89b3610ad
  itemPedidoVlunit :: Foundation.ItemPedido -> GHC.Types.Double
  RecSel Left Foundation.ItemPedido
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.ItemPedido) ->
                 case ds of wild { Foundation.ItemPedido dt dt1 dt2 ->
                 GHC.Types.D# dt2 }) -}
1e1294bd58209efaf14c1be9e2795c6d
  migrateAll :: Database.Persist.Sql.Types.Migration
  {- Arity: 2,
     Strictness: <S(LLLLLLLC(C(C(C(S(SS)))))LLLLLLLLL),1*U(C(C1(U(U,U(C(U(U,A)),C(U(U,U)),C(C1(U(U,U))),C(C1(C1(C1(U)))))))),A,A,A,A,U(U),A,C(C1(C1(C1(U(U,1*U))))),A,A,A,A,A,A,A,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.migrateAll1
                  `cast`
                ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                  ->_R Sym (GHC.Types.N:IO[0]
                                <(((), [Data.Text.Internal.Text]),
                                  [(GHC.Types.Bool,
                                    Database.Persist.Sql.Types.Sql)])>_R)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                       <*>_N
                                                                                       <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                                                       <GHC.Types.IO>_R
                                                                                       <(((),
                                                                                          [Data.Text.Internal.Text]),
                                                                                         [(GHC.Types.Bool,
                                                                                           Database.Persist.Sql.Types.Sql)])>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                             <[(GHC.Types.Bool,
                                                                                                                                                Database.Persist.Sql.Types.Sql)]>_N
                                                                                                                                             <Control.Monad.Trans.Reader.ReaderT
                                                                                                                                                Database.Persist.Sql.Types.Internal.SqlBackend
                                                                                                                                                GHC.Types.IO>_R
                                                                                                                                             <((),
                                                                                                                                               [Data.Text.Internal.Text])>_N) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <[Data.Text.Internal.Text]>_N
                                                                                                                                                                                         <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                                                                                                                                            Database.Persist.Sql.Types.CautiousMigration
                                                                                                                                                                                            (Control.Monad.Trans.Reader.ReaderT
                                                                                                                                                                                               Database.Persist.Sql.Types.Internal.SqlBackend
                                                                                                                                                                                               GHC.Types.IO)>_R
                                                                                                                                                                                         <()>_N)))) -}
64ed00e536aca9666b11bb4cd479e4a9
  migrateAll1 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (((), [Data.Text.Internal.Text]),
           [(GHC.Types.Bool, Database.Persist.Sql.Types.Sql)]) #)
  {- Arity: 2,
     Strictness: <S(LLLLLLLC(C(C(C(S(SS)))))LLLLLLLLL),1*U(C(C1(U(U,U(C(U(U,A)),C(U(U,U)),C(C1(U(U,U))),C(C1(C1(C1(U)))))))),A,A,A,A,U(U),A,C(C1(C1(C1(U(U,1*U))))),A,A,A,A,A,A,A,A,A)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Database.Persist.Sql.Types.Internal.SqlBackend)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Database.Persist.Sql.Types.Internal.SqlBackend ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 Foundation.$wmigrateAll ww1 ww6 ww8 w1 }) -}
a0af1d2de58a84f46d8a9e227dc8f746
  pedidoClienteid ::
    Foundation.Pedido
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
  RecSel Left Foundation.Pedido
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(U,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Pedido) ->
                 case ds of wild { Foundation.Pedido dt dt1 dt2 ds1 ->
                 (GHC.Int.I64# dt)
                   `cast`
                 (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyCliente[0]) ; Sym (Foundation.D:R:KeyCliente0[0])))) }) -}
a0af1d2de58a84f46d8a9e227dc8f746
  pedidoFinalizado :: Foundation.Pedido -> GHC.Types.Bool
  RecSel Left Foundation.Pedido
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Pedido) ->
                 case ds of wild { Foundation.Pedido dt dt1 dt2 ds1 -> ds1 }) -}
a0af1d2de58a84f46d8a9e227dc8f746
  pedidoHrpedido :: Foundation.Pedido -> GHC.Types.Double
  RecSel Left Foundation.Pedido
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Pedido) ->
                 case ds of wild { Foundation.Pedido dt dt1 dt2 ds1 ->
                 GHC.Types.D# dt2 }) -}
a0af1d2de58a84f46d8a9e227dc8f746
  pedidoVltot :: Foundation.Pedido -> GHC.Types.Double
  RecSel Left Foundation.Pedido
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,U,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Pedido) ->
                 case ds of wild { Foundation.Pedido dt dt1 dt2 ds1 ->
                 GHC.Types.D# dt1 }) -}
d115186e041a4b3c4d5ea956a0e873a2
  produtoNome :: Foundation.Produto -> Data.Text.Internal.Text
  RecSel Left Foundation.Produto
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Produto) ->
                 case ds of wild { Foundation.Produto ds1 dt dt1 -> ds1 }) -}
d115186e041a4b3c4d5ea956a0e873a2
  produtoTipoprodutoid ::
    Foundation.Produto
    -> Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto
  RecSel Left Foundation.Produto
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Produto) ->
                 case ds of wild { Foundation.Produto ds1 dt dt1 ->
                 (GHC.Int.I64# dt1)
                   `cast`
                 (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Foundation.N:R:KeyTipoProduto[0]) ; Sym (Foundation.D:R:KeyTipoProduto0[0])))) }) -}
d115186e041a4b3c4d5ea956a0e873a2
  produtoValor :: Foundation.Produto -> GHC.Types.Double
  RecSel Left Foundation.Produto
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Produto) ->
                 case ds of wild { Foundation.Produto ds1 dt dt1 ->
                 GHC.Types.D# dt }) -}
70ddf22613765e2f7bb68e3b4d6122b4
  resourcesApp ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp32
                   Foundation.resourcesApp1) -}
b15b71d483018c6ea0495cdb7497d4fb
  resourcesApp1 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp27
                   Foundation.resourcesApp2) -}
7fd00617a5f1bc6855a1f469ea9fb8b7
  resourcesApp10 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp11
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
a17dfe7913ce557cb583da7ccfa9610c
  resourcesApp11 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp12) -}
ea34472f7f9f6f0a20f2daacdee53554
  resourcesApp12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fParseRouteApp6) -}
b4204b8fea4b30ea23003c3166e142ab
  resourcesApp13 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp14) -}
5fc1249d162b35c7cb346a11f4e93047
  resourcesApp14 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute13
                   Foundation.resourcesApp15
                   Foundation.resourcesApp7
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
f66d4495074962e376c5518d42ca23fa
  resourcesApp15 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp16
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
50b8d862ac70e2256cab64eb1a214ac9
  resourcesApp16 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp17) -}
0c8498a2307ed65543bd2d3005e4e8fc
  resourcesApp17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fParseRouteApp8) -}
d1e9eb4d07236ada9fcfcd583a3aaf05
  resourcesApp18 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp19) -}
e817d8b3f53cb07dbdc05c43240b0b17
  resourcesApp19 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute17
                   Foundation.resourcesApp25
                   Foundation.resourcesApp20
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
9d2f64ea71d402dc979211860d67b2bb
  resourcesApp2 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp18
                   Foundation.resourcesApp3) -}
a26064d9e0f0a1df48f1b14d37afc93d
  resourcesApp20 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp21) -}
ff66d7282308cf8c915015f28f222f4e
  resourcesApp21 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp9
                   Foundation.resourcesApp22) -}
999d4ca1f5e4aad9d1aa5632146a8bba
  resourcesApp22 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp23
                   (GHC.Types.[] @ GHC.Base.String)) -}
d62d0c78a2ba6e02b922209be42d2664
  resourcesApp23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp24) -}
906dad34e6624da72071343a428b6cd5
  resourcesApp24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("POST"#) -}
4d62d766fba08423e44da2d66a440ec9
  resourcesApp25 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp26
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
3a632dfe33120f9bf87074adce68e7d1
  resourcesApp26 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.$fPersistFieldCliente2) -}
3b3b291229ac9cbc4f7ddf62236a5c75
  resourcesApp27 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp28) -}
7d3c4969b788eab4b79b2da59b9ce2a1
  resourcesApp28 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute21
                   Foundation.resourcesApp29
                   Foundation.resourcesApp20
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
c7d27bac16b3c7e94c035cc537ddad16
  resourcesApp29 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp30
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
be0d3f39d179ae15b67b4027be7259e8
  resourcesApp3 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp13
                   Foundation.resourcesApp4) -}
82355644592fadede781b526e55cdaa6
  resourcesApp30 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp31) -}
e8411fa3b866603bd1bafbf6e40655b2
  resourcesApp31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fParseRouteApp12) -}
8dffd91c00361e0e89c011c755c278ed
  resourcesApp32 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp33) -}
3a5c6de583ab7214787b7fedbeb771d8
  resourcesApp33 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute25
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))
                   Foundation.resourcesApp7
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
c0ed5a1bf9c9bbff93e5a8473fe84b8c
  resourcesApp4 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp5
                   (GHC.Types.[]
                      @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String))) -}
9d240a84b288f163c10ef8ef1e30eef5
  resourcesApp5 :: Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp6) -}
1cd12e977f1d2ddb86526a2afaf13366
  resourcesApp6 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute9
                   Foundation.resourcesApp10
                   Foundation.resourcesApp7
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
343340b88ed983502f15d34d837ef812
  resourcesApp7 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp8) -}
48275033d9305a4cdba786da381d2d10
  resourcesApp8 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp9
                   (GHC.Types.[] @ GHC.Base.String)) -}
8be706607197ba9d0f48a69b968ae5be
  resourcesApp9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fYesodApp42) -}
b5272135afcffe4d7282ae6ad9b22515
  tipoProdutoNometipo ::
    Foundation.TipoProduto -> Data.Text.Internal.Text
  RecSel Left Foundation.TipoProduto
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.TipoProduto) ->
                 case ds of wild { Foundation.TipoProduto ds1 -> ds1 }) -}
ab0e720acfd8349912d50cf443256369
  unClienteKey ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Database.Persist.Class.PersistStore.BackendKey
         Database.Persist.Sql.Types.Internal.SqlBackend
  RecSel Left Foundation.R:KeyCliente
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fToBackendKeySqlBackendCliente1
                  `cast`
                (<Database.Persist.Class.PersistEntity.Key Foundation.Cliente>_R
                 ->_R Foundation.D:R:KeyCliente0[0] ; Foundation.N:R:KeyCliente[0]) -}
388dd4c04563308c88c61ef89b3610ad
  unItemPedidoKey ::
    Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido
    -> Database.Persist.Class.PersistStore.BackendKey
         Database.Persist.Sql.Types.Internal.SqlBackend
  RecSel Left Foundation.R:KeyItemPedido
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fToBackendKeySqlBackendItemPedido1
                  `cast`
                (<Database.Persist.Class.PersistEntity.Key Foundation.ItemPedido>_R
                 ->_R Foundation.D:R:KeyItemPedido0[0] ; Foundation.N:R:KeyItemPedido[0]) -}
a0af1d2de58a84f46d8a9e227dc8f746
  unPedidoKey ::
    Database.Persist.Class.PersistEntity.Key Foundation.Pedido
    -> Database.Persist.Class.PersistStore.BackendKey
         Database.Persist.Sql.Types.Internal.SqlBackend
  RecSel Left Foundation.R:KeyPedido
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fToBackendKeySqlBackendPedido1
                  `cast`
                (<Database.Persist.Class.PersistEntity.Key Foundation.Pedido>_R
                 ->_R Foundation.D:R:KeyPedido0[0] ; Foundation.N:R:KeyPedido[0]) -}
d115186e041a4b3c4d5ea956a0e873a2
  unProdutoKey ::
    Database.Persist.Class.PersistEntity.Key Foundation.Produto
    -> Database.Persist.Class.PersistStore.BackendKey
         Database.Persist.Sql.Types.Internal.SqlBackend
  RecSel Left Foundation.R:KeyProduto
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fToBackendKeySqlBackendProduto1
                  `cast`
                (<Database.Persist.Class.PersistEntity.Key Foundation.Produto>_R
                 ->_R Foundation.D:R:KeyProduto0[0] ; Foundation.N:R:KeyProduto[0]) -}
b5272135afcffe4d7282ae6ad9b22515
  unTipoProdutoKey ::
    Database.Persist.Class.PersistEntity.Key Foundation.TipoProduto
    -> Database.Persist.Class.PersistStore.BackendKey
         Database.Persist.Sql.Types.Internal.SqlBackend
  RecSel Left Foundation.R:KeyTipoProduto
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fToBackendKeySqlBackendTipoProduto1
                  `cast`
                (<Database.Persist.Class.PersistEntity.Key
                    Foundation.TipoProduto>_R
                 ->_R Foundation.D:R:KeyTipoProduto0[0] ; Foundation.N:R:KeyTipoProduto[0]) -}
instance GHC.Classes.Eq [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fEqKey
instance GHC.Classes.Eq [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fEqKey0
instance GHC.Classes.Eq [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fEqKey1
instance GHC.Classes.Eq [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fEqKey2
instance GHC.Classes.Eq [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fEqKey3
instance GHC.Classes.Eq [Yesod.Routes.Class.Route]
  = Foundation.$fEqRoute
instance Web.Internal.HttpApiData.FromHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromHttpApiDataKey
instance Web.Internal.HttpApiData.FromHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromHttpApiDataKey0
instance Web.Internal.HttpApiData.FromHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromHttpApiDataKey1
instance Web.Internal.HttpApiData.FromHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromHttpApiDataKey2
instance Web.Internal.HttpApiData.FromHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromHttpApiDataKey3
instance Data.Aeson.Types.FromJSON.FromJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromJSONKey
instance Data.Aeson.Types.FromJSON.FromJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromJSONKey0
instance Data.Aeson.Types.FromJSON.FromJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromJSONKey1
instance Data.Aeson.Types.FromJSON.FromJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromJSONKey2
instance Data.Aeson.Types.FromJSON.FromJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromJSONKey3
instance GHC.Classes.Ord [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fOrdKey
instance GHC.Classes.Ord [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fOrdKey0
instance GHC.Classes.Ord [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fOrdKey1
instance GHC.Classes.Ord [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fOrdKey2
instance GHC.Classes.Ord [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fOrdKey3
instance Yesod.Routes.Class.ParseRoute [Foundation.App]
  = Foundation.$fParseRouteApp
instance Web.PathPieces.PathPiece [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPathPieceKey
instance Web.PathPieces.PathPiece [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPathPieceKey0
instance Web.PathPieces.PathPiece [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPathPieceKey1
instance Web.PathPieces.PathPiece [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPathPieceKey2
instance Web.PathPieces.PathPiece [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPathPieceKey3
instance Database.Persist.Class.PersistEntity.PersistEntity [Foundation.Cliente]
  = Foundation.$fPersistEntityCliente
instance Database.Persist.Class.PersistEntity.PersistEntity [Foundation.ItemPedido]
  = Foundation.$fPersistEntityItemPedido
instance Database.Persist.Class.PersistEntity.PersistEntity [Foundation.Pedido]
  = Foundation.$fPersistEntityPedido
instance Database.Persist.Class.PersistEntity.PersistEntity [Foundation.Produto]
  = Foundation.$fPersistEntityProduto
instance Database.Persist.Class.PersistEntity.PersistEntity [Foundation.TipoProduto]
  = Foundation.$fPersistEntityTipoProduto
instance Database.Persist.Class.PersistField.PersistField [Foundation.Cliente]
  = Foundation.$fPersistFieldCliente
instance Database.Persist.Class.PersistField.PersistField [Foundation.ItemPedido]
  = Foundation.$fPersistFieldItemPedido
instance Database.Persist.Class.PersistField.PersistField [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldKey
instance Database.Persist.Class.PersistField.PersistField [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldKey0
instance Database.Persist.Class.PersistField.PersistField [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldKey1
instance Database.Persist.Class.PersistField.PersistField [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldKey2
instance Database.Persist.Class.PersistField.PersistField [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldKey3
instance Database.Persist.Class.PersistField.PersistField [Foundation.Pedido]
  = Foundation.$fPersistFieldPedido
instance Database.Persist.Class.PersistField.PersistField [Foundation.Produto]
  = Foundation.$fPersistFieldProduto
instance Database.Persist.Sql.Class.PersistFieldSql [Foundation.Cliente]
  = Foundation.$fPersistFieldSqlCliente
instance Database.Persist.Sql.Class.PersistFieldSql [Foundation.ItemPedido]
  = Foundation.$fPersistFieldSqlItemPedido
instance Database.Persist.Sql.Class.PersistFieldSql [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldSqlKey
instance Database.Persist.Sql.Class.PersistFieldSql [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldSqlKey0
instance Database.Persist.Sql.Class.PersistFieldSql [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldSqlKey1
instance Database.Persist.Sql.Class.PersistFieldSql [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldSqlKey2
instance Database.Persist.Sql.Class.PersistFieldSql [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldSqlKey3
instance Database.Persist.Sql.Class.PersistFieldSql [Foundation.Pedido]
  = Foundation.$fPersistFieldSqlPedido
instance Database.Persist.Sql.Class.PersistFieldSql [Foundation.Produto]
  = Foundation.$fPersistFieldSqlProduto
instance Database.Persist.Sql.Class.PersistFieldSql [Foundation.TipoProduto]
  = Foundation.$fPersistFieldSqlTipoProduto
instance Database.Persist.Class.PersistField.PersistField [Foundation.TipoProduto]
  = Foundation.$fPersistFieldTipoProduto
instance GHC.Read.Read [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fReadKey
instance GHC.Read.Read [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fReadKey0
instance GHC.Read.Read [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fReadKey1
instance GHC.Read.Read [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fReadKey2
instance GHC.Read.Read [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fReadKey3
instance GHC.Read.Read [Yesod.Routes.Class.Route]
  = Foundation.$fReadRoute
instance Text.Shakespeare.I18N.RenderMessage [Foundation.App,
                                              Yesod.Form.Types.FormMessage]
  = Foundation.$fRenderMessageAppFormMessage
instance Yesod.Routes.Class.RenderRoute [Foundation.App]
  = Foundation.$fRenderRouteApp
instance Yesod.Routes.Class.RouteAttrs [Foundation.App]
  = Foundation.$fRouteAttrsApp
instance GHC.Show.Show [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fShowKey
instance GHC.Show.Show [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fShowKey0
instance GHC.Show.Show [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fShowKey1
instance GHC.Show.Show [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fShowKey2
instance GHC.Show.Show [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fShowKey3
instance GHC.Show.Show [Yesod.Routes.Class.Route]
  = Foundation.$fShowRoute
instance Database.Persist.Class.PersistStore.ToBackendKey [Database.Persist.Sql.Types.Internal.SqlBackend,
                                                           Foundation.Cliente]
  = Foundation.$fToBackendKeySqlBackendCliente
instance Database.Persist.Class.PersistStore.ToBackendKey [Database.Persist.Sql.Types.Internal.SqlBackend,
                                                           Foundation.ItemPedido]
  = Foundation.$fToBackendKeySqlBackendItemPedido
instance Database.Persist.Class.PersistStore.ToBackendKey [Database.Persist.Sql.Types.Internal.SqlBackend,
                                                           Foundation.Pedido]
  = Foundation.$fToBackendKeySqlBackendPedido
instance Database.Persist.Class.PersistStore.ToBackendKey [Database.Persist.Sql.Types.Internal.SqlBackend,
                                                           Foundation.Produto]
  = Foundation.$fToBackendKeySqlBackendProduto
instance Database.Persist.Class.PersistStore.ToBackendKey [Database.Persist.Sql.Types.Internal.SqlBackend,
                                                           Foundation.TipoProduto]
  = Foundation.$fToBackendKeySqlBackendTipoProduto
instance Web.Internal.HttpApiData.ToHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToHttpApiDataKey
instance Web.Internal.HttpApiData.ToHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToHttpApiDataKey0
instance Web.Internal.HttpApiData.ToHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToHttpApiDataKey1
instance Web.Internal.HttpApiData.ToHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToHttpApiDataKey2
instance Web.Internal.HttpApiData.ToHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToHttpApiDataKey3
instance Data.Aeson.Types.ToJSON.ToJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToJSONKey
instance Data.Aeson.Types.ToJSON.ToJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToJSONKey0
instance Data.Aeson.Types.ToJSON.ToJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToJSONKey1
instance Data.Aeson.Types.ToJSON.ToJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToJSONKey2
instance Data.Aeson.Types.ToJSON.ToJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToJSONKey3
instance Yesod.Core.Class.Yesod.Yesod [Foundation.App]
  = Foundation.$fYesodApp
instance Yesod.Persist.Core.YesodPersist [Foundation.App]
  = Foundation.$fYesodPersistApp
family instance Database.Persist.Class.PersistEntity.EntityField [Foundation.ItemPedido]
  = Foundation.D:R:EntityFieldItemPedidotyp0
family instance Database.Persist.Class.PersistEntity.EntityField [Foundation.Produto]
  = Foundation.D:R:EntityFieldProdutotyp0
family instance Database.Persist.Class.PersistEntity.EntityField [Foundation.TipoProduto]
  = Foundation.D:R:EntityFieldTipoProdutotyp0
family instance Database.Persist.Class.PersistEntity.EntityField [Foundation.Pedido]
  = Foundation.D:R:EntityFieldPedidotyp0
family instance Database.Persist.Class.PersistEntity.EntityField [Foundation.Cliente]
  = Foundation.D:R:EntityFieldClientetyp0
family instance Database.Persist.Class.PersistEntity.Key [Foundation.ItemPedido]
  = Foundation.D:R:KeyItemPedido0
family instance Database.Persist.Class.PersistEntity.Key [Foundation.Produto]
  = Foundation.D:R:KeyProduto0
family instance Database.Persist.Class.PersistEntity.Key [Foundation.TipoProduto]
  = Foundation.D:R:KeyTipoProduto0
family instance Database.Persist.Class.PersistEntity.Key [Foundation.Pedido]
  = Foundation.D:R:KeyPedido0
family instance Database.Persist.Class.PersistEntity.Key [Foundation.Cliente]
  = Foundation.D:R:KeyCliente0
family instance Database.Persist.Class.PersistEntity.PersistEntityBackend [Foundation.ItemPedido]
  = Foundation.D:R:PersistEntityBackendItemPedido
family instance Database.Persist.Class.PersistEntity.PersistEntityBackend [Foundation.Produto]
  = Foundation.D:R:PersistEntityBackendProduto
family instance Database.Persist.Class.PersistEntity.PersistEntityBackend [Foundation.TipoProduto]
  = Foundation.D:R:PersistEntityBackendTipoProduto
family instance Database.Persist.Class.PersistEntity.PersistEntityBackend [Foundation.Pedido]
  = Foundation.D:R:PersistEntityBackendPedido
family instance Database.Persist.Class.PersistEntity.PersistEntityBackend [Foundation.Cliente]
  = Foundation.D:R:PersistEntityBackendCliente
family instance Yesod.Routes.Class.Route [Foundation.App]
  = Foundation.D:R:RouteApp0
family instance Database.Persist.Class.PersistEntity.Unique [Foundation.ItemPedido]
  = Foundation.D:R:UniqueItemPedido0
family instance Database.Persist.Class.PersistEntity.Unique [Foundation.Produto]
  = Foundation.D:R:UniqueProduto0
family instance Database.Persist.Class.PersistEntity.Unique [Foundation.TipoProduto]
  = Foundation.D:R:UniqueTipoProduto0
family instance Database.Persist.Class.PersistEntity.Unique [Foundation.Pedido]
  = Foundation.D:R:UniquePedido0
family instance Database.Persist.Class.PersistEntity.Unique [Foundation.Cliente]
  = Foundation.D:R:UniqueCliente0
family instance Yesod.Persist.Core.YesodPersistBackend [Foundation.App]
  = Foundation.D:R:YesodPersistBackendApp
"SC:$wpoly_go10" [0] forall @ v
                            (sc :: GHC.Prim.State# GHC.Prim.RealWorld)
                            (sc1 :: GHC.Prim.Word#)
                            (sc2 :: GHC.Prim.SmallArray#
                                      (Data.HashMap.Base.HashMap Data.Text.Internal.Text v))
                            (sc3 :: GHC.Prim.Int#)
                            (sc4 :: v)
                            (sc5 :: GHC.Prim.Int#)
                            (sc6 :: GHC.Prim.Int#)
                            (sc7 :: GHC.Prim.ByteArray#)
                            (sc8 :: GHC.Prim.Word#)
  Foundation.$wpoly_go1 @ v
                        sc8
                        sc7
                        sc6
                        sc5
                        sc4
                        sc3
                        (Data.HashMap.Base.BitmapIndexed
                           @ Data.Text.Internal.Text
                           @ v
                           sc1
                           sc2)
                        sc
  = Foundation.$fPersistFieldTipoProduto_$s$wpoly_go1
      @ v
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
      sc8
"SPEC/Foundation $fApplicativeReaderT @ (HandlerFor App) _" forall @ r
                                                                   (v :: GHC.Base.Applicative
                                                                           (Yesod.Core.Types.HandlerFor
                                                                              Foundation.App))
  Control.Monad.Trans.Reader.$fApplicativeReaderT @ (Yesod.Core.Types.HandlerFor
                                                       Foundation.App)
                                                  @ r
                                                  v
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT @ r
"SPEC/Foundation $fApplicativeReaderT_$c*> @ (HandlerFor App) _" forall @ r
                                                                        ($dApplicative :: GHC.Base.Applicative
                                                                                            (Yesod.Core.Types.HandlerFor
                                                                                               Foundation.App))
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$c*> @ (Yesod.Core.Types.HandlerFor
                                                            Foundation.App)
                                                       @ r
                                                       $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c*> @ r
"SPEC/Foundation $fApplicativeReaderT_$c<* @ (HandlerFor App) _" forall @ r
                                                                        ($dApplicative :: GHC.Base.Applicative
                                                                                            (Yesod.Core.Types.HandlerFor
                                                                                               Foundation.App))
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$c<* @ (Yesod.Core.Types.HandlerFor
                                                            Foundation.App)
                                                       @ r
                                                       $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c<* @ r
"SPEC/Foundation $fApplicativeReaderT_$c<*> @ (HandlerFor App) _" forall @ r
                                                                         ($dApplicative :: GHC.Base.Applicative
                                                                                             (Yesod.Core.Types.HandlerFor
                                                                                                Foundation.App))
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$c<*> @ (Yesod.Core.Types.HandlerFor
                                                             Foundation.App)
                                                        @ r
                                                        $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c<*> @ r
"SPEC/Foundation $fFunctorReaderT @ (HandlerFor App) _" forall @ r
                                                               (v :: GHC.Base.Functor
                                                                       (Yesod.Core.Types.HandlerFor
                                                                          Foundation.App))
  Control.Monad.Trans.Reader.$fFunctorReaderT @ (Yesod.Core.Types.HandlerFor
                                                   Foundation.App)
                                              @ r
                                              v
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT @ r
"SPEC/Foundation $fFunctorReaderT_$c<$ @ (HandlerFor App) _" forall @ r
                                                                    ($dFunctor :: GHC.Base.Functor
                                                                                    (Yesod.Core.Types.HandlerFor
                                                                                       Foundation.App))
  Control.Monad.Trans.Reader.$fFunctorReaderT_$c<$ @ (Yesod.Core.Types.HandlerFor
                                                        Foundation.App)
                                                   @ r
                                                   $dFunctor
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$c<$ @ r
"SPEC/Foundation $fFunctorReaderT_$cfmap @ (HandlerFor App) _" forall @ r
                                                                      ($dFunctor :: GHC.Base.Functor
                                                                                      (Yesod.Core.Types.HandlerFor
                                                                                         Foundation.App))
  Control.Monad.Trans.Reader.$fFunctorReaderT_$cfmap @ (Yesod.Core.Types.HandlerFor
                                                          Foundation.App)
                                                     @ r
                                                     $dFunctor
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$cfmap @ r
"SPEC/Foundation $fMonadReaderT @ (HandlerFor App) _" forall @ r
                                                             (v :: GHC.Base.Monad
                                                                     (Yesod.Core.Types.HandlerFor
                                                                        Foundation.App))
  Control.Monad.Trans.Reader.$fMonadReaderT @ (Yesod.Core.Types.HandlerFor
                                                 Foundation.App)
                                            @ r
                                            v
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT @ r
"SPEC/Foundation $fMonadReaderT_$c>>= @ (HandlerFor App) _" forall @ r
                                                                   ($dMonad :: GHC.Base.Monad
                                                                                 (Yesod.Core.Types.HandlerFor
                                                                                    Foundation.App))
  Control.Monad.Trans.Reader.$fMonadReaderT_$c>>= @ (Yesod.Core.Types.HandlerFor
                                                       Foundation.App)
                                                  @ r
                                                  $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>>= @ r
"SPEC/Foundation $fMonadReaderT_$cfail @ (HandlerFor App) _" forall @ r
                                                                    ($dMonad :: GHC.Base.Monad
                                                                                  (Yesod.Core.Types.HandlerFor
                                                                                     Foundation.App))
  Control.Monad.Trans.Reader.$fMonadReaderT_$cfail @ (Yesod.Core.Types.HandlerFor
                                                        Foundation.App)
                                                   @ r
                                                   $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cfail @ r
"SPEC/Foundation fromList @ Text" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                              Data.Text.Internal.Text)
  Data.Set.Internal.fromList @ Data.Text.Internal.Text $dOrd
  = Foundation.$fRouteAttrsApp_$sfromList
"SPEC/Foundation fromList @ Text _" [orphan] forall @ a
                                                    ($dOrd :: GHC.Classes.Ord
                                                                Data.Text.Internal.Text)
  Data.Map.Internal.fromList @ Data.Text.Internal.Text @ a $dOrd
  = Foundation.$fPersistEntityCliente_$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

