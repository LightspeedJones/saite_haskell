
==================== FINAL INTERFACE ====================
2018-12-10 21:56:34.673721256 UTC

interface main:Application [orphan module] 8044
  interface hash: 3a319f535855d1f33568cc4983db875a
  ABI hash: aafab9b8fa05cf6e4a9d9f65e04c25da
  export-list hash: 49d1c18fb14c713e9a228cd146aacfc6
  orphan hash: f1e3f2fb3c3b5625e908dd502b495bdf
  flag hash: 4893e455fe1a95c8df846695f3209236
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: True
  where
exports:
  Application.getHomeR
  Application.getLayoutAdmin
  Application.getLayoutLogado
  Application.getLayoutVisitante
module dependencies: Foundation Handlers.Admin Handlers.Cardapio
                     Handlers.Cliente Handlers.Login Handlers.Produto
package dependencies: aeson-1.3.1.1 aeson-compat-0.3.9
                      ansi-terminal-0.8.2 appar-0.1.4 array-0.5.2.0 async-2.2.1
                      attoparsec-0.13.2.2 attoparsec-iso8601-1.0.1.0 auto-update-0.1.4
                      base-4.11.1.0 base-compat-0.10.5 base64-bytestring-1.0.0.1
                      basement-0.0.8 binary-0.8.5.1 blaze-builder-0.4.1.0
                      blaze-html-0.9.1.1 blaze-markup-0.8.2.2 bsb-http-chunked-0.0.0.4
                      byteable-0.1.1 byteorder-1.0.4 bytestring-0.10.8.2
                      case-insensitive-1.2.0.11 cereal-0.5.7.0 cipher-aes-0.2.11
                      clientsession-0.9.1.2 colour-2.3.4 conduit-1.3.1
                      conduit-extra-1.3.0 containers-0.5.11.0 cookie-0.4.4
                      cprng-aes-0.6.1 crypto-api-0.13.3 crypto-cipher-types-0.0.9
                      crypto-random-0.0.9 css-text-0.1.3.0 data-default-class-0.1.2.0
                      deepseq-1.4.3.0 directory-1.3.1.5 dlist-0.8.0.5 easy-file-0.2.2
                      email-validate-2.3.2.9 entropy-0.4.1.4 exceptions-0.10.0
                      fast-logger-2.4.11 filepath-1.4.2 ghc-boot-th-8.4.4
                      ghc-prim-0.5.2.0 hashable-1.2.7.0 haskell-src-exts-1.20.3
                      haskell-src-meta-0.8.0.3 http-api-data-0.3.8.1 http-date-0.0.8
                      http-types-0.12.2 http2-1.6.4 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.2 iproute-1.7.6 lifted-base-0.2.3.12
                      memory-0.14.18 monad-control-1.0.2.3 monad-logger-0.3.30
                      monad-loops-0.4.3 mono-traversable-1.0.9.0 mtl-2.2.2
                      network-2.6.3.6 network-byte-order-0.0.0.0 network-uri-2.6.1.0
                      old-locale-1.0.0.7 old-time-1.1.0.3 parsec-3.1.13.0
                      path-pieces-0.2.1 persistent-2.8.2 persistent-postgresql-2.8.2.0
                      persistent-template-2.5.4 postgresql-libpq-0.9.4.2
                      postgresql-simple-0.5.4.0 pretty-1.1.3.6 primitive-0.6.3.0
                      process-1.6.3.0 psqueues-0.2.7.0 random-1.1 resource-pool-0.2.3.2
                      resourcet-1.2.2 scientific-0.3.6.2 securemem-0.1.10
                      shakespeare-2.0.20 silently-1.2.5 simple-sendfile-0.2.27
                      skein-1.0.9.4 split-0.2.3.3 stm-2.4.5.1 stm-chans-3.0.0.4
                      streaming-commons-0.2.1.0 tagged-0.8.5 tagsoup-0.14.7
                      template-haskell-2.13.0.0 text-1.2.3.1 time-1.8.0.2
                      time-locale-compat-0.1.1.5 transformers-0.5.5.0
                      transformers-base-0.4.5.2 unix-2.7.2.2 unix-compat-0.5.1
                      unix-time-0.3.8 unliftio-0.2.8.1 unliftio-core-0.1.2.0
                      unordered-containers-0.2.9.0 utf8-string-1.0.1.1 uuid-types-1.0.3
                      vault-0.3.1.2 vector-0.12.0.1 vector-algorithms-0.7.0.4 wai-3.2.1.2
                      wai-extra-3.0.24.3 wai-logger-2.3.2 warp-3.2.25 word8-0.1.3
                      xss-sanitize-0.3.6 yesod-1.6.0 yesod-core-1.6.8.1 yesod-form-1.6.3
                      yesod-persistent-1.6.0.1 zlib-0.6.2
orphans: persistent-template-2.5.4:Database.Persist.TH
         aeson-compat-0.3.9:Data.Aeson.Compat colour-2.3.4:Data.Colour
         crypto-api-0.13.3:Crypto.Classes
         basement-0.0.8:Basement.UArray.Base basement-0.0.8:Basement.Block
         network-2.6.3.6:Network.Socket
         haskell-src-exts-1.20.3:Language.Haskell.Exts.Parser
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistUnique
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistStore
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         hashable-1.2.7.0:Data.Hashable.Generic
         unix-time-0.3.8:Data.UnixTime.Diff stm-2.4.5.1:Control.Monad.STM
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.1:Data.Text.Lazy text-1.2.3.1:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         basement-0.0.8:Basement.Block.Base basement-0.0.8:Basement.Monad
                         basement-0.0.8:Basement.MutableBuilder basement-0.0.8:Basement.Nat
                         basement-0.0.8:Basement.NonEmpty
                         basement-0.0.8:Basement.Numerical.Subtractive
                         basement-0.0.8:Basement.PrimType basement-0.0.8:Basement.String
                         basement-0.0.8:Basement.String.Encoding.ASCII7
                         basement-0.0.8:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.8:Basement.String.Encoding.UTF16
                         basement-0.0.8:Basement.String.Encoding.UTF32
                         basement-0.0.8:Basement.Types.OffsetSize
                         basement-0.0.8:Basement.UArray.Base
                         basement-0.0.8:Basement.UTF8.Base
                         conduit-1.3.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1:Data.Conduit.Internal.Pipe
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.5:Data.DList email-validate-2.3.2.9:Text.Email.Parser
                         ghc-boot-th-8.4.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.4:GHC.LanguageExtensions.Type
                         haskell-src-exts-1.20.3:Language.Haskell.Exts.SrcLoc
                         haskell-src-exts-1.20.3:Language.Haskell.Exts.Syntax
                         iproute-1.7.6:Data.IP.Addr iproute-1.7.6:Data.IP.Range
                         main:Foundation monad-control-1.0.2.3:Control.Monad.Trans.Control
                         monad-logger-0.3.30:Control.Monad.Logger
                         mono-traversable-1.0.9.0:Data.MonoTraversable
                         mono-traversable-1.0.9.0:Data.NonNull
                         mono-traversable-1.0.9.0:Data.Sequences
                         network-uri-2.6.1.0:Network.URI
                         persistent-2.8.2:Database.Persist.Class.PersistConfig
                         persistent-2.8.2:Database.Persist.Class.PersistEntity
                         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.8.2:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.8.2.0:Database.Persist.Postgresql
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.20:Text.Internal.Css
                         shakespeare-2.0.20:Text.Shakespeare tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
                         yesod-core-1.6.8.1:Yesod.Core.Class.Handler
                         yesod-core-1.6.8.1:Yesod.Core.Internal.LiteApp
                         yesod-core-1.6.8.1:Yesod.Core.Types
                         zlib-0.6.2:Codec.Compression.Zlib.Stream
import  -/  base-4.11.1.0:Control.Applicative 55d9b3a7491623b0362290e162d67308
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  blaze-html-0.9.1.1:Text.Blaze.Html fdd818245cad1bbfcedd87b21c62946f
import  -/  blaze-markup-0.8.2.2:Text.Blaze.Internal 7539c43623397f23e7aba6515d74b4b1
import  -/  Foundation c3f228c50787eb8a2a03baa58859ac13
  exports: 63f39f9843587d33570b3a517962b6c3
  AdminR 047929a640bd335aa401d24fd434087b
  App 028f77da892e419c7c71ac6ea729fb79
  CardapioR df1d478f641b37161cfbf9f010edf8bb
  ClienteR 8b1250a4e2af1947aee4b5905ce858c1
  Handler 710e5b25bec76a789930acb22b27edde
  HomeR 2cbf60d328d7a71fdfe2c73e0c14b118
  LoginR 79a62121ed20fe2f539f78071c3d3559
  LogoutR 5a8eae9f9d96f38fc93d214c406cb224
  ProdutoR 21a925af4e764e5f06b53c047e07695c
  resourcesApp 7a145ec8c103b5ddb34bbf8fecba3474
import  -/  Handlers.Admin 36498ff73911746782cbb432ac18601c
  exports: a09d9b8cd9554d67ce8a73101059dba1
  getAdminR bacedbe14d44da976401e4a06f3fb45d
import  -/  Handlers.Cardapio 78f35e64ee41ae09c58eeaabc586bfe5
  exports: 95b553455109dc20126e23fb7e7e3cfd
  getCardapioR d062dc20c6bb84e99fc22953c24e013b
  postCardapioR 03d6aedf1fe74a00488aafd7febf6122
import  -/  Handlers.Cliente 0286f979bfe5f322ba965d2b94c60822
  exports: 3c2e56b0f2bb11d45c4b9e894313682f
  getClienteR 39bc549c53d18f2cd618cc0a8be5a2f6
  postClienteR e9484d4dee971564d3bfa499e9bf2d59
import  -/  Handlers.Login 1a75ff104bb6732588ba1c66ce15640d
  exports: bc54a4c0f9101cd541fb9f399985c8f1
  getLoginR beb47adce9b5313549202036d08305ca
  getLogoutR 33e47dcfb40a3362b03c5252489ab2c1
  postLoginR 5704657d8f5d5178b342d0273ddeaf96
import  -/  Handlers.Produto ce819d3214576c064652a79fda5eb7a1
  exports: 42fc1cee5dba4ee6d7586add9382d2c3
  getProdutoR 9295a62475ddb077451c0e74bfa1712e
  postProdutoR 00278976e10368c0b71140f9c052d471
import  -/  monad-logger-0.3.30:Control.Monad.Logger 8543a8ea2bc3183d80bcc2e19c1fd67d
import  -/  shakespeare-2.0.20:Text.Internal.Css 17c2e6de13b11d0d8e75d34fa99c9d4a
import  -/  shakespeare-2.0.20:Text.Lucius b430c66fd9a3ba305bfbf21371e6ecf1
import  -/  text-1.2.3.1:Data.Text cb97f965b33763b648b5393c0517cf50
import  -/  text-1.2.3.1:Data.Text.Internal 4893d0339f20e05978e1af2720305fa2
import  -/  wai-3.2.1.2:Network.Wai.Internal 7e011f5addc4b26cba9288193a3561ff
import  -/  yesod-1.6.0:Yesod 12dd731b07dae980742b80692ae0952f
import  -/  yesod-core-1.6.8.1:Yesod.Core.Class.Dispatch 580729c09df770bee163f3e7fe09b3e0
import  -/  yesod-core-1.6.8.1:Yesod.Core.Class.Yesod b52f2d36e084040c2f01914b6a7090fc
import  -/  yesod-core-1.6.8.1:Yesod.Core.Handler e612adc064f65691fdfb53152b949d63
import  -/  yesod-core-1.6.8.1:Yesod.Core.Internal.Run 427cd485f4047287637b02d5bcd0fd9a
import  -/  yesod-core-1.6.8.1:Yesod.Core.Internal.TH 3c4a92783209f9d5e38919d2f76db0a7
import  -/  yesod-core-1.6.8.1:Yesod.Core.Widget 876e385706692ff3cccbda9bd1bf970b
addDependentFile "templates/home.lucius" 0148a1ab3d0c4961bb4509a8a82ccc50
addDependentFile "templates/home.lucius" 0148a1ab3d0c4961bb4509a8a82ccc50
addDependentFile "templates/home.lucius" 0148a1ab3d0c4961bb4509a8a82ccc50
7a24dba966390f319de07d84292828f6
  $fYesodDispatchApp ::
    Yesod.Core.Class.Dispatch.YesodDispatch Foundation.App
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fYesodApp
                  Application.$fYesodDispatchApp_$cyesodDispatch -}
7d736c3ddba924b9b33a6ba425d9a8a5
  $fYesodDispatchApp_$cyesodDispatch ::
    Yesod.Core.Types.YesodRunnerEnv Foundation.App
    -> Network.Wai.Application
  {- Arity: 2,
     Strictness: <L,U(U,U,U,U,C(U(U,1*U(U,U,U))))><S(LLLLLLLSLLLLLLLL),1*U(U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
f139dc24a34d3bc4fcec2509e05b1036
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Application.$trModule3
                   Application.$trModule1) -}
05ffa4fd2fbb085cae04ea7e58c78394
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Application.$trModule2) -}
15ec12f3884c1c5f1cf36b0ba6365f42
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Application"#) -}
bf6d4784a169d182e0d8c34c07f9a5aa
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Application.$trModule4) -}
a7191f8af22e18a07d2980fdaea72188
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
a5f6cc4c820ccd1ce6f2acc5d5d75367
  getHomeR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U(U,U(U,U,U,U,U,U,U,U,U),U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Application.getHomeR1
                  `cast`
                ((<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                  ->_R Sym (GHC.Types.N:IO[0]
                                <Text.Blaze.Html.Html>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                                      <Foundation.App>_N
                                                                      <Text.Blaze.Html.Html>_R)) -}
c5d767555f5cebfd880d309a2d6dc80a
  getHomeR1 ::
    Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U(U,U(U,U,U,U,U,U,U,U,U),U,U)><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App Foundation.App)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Application.getHomeR_ds
                         `cast`
                       (Yesod.Core.Types.N:HandlerFor[0]
                            <Foundation.App>_N
                            <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_R)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> Foundation.$fYesodApp49
                        Application.getHomeR197
                          `cast`
                        ((<Yesod.Core.Types.WidgetData Foundation.App>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <()>_R)) ; Sym (Yesod.Core.Types.N:WidgetFor[0]
                                                            <Foundation.App>_N <()>_R))
                        r
                        ipv
                   GHC.Base.Just a1
                   -> Application.getHomeR2
                        (case a1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                         Data.Text.Encoding.$wdecodeUtf8With
                           Data.Text.Encoding.Error.lenientDecode
                           ww1
                           ww2
                           ww3
                           ww4 })
                        r
                        ipv } }) -}
0b89fb03794a7be1976f02f3bc9ba9c1
  getHomeR10 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" </ul></li>\n\
                 \</ul>\n\
                 \<h1> RESTAURANTE RESTAURANTOSO</h1>\n\
                 \<h2> <a id=\"card\" href="#) -}
3ea5c0417b9a73ab447684929a0bca02
  getHomeR100 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("a"#) -}
b30bdfb63d815ae33c7b04f0343a2a4a
  getHomeR101 ::
    Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR102) -}
15ea2d978338e063ba4360b725c746db
  getHomeR102 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR136
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR103
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
74ffe5ffde60d1217b04dabf239f3110
  getHomeR103 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR129
                   Application.getHomeR104) -}
37da3f35868a34680970f7ec54675718
  getHomeR104 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR94
                   Application.getHomeR105) -}
b9db841c1707f34e4a1279e07d81d773
  getHomeR105 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR122
                   Application.getHomeR106) -}
f0d9fd2e640af30cb29282ecb21d4e08
  getHomeR106 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR115
                   Application.getHomeR107) -}
c80ccaad0579f92c43aeb80c4fee03b8
  getHomeR107 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR108
                   Application.getHomeR86) -}
79126ec5160a91387a5c3a8ea934cf51
  getHomeR108 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR112
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR109
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
65e48ad94e6d21229723b9209eaaf9f0
  getHomeR109 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR110)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
0cc23466c8b6f947ca0d619be9a4f302
  getHomeR11 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Application.getHomeR12) -}
a502c93dd3337d8527c4fb0dd8506830
  getHomeR110 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR111) -}
94eaa1e493ed719b65b5e99529f81307
  getHomeR111 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("none"#) -}
a030cff046a954c08d3fbc3a05eed816
  getHomeR112 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR113)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
e287323c4aa68ea17eec8313ccb3d04c
  getHomeR113 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR114) -}
c0d5d8805ff9411c2cb9af1405fa3669
  getHomeR114 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("text-decoration"#) -}
3a33cb2e1fdf27a35a8ed8ec9fd47cc6
  getHomeR115 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR119
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR116
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
f2a01f3dd56682c6dbd7d65b07cadefd
  getHomeR116 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR117)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
2804e634d300a7b297717e7aabe82783
  getHomeR117 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR118) -}
8e0beb8533b65672883adc15ff3da3bf
  getHomeR118 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("14px 16px"#) -}
0853ad4a19ba2e9eacead354f841ebbd
  getHomeR119 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR120)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
b1815d976f07e7bfd491aa0ca1488e71
  getHomeR12 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Application.getHomeR13) -}
227c2dc6a1b24b5228497990dd7ddfd4
  getHomeR120 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR121) -}
afd42961f95d5cdb2da81da56b3e4918
  getHomeR121 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("padding"#) -}
750bed320c636acc824c942d269f4a9a
  getHomeR122 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR126
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR123
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
50f29d7f28819251e4bc4e1205ca6d24
  getHomeR123 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR124)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
fadfa2e33d46122c27500914354539f0
  getHomeR124 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR125) -}
6c468595468a83590dd8db848f0cd125
  getHomeR125 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("center"#) -}
e0838ddb6006df6e719834259c6b4ae9
  getHomeR126 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR127)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
d691006cb4e9de4e2ab873bd29441b2f
  getHomeR127 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR128) -}
1f8808e30c37084aa6602e5198a80608
  getHomeR128 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("text-align"#) -}
80c15af08e949ddbfff01d2514337727
  getHomeR129 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR133
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR130
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
4635cb89efce9f0a6665bc88fcedc938
  getHomeR13 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR14) -}
18e6a0e0b065aa8fec67f5ef85845637
  getHomeR130 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR131)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
d51a8574da30b53284bb00ef17932c28
  getHomeR131 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR132) -}
c3af49218b932e85d60a6bc844117ec0
  getHomeR132 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("block"#) -}
52ac679e5869aca99f889efe8cc056b5
  getHomeR133 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR134)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
76accda77748e8e3969ed6e56de7182b
  getHomeR134 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR135) -}
63cb7f749c8c310526e1905f3003265e
  getHomeR135 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("display"#) -}
c79db5586a7d58d501e6df790b2a76b4
  getHomeR136 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR137)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
434c909899c2bfed5a8d0700d3318fb9
  getHomeR137 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR138) -}
ca67d14b7fb6f49c4b527629bde5b0c4
  getHomeR138 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("li"#) -}
8d6c257c3d9344ef632e13528c3a58ad
  getHomeR139 ::
    Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR140) -}
e70290619951d4634e1a109b5dc05a84
  getHomeR14 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (">Sair </a></li>\n\
                 \<li style=\"float:right\"> eae "#) -}
3a660a0e12a8bbacd4c40dc6badf2254
  getHomeR140 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR136
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR141
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
2ccfe718e623ef8b3c600f6cb71ca26f
  getHomeR141 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR142
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
249fe06a2bdfc0b9dace5d9f665d8c61
  getHomeR142 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR146
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR143
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
4ab67d5c4ff823276f9e052238acb6d8
  getHomeR143 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR144)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
5817b90f726899b417f2ec1b173dae07
  getHomeR144 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR145) -}
fff6c54668f833dc44ba10b9ad2bfeb5
  getHomeR145 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("left"#) -}
8e69ebc9e05108b8f367f5c69f560e63
  getHomeR146 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR147)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
722373372ab14c34edb254097ed26f4e
  getHomeR147 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR148) -}
a79eb5e47d2e9a622c437bb9fecf83e5
  getHomeR148 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("float"#) -}
99bac23b4ff3d140d842cda9998d879c
  getHomeR149 ::
    Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR150) -}
7b340b13fa1d1fcc6fa6de3393b7e2b4
  getHomeR15 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Application.getHomeR16) -}
390096ac561a3fe4bd0bd10bb8d2da8e
  getHomeR150 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR179
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR151
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
842c95186ef82b442505f389c5dda197
  getHomeR151 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR175
                   Application.getHomeR152) -}
81d9d420f10d2f5f3c3f5ef0bd747fd2
  getHomeR152 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR171
                   Application.getHomeR153) -}
b442f92c656142a7ca7b059ea9d869f1
  getHomeR153 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR167
                   Application.getHomeR154) -}
e5df6c0b4f7ef7f932614b57f7c90ff6
  getHomeR154 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR160
                   Application.getHomeR155) -}
2be1dd706fe8d71695eee72f21a8a587
  getHomeR155 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR156
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
02c74346c0963ebc00a233cb2ff8c9f3
  getHomeR156 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR67
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR157
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
7c988169c6c3866ba804c1b096212700
  getHomeR157 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR158)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
394d5fff64aa52dd24188fbc142f4fa0
  getHomeR158 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR159) -}
08fa245b2c8524429c9d27d5d9d0bd70
  getHomeR159 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#333"#) -}
4bc644ba8a06a36ade7be229b665af51
  getHomeR16 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Application.getHomeR17) -}
86c0ea7404a81e83656f1203d2750263
  getHomeR160 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR164
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR161
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
f650631f20ab12bb6471e2ac1e9edce0
  getHomeR161 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR162)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
e5845143f7c1e08a0300e3baded33e19
  getHomeR162 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR163) -}
1d9957025d18d77d70ab8146573e6bf4
  getHomeR163 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("hidden"#) -}
ca8752e35d3577f9cec1c08f9501e16c
  getHomeR164 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR165)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
d0b65178d555350fb7c1afd230cc9568
  getHomeR165 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR166) -}
de14771abf7b563be3bee3c875ea2d75
  getHomeR166 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("overflow"#) -}
d95a018cdf803da4cef85e8c2069e95d
  getHomeR167 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR119
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR168
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
d6cec37feb0ab565b7b81bc46446c56e
  getHomeR168 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR169)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
453f5bed71fa72a19f7570c0115acf8c
  getHomeR169 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR170) -}
106a705b2fd21f056ab720bba370c5d9
  getHomeR17 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR18) -}
78c4c761d54f3a592acbd8361c8bed78
  getHomeR170 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("0"#) -}
45c074501920d8b3aef6fac22f765fd1
  getHomeR171 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR172
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR168
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
fb527f7f927d15c4b9412eff2b36bf4a
  getHomeR172 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR173)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
d5e07317ad0800d083ca50e9a7b5d122
  getHomeR173 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR174) -}
b1a9e76a6a7b3d1e6c2f3700e4447a3d
  getHomeR174 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("margin"#) -}
242c1bcb383d8b6f3a4c446432ae9ac0
  getHomeR175 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR176
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR109
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
fa911c841c71d6760d7dac6873c33e2f
  getHomeR176 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR177)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
f3f179bb4f54e3c6f9017261d507f939
  getHomeR177 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR178) -}
301bdc069d3e3d97a8f98368739552c9
  getHomeR178 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("list-style-type"#) -}
1d1108f3799f1d9b96e8400cfd6f5d00
  getHomeR179 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR180)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
b3331fce04574649d22b6b238de02861
  getHomeR18 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("<ul><li style=\"float:right\"> <a href="#) -}
7c1c4f4508a9133bca4877f55393b8bb
  getHomeR180 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR181) -}
9d89d967a239c55c23fdc7b219c84a8e
  getHomeR181 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ul"#) -}
80f0f1fe4cdc8778146d3f95cdee800b
  getHomeR182 ::
    Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR183) -}
a9cdf46dea60e7f2ffc8b5c9ca8816a5
  getHomeR183 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR194
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR184
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
33c39d63b3ffd70f8ee7fa2ae3ced675
  getHomeR184 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR187
                   Application.getHomeR185) -}
825d04b93c0fff87283fa8be98d6e9a5
  getHomeR185 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR87
                   Application.getHomeR186) -}
b6f10cd28d2cca6913ea1f32edae1376
  getHomeR186 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR122
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
946e58b32925372f109dd273626415d7
  getHomeR187 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR191
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR188
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
fa580b14b119a1dfb513616e01c69c0a
  getHomeR188 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR189)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
eff93b0a017384604a568f63a372686b
  getHomeR189 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR190) -}
937a98e232c222659cc391835cf88363
  getHomeR19 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Internal.Css.Css
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: (\ (_render :: Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text) ->
                 Application.getHomeR20) -}
afedd1b76c546b31f6b9d97aecb25388
  getHomeR190 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("30px"#) -}
7e905d5195a5d2f12c0c9a31bfd5dd9d
  getHomeR191 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR192)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
48db9f3c188f4adbfaaa6351772f3955
  getHomeR192 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR193) -}
6b082cdfa643d94770d641bb9ad3bcc9
  getHomeR193 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("font-size"#) -}
1edc72906882158756e4a2d97de486ff
  getHomeR194 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR195)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
cf06991f9b8c20296a589603e8e9ec54
  getHomeR195 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR196) -}
a66297d1453bdc32af2b419d17794b36
  getHomeR196 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("h1"#) -}
f86d7feef2e5c0cd9d5f31f94c73a477
  getHomeR197 ::
    Yesod.Core.Types.WidgetData Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U,U,U(U,U,U,U,U,U,U,U,U),U,U)><S,U>,
     Unfolding: (\ (wd :: Yesod.Core.Types.WidgetData Foundation.App)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Application.getHomeR_m1
                         `cast`
                       (Yesod.Core.Types.N:WidgetFor[0] <Foundation.App>_N <()>_R)
                         wd)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case wd
                        `cast`
                      (Yesod.Core.Types.WidgetData
                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                   <Foundation.App>_N)))_R of wild { Yesod.Core.Types.WidgetData dt dt1 dt2 dt3 dt4 ->
                 case dt2 of wild1 { Yesod.Core.Types.RunHandlerEnv ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        ipv of ds11 { (#,#) ipv2 ipv3 ->
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv3
                        Application.getHomeR_d3
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x' { Yesod.Core.Types.GWData ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ipv10 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'
                        ipv2 of s2# { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        s2# of ds12 { (#,#) ipv11 ipv12 ->
                 let {
                   eta :: Data.Text.Internal.Text
                   = ds2
                       Foundation.LoginR
                         `cast`
                       (Sym (Foundation.D:R:RouteApp0[0]) ; (Yesod.Routes.Class.Route
                                                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                                                         <Foundation.App>_N)))_R)
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   eta1 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text eta
                 } in
                 let {
                   eta2 :: Text.Blaze.Html.Html
                   = Text.Blaze.Internal.Content @ () eta1 GHC.Tuple.()
                 } in
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv12
                        (Yesod.Core.Types.GWData
                           @ (Yesod.Routes.Class.Route Foundation.App)
                           (\ (ds13 :: Yesod.Routes.Class.Route Foundation.App
                                       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                       -> Data.Text.Internal.Text) ->
                            eta2)
                             `cast`
                           (Sym (Yesod.Core.Types.N:Body[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R))
                           (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                             `cast`
                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Script
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Script
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Stylesheet
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Stylesheet
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (Data.Map.Internal.Tip
                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Data.Text.Internal.Builder.Builder))
                           (GHC.Base.Nothing
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Text.Julius.Javascript))
                           (Yesod.Core.Types.$fIsStringWidgetFor2
                              @ (Yesod.Routes.Class.Route Foundation.App))
                             `cast`
                           (Sym (Yesod.Core.Types.N:Head[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R)))
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x'1 { Yesod.Core.Types.GWData ipv13 ipv14 ipv15 ipv16 ipv17 ipv18 ipv19 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'1
                        ipv11 of s2#1 { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        s2#1 of ds13 { (#,#) ipv20 ipv21 ->
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv21
                        Application.getHomeR_d5
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x'2 { Yesod.Core.Types.GWData ipv22 ipv23 ipv24 ipv25 ipv26 ipv27 ipv28 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'2
                        ipv20 of s2#2 { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        s2#2 of ds14 { (#,#) ipv29 ipv30 ->
                 let {
                   eta3 :: Data.Text.Internal.Text
                   = ds2
                       Foundation.ClienteR
                         `cast`
                       (Sym (Foundation.D:R:RouteApp0[0]) ; (Yesod.Routes.Class.Route
                                                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                                                         <Foundation.App>_N)))_R)
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   eta4 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text eta3
                 } in
                 let {
                   eta5 :: Text.Blaze.Html.Html
                   = Text.Blaze.Internal.Content @ () eta4 GHC.Tuple.()
                 } in
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv30
                        (Yesod.Core.Types.GWData
                           @ (Yesod.Routes.Class.Route Foundation.App)
                           (\ (ds15 :: Yesod.Routes.Class.Route Foundation.App
                                       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                       -> Data.Text.Internal.Text) ->
                            eta5)
                             `cast`
                           (Sym (Yesod.Core.Types.N:Body[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R))
                           (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                             `cast`
                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Script
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Script
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Stylesheet
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Stylesheet
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (Data.Map.Internal.Tip
                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Data.Text.Internal.Builder.Builder))
                           (GHC.Base.Nothing
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Text.Julius.Javascript))
                           (Yesod.Core.Types.$fIsStringWidgetFor2
                              @ (Yesod.Routes.Class.Route Foundation.App))
                             `cast`
                           (Sym (Yesod.Core.Types.N:Head[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R)))
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x'3 { Yesod.Core.Types.GWData ipv31 ipv32 ipv33 ipv34 ipv35 ipv36 ipv37 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'3
                        ipv29 of s2#3 { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        s2#3 of ds15 { (#,#) ipv38 ipv39 ->
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv39
                        Application.getHomeR_d4
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x'4 { Yesod.Core.Types.GWData ipv40 ipv41 ipv42 ipv43 ipv44 ipv45 ipv46 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'4
                        ipv38 of s2#4 { DEFAULT ->
                 (# s2#4, GHC.Tuple.() #) } } } } } } } } } } } } } } } } } }) -}
c715e60e2f84c48de1dfac622b2b1bf5
  getHomeR198 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Application.getHomeR199) -}
57f9ab2ffc0aae7bd0e2abad0b96fd04
  getHomeR199 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Application.getHomeR200) -}
a25dd552f2b04a90feb2857536348cc1
  getHomeR2 ::
    Data.Text.Internal.Text
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Text.Blaze.Internal.MarkupM () #)
  {- Arity: 3,
     Strictness: <L,U><L,U(U,U(U,U,U,U,U,U,U,U,U),U,U)><S,U>,
     Unfolding: (\ (x :: Data.Text.Internal.Text)
                   (eta :: Yesod.Core.Types.HandlerData Foundation.App Foundation.App)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 let {
                   eta2 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text x
                 } in
                 let {
                   eta3 :: Text.Blaze.Html.Html
                   = Text.Blaze.Internal.Content @ () eta2 GHC.Tuple.()
                 } in
                 Foundation.$fYesodApp49
                   (\ (wd :: Yesod.Core.Types.WidgetData Foundation.App)[OneShot]
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case (Application.getHomeR_m1
                            `cast`
                          (Yesod.Core.Types.N:WidgetFor[0] <Foundation.App>_N <()>_R)
                            wd)
                           `cast`
                         (GHC.Types.N:IO[0] <()>_R)
                           s of ds1 { (#,#) ipv ipv1 ->
                    case wd
                           `cast`
                         (Yesod.Core.Types.WidgetData
                            (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                      <Foundation.App>_N)))_R of wild { Yesod.Core.Types.WidgetData dt dt1 dt2 dt3 dt4 ->
                    case dt2 of wild1 { Yesod.Core.Types.RunHandlerEnv ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           ipv of ds11 { (#,#) ipv2 ipv3 ->
                    case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                           @ (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App)))
                           ipv3
                           Application.getHomeR_d3
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R of x' { Yesod.Core.Types.GWData ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ipv10 ->
                    case GHC.Prim.writeMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           x'
                           ipv2 of s2# { DEFAULT ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           s2# of ds12 { (#,#) ipv11 ipv12 ->
                    let {
                      eta4 :: Data.Text.Internal.Text
                      = ds2
                          Foundation.LogoutR
                            `cast`
                          (Sym (Foundation.D:R:RouteApp0[0]) ; (Yesod.Routes.Class.Route
                                                                  (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                                                            <Foundation.App>_N)))_R)
                          (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                    } in
                    let {
                      eta5 :: Text.Blaze.Internal.ChoiceString
                      = Text.Blaze.Internal.Text eta4
                    } in
                    let {
                      eta6 :: Text.Blaze.Html.Html
                      = Text.Blaze.Internal.Content @ () eta5 GHC.Tuple.()
                    } in
                    case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                           @ (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App)))
                           ipv12
                           (Yesod.Core.Types.GWData
                              @ (Yesod.Routes.Class.Route Foundation.App)
                              (\ (ds13 :: Yesod.Routes.Class.Route Foundation.App
                                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                          -> Data.Text.Internal.Text) ->
                               eta6)
                                `cast`
                              (Sym (Yesod.Core.Types.N:Body[0]
                                        <Yesod.Routes.Class.Route Foundation.App>_R))
                              (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                `cast`
                              (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                              (GHC.Base.id
                                 @ [Yesod.Core.Types.Script
                                      (Yesod.Routes.Class.Route Foundation.App)])
                                `cast`
                              (Sym (Yesod.Core.Types.N:UniqueList[0]
                                        <Yesod.Core.Types.Script
                                           (Yesod.Routes.Class.Route Foundation.App)>_R))
                              (GHC.Base.id
                                 @ [Yesod.Core.Types.Stylesheet
                                      (Yesod.Routes.Class.Route Foundation.App)])
                                `cast`
                              (Sym (Yesod.Core.Types.N:UniqueList[0]
                                        <Yesod.Core.Types.Stylesheet
                                           (Yesod.Routes.Class.Route Foundation.App)>_R))
                              (Data.Map.Internal.Tip
                                 @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                 @ ((Yesod.Routes.Class.Route Foundation.App
                                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                     -> Data.Text.Internal.Text)
                                    -> Data.Text.Internal.Builder.Builder))
                              (GHC.Base.Nothing
                                 @ ((Yesod.Routes.Class.Route Foundation.App
                                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                     -> Data.Text.Internal.Text)
                                    -> Text.Julius.Javascript))
                              (Yesod.Core.Types.$fIsStringWidgetFor2
                                 @ (Yesod.Routes.Class.Route Foundation.App))
                                `cast`
                              (Sym (Yesod.Core.Types.N:Head[0]
                                        <Yesod.Routes.Class.Route Foundation.App>_R)))
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R of x'1 { Yesod.Core.Types.GWData ipv13 ipv14 ipv15 ipv16 ipv17 ipv18 ipv19 ->
                    case GHC.Prim.writeMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           x'1
                           ipv11 of s2#1 { DEFAULT ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           s2#1 of ds13 { (#,#) ipv20 ipv21 ->
                    case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                           @ (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App)))
                           ipv21
                           Application.getHomeR_d2
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R of x'2 { Yesod.Core.Types.GWData ipv22 ipv23 ipv24 ipv25 ipv26 ipv27 ipv28 ->
                    case GHC.Prim.writeMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           x'2
                           ipv20 of s2#2 { DEFAULT ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           s2#2 of ds14 { (#,#) ipv29 ipv30 ->
                    case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                           @ (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App)))
                           ipv30
                           (Yesod.Core.Types.GWData
                              @ (Yesod.Routes.Class.Route Foundation.App)
                              (\ (ds15 :: Yesod.Routes.Class.Route Foundation.App
                                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                          -> Data.Text.Internal.Text) ->
                               eta3)
                                `cast`
                              (Sym (Yesod.Core.Types.N:Body[0]
                                        <Yesod.Routes.Class.Route Foundation.App>_R))
                              (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                `cast`
                              (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                              (GHC.Base.id
                                 @ [Yesod.Core.Types.Script
                                      (Yesod.Routes.Class.Route Foundation.App)])
                                `cast`
                              (Sym (Yesod.Core.Types.N:UniqueList[0]
                                        <Yesod.Core.Types.Script
                                           (Yesod.Routes.Class.Route Foundation.App)>_R))
                              (GHC.Base.id
                                 @ [Yesod.Core.Types.Stylesheet
                                      (Yesod.Routes.Class.Route Foundation.App)])
                                `cast`
                              (Sym (Yesod.Core.Types.N:UniqueList[0]
                                        <Yesod.Core.Types.Stylesheet
                                           (Yesod.Routes.Class.Route Foundation.App)>_R))
                              (Data.Map.Internal.Tip
                                 @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                 @ ((Yesod.Routes.Class.Route Foundation.App
                                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                     -> Data.Text.Internal.Text)
                                    -> Data.Text.Internal.Builder.Builder))
                              (GHC.Base.Nothing
                                 @ ((Yesod.Routes.Class.Route Foundation.App
                                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                     -> Data.Text.Internal.Text)
                                    -> Text.Julius.Javascript))
                              (Yesod.Core.Types.$fIsStringWidgetFor2
                                 @ (Yesod.Routes.Class.Route Foundation.App))
                                `cast`
                              (Sym (Yesod.Core.Types.N:Head[0]
                                        <Yesod.Routes.Class.Route Foundation.App>_R)))
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R of x'3 { Yesod.Core.Types.GWData ipv31 ipv32 ipv33 ipv34 ipv35 ipv36 ipv37 ->
                    case GHC.Prim.writeMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           x'3
                           ipv29 of s2#3 { DEFAULT ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           s2#3 of ds15 { (#,#) ipv38 ipv39 ->
                    case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                           @ (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App)))
                           ipv39
                           Application.getHomeR_d1
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R of x'4 { Yesod.Core.Types.GWData ipv40 ipv41 ipv42 ipv43 ipv44 ipv45 ipv46 ->
                    case GHC.Prim.writeMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           x'4
                           ipv38 of s2#4 { DEFAULT ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           s2#4 of ds16 { (#,#) ipv47 ipv48 ->
                    let {
                      eta7 :: Data.Text.Internal.Text
                      = ds2
                          Foundation.CardapioR
                            `cast`
                          (Sym (Foundation.D:R:RouteApp0[0]) ; (Yesod.Routes.Class.Route
                                                                  (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                                                            <Foundation.App>_N)))_R)
                          (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                    } in
                    let {
                      eta8 :: Text.Blaze.Internal.ChoiceString
                      = Text.Blaze.Internal.Text eta7
                    } in
                    let {
                      eta9 :: Text.Blaze.Html.Html
                      = Text.Blaze.Internal.Content @ () eta8 GHC.Tuple.()
                    } in
                    case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                           @ (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App)))
                           ipv48
                           (Yesod.Core.Types.GWData
                              @ (Yesod.Routes.Class.Route Foundation.App)
                              (\ (ds17 :: Yesod.Routes.Class.Route Foundation.App
                                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                          -> Data.Text.Internal.Text) ->
                               eta9)
                                `cast`
                              (Sym (Yesod.Core.Types.N:Body[0]
                                        <Yesod.Routes.Class.Route Foundation.App>_R))
                              (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                `cast`
                              (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                              (GHC.Base.id
                                 @ [Yesod.Core.Types.Script
                                      (Yesod.Routes.Class.Route Foundation.App)])
                                `cast`
                              (Sym (Yesod.Core.Types.N:UniqueList[0]
                                        <Yesod.Core.Types.Script
                                           (Yesod.Routes.Class.Route Foundation.App)>_R))
                              (GHC.Base.id
                                 @ [Yesod.Core.Types.Stylesheet
                                      (Yesod.Routes.Class.Route Foundation.App)])
                                `cast`
                              (Sym (Yesod.Core.Types.N:UniqueList[0]
                                        <Yesod.Core.Types.Stylesheet
                                           (Yesod.Routes.Class.Route Foundation.App)>_R))
                              (Data.Map.Internal.Tip
                                 @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                 @ ((Yesod.Routes.Class.Route Foundation.App
                                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                     -> Data.Text.Internal.Text)
                                    -> Data.Text.Internal.Builder.Builder))
                              (GHC.Base.Nothing
                                 @ ((Yesod.Routes.Class.Route Foundation.App
                                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                     -> Data.Text.Internal.Text)
                                    -> Text.Julius.Javascript))
                              (Yesod.Core.Types.$fIsStringWidgetFor2
                                 @ (Yesod.Routes.Class.Route Foundation.App))
                                `cast`
                              (Sym (Yesod.Core.Types.N:Head[0]
                                        <Yesod.Routes.Class.Route Foundation.App>_R)))
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R of x'5 { Yesod.Core.Types.GWData ipv49 ipv50 ipv51 ipv52 ipv53 ipv54 ipv55 ->
                    case GHC.Prim.writeMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           x'5
                           ipv47 of s2#5 { DEFAULT ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           s2#5 of ds17 { (#,#) ipv56 ipv57 ->
                    case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                           @ (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App)))
                           ipv57
                           Application.getHomeR_d
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R of x'6 { Yesod.Core.Types.GWData ipv58 ipv59 ipv60 ipv61 ipv62 ipv63 ipv64 ->
                    case GHC.Prim.writeMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           x'6
                           ipv56 of s2#6 { DEFAULT ->
                    (# s2#6,
                       GHC.Tuple.() #) } } } } } } } } } } } } } } } } } } } } } } } })
                     `cast`
                   ((<Yesod.Core.Types.WidgetData Foundation.App>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <()>_R)) ; Sym (Yesod.Core.Types.N:WidgetFor[0]
                                                       <Foundation.App>_N <()>_R))
                   eta
                   eta1) -}
a204a27d5e95de0d51df5715ca815f10
  getHomeR20 :: Text.Internal.Css.Css
  {- Strictness: m2,
     Unfolding: (Text.Internal.Css.CssNoWhitespace
                   Application.getHomeR21) -}
990ccd92b017c8e7c1cfbd226c7546de
  getHomeR200 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR201) -}
a63389a6ffeb3fa6a49a9018196959bf
  getHomeR201 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("> Fa\\195\\167a seu cadastro!</h2>\n"#) -}
01e19c33bdb1d9868e1021adcbfa0049
  getHomeR202 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Application.getHomeR203) -}
49224daab78d7ad9e1848876a5d4feb1
  getHomeR203 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Application.getHomeR204) -}
1f8b4b63f5d1982965f91aede7ec2914
  getHomeR204 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR205) -}
564b2c7d1a938f38298101c21e75b9e7
  getHomeR205 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (">Login </a></li>\n\
                 \<li style=\"float:right\"> eae visitante </ul></li>\n\
                 \</ul>\n\
                 \<h1> RESTAURANTE RESTAURANTOSO</h1>\n\
                 \<h2> <a id=\"cadastro\" href="#) -}
fc60d7e25a6ec147740cc126c3488486
  getHomeR206 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR207) -}
42906c0c7144698c5bdf47f9d4ea8883
  getHomeR207 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_NOME"#) -}
8e5feadcdc170227ef2ffef59bd8f8b3
  getHomeR21 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR182
                   Application.getHomeR22) -}
0dcb91ea22e420154cadd41acae362b3
  getHomeR22 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR149
                   Application.getHomeR23) -}
1d4c02e0a063321d7b9649776148fd66
  getHomeR23 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR139
                   Application.getHomeR24) -}
483c6d478e43170050ec67a2af696e58
  getHomeR24 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR101
                   Application.getHomeR25) -}
5b697537e225dc67d39ec593aa8aa22d
  getHomeR25 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR83
                   Application.getHomeR26) -}
47085af3024b4e8a718278d8b0264d9c
  getHomeR26 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR73
                   Application.getHomeR27) -}
23ade6f8c71f51b711d622b84d04489f
  getHomeR27 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR60
                   Application.getHomeR28) -}
ae130c68cf4fb85c2f0c1c2c13287723
  getHomeR28 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR55
                   Application.getHomeR29) -}
ff2760fbdb7ba6057809aec71c65487e
  getHomeR29 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR50
                   Application.getHomeR30) -}
91363cb171d0075add8e4065b5b91b5a
  getHomeR3 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Application.getHomeR4) -}
f4dd502662d867abd484c74045e5efbf
  getHomeR30 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR45
                   Application.getHomeR31) -}
1228a3571dd6421e423f4a1d600ff658
  getHomeR31 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR32
                   (GHC.Types.[]
                      @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved))) -}
d8016d5ecb8854b26d8ea5dbdbd56ca3
  getHomeR32 :: Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR33) -}
e1baa4177a4e1001835382d069df8578
  getHomeR33 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR42
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR34
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
72b59be88d49a42cd0db2f0852319009
  getHomeR34 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR35
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
41908082aa7fc21a78c1e02b73bff106
  getHomeR35 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR39
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR36
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
885a95e8d3beff21eaf3cb16abbbee96
  getHomeR36 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR37)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
be2171d7fd7bb4c10bb30dfb40920ec2
  getHomeR37 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR38) -}
31a4dc466bfe7b1a611a597d6a3d5ae7
  getHomeR38 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("black"#) -}
ad1fa16792ae1545a43e3ae8e2bf4782
  getHomeR39 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR40)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
95c4ff8001c9e2ef9cbb463f2c0692f4
  getHomeR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Application.getHomeR5) -}
d846c42303ab0ec57941577833fae4fc
  getHomeR40 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR41) -}
e182e98dc7d6f837aa1226132cd45eae
  getHomeR41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("color"#) -}
b95a0de5d5bbd862b3760396faf46e38
  getHomeR42 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR43)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
8667c5264ae992dc2327775bff7492c5
  getHomeR43 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR44) -}
62f15c8c81abf1f8c14e637f0fbe9f9b
  getHomeR44 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#ped"#) -}
d017702b833be96d1458c07f56ceb720
  getHomeR45 :: Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR46) -}
e3c564e172ba185e316ad0a641abaa21
  getHomeR46 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR47
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR34
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
0aee3e1bfac0d224b575bbef3ad40938
  getHomeR47 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR48)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
83b8df6a577a01cca538250d14fd93f7
  getHomeR48 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR49) -}
2ed2fa7c5642204c023f910507764984
  getHomeR49 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#prod"#) -}
714ee7beb4f89aa48c9a9cc03df03a7f
  getHomeR5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR6) -}
f9bea3a7018d300532c59a96a3489943
  getHomeR50 :: Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR51) -}
1c89504ab1e6ae5c483e9023977091b5
  getHomeR51 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR52
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR34
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
91f8b1f0053ebf75e6382698d118d893
  getHomeR52 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR53)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
99a2ce6c85d85e458684adb2a0abede8
  getHomeR53 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR54) -}
81537a835adedb073d501bce8bc66238
  getHomeR54 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#cadastro"#) -}
61325d11e59c1b927a15740ec8d0ec99
  getHomeR55 :: Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR56) -}
fb132dcbd67ade32ad41f855a55700fa
  getHomeR56 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR57
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR34
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
4847b936e3c55b0e5057b31de859e934
  getHomeR57 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR58)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
8826e48161c22020ae0b8964f77921ea
  getHomeR58 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR59) -}
088b6a68fd1bc022ac5fd05be95c9f8e
  getHomeR59 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#card"#) -}
3ba90bd62de69cc80ab5d2cb02297343
  getHomeR6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("> Cardapio</h2>\n"#) -}
3a22f3afcde59e2dffef556bde6aad3e
  getHomeR60 :: Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR61) -}
7edff0cac648934975205e8abd2fbd97
  getHomeR61 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR70
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR62
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
d712363ad14debb7572cbe1bddb386b8
  getHomeR62 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR63
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
7a98d8f8b74787c02f121a36dbb8346a
  getHomeR63 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR67
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR64
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
23a8c22068690a012e7d86ddcb2f8cfe
  getHomeR64 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR65)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
5127802cde4cf70077af8a180395ac04
  getHomeR65 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR66) -}
30cba09aa7a91c8401859a5b18850a86
  getHomeR66 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#4CAF50"#) -}
45621a1b031477aae79f40332b37172f
  getHomeR67 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR68)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
d94d45f0e717237595467de26530765c
  getHomeR68 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR69) -}
7ceb686ff515c10f6cef81bd75a02f27
  getHomeR69 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("background-color"#) -}
d43873c06dc2a001c70ba9bc7702ddd2
  getHomeR7 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Application.getHomeR8) -}
9e005f234aad4bd89c69a43281009750
  getHomeR70 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR71)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
29c95f6e555c39b7c1d83ceb72d7730c
  getHomeR71 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR72) -}
675527004c69499cef3e66ea9832c619
  getHomeR72 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (".active"#) -}
d82db7248b1999a389159a5fdbcc7ebb
  getHomeR73 :: Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR74) -}
2a2e961b8be8c2a3dde72ebcbd916263
  getHomeR74 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR80
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR75
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
378c4a4f2132654723af369d3c7248eb
  getHomeR75 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR76
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
d439e7dba12f7810bc1d164675b9965c
  getHomeR76 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR67
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR77
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
7fcfdd5d30878c05fd77defd2379e376
  getHomeR77 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR78)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
3291000dc6deb586430dfb98a80b214a
  getHomeR78 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR79) -}
9f125445263e63f34ea5487580e422a7
  getHomeR79 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#111"#) -}
1b7d9cfbb46c9a2b7391807b2590dcae
  getHomeR8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Application.getHomeR9) -}
7f0bef769ad6130ead19e2ea008558f3
  getHomeR80 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR81)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
32a0c41eac4aba96229e9a79e0788f5c
  getHomeR81 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR82) -}
51f3a223f942b4dae26bc0f6c38d76f0
  getHomeR82 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("li a:hover:not(.active)"#) -}
2925db3a64ea71ee114d25fcee81e5f3
  getHomeR83 :: Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR84) -}
2b35b151279166e79299b6af056fa78d
  getHomeR84 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR98
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR85
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
cfcbcb877cb2e7c42c656903ce8056c8
  getHomeR85 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR94
                   Application.getHomeR86) -}
50b8b344f5f525bab8690e2cad2ec8eb
  getHomeR86 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR87
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
bc11459af41ef83cda59a4eca3bb84cc
  getHomeR87 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR91
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR88
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
5c425c16069887bb38164e0ec96a432b
  getHomeR88 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR89)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
2f696d8a13598f2854c73a4086470cbe
  getHomeR89 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR90) -}
d645769354654877f6148a18960736a3
  getHomeR9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR10) -}
1bba02c592a588b821ed8c7634773592
  getHomeR90 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("segoe ui light"#) -}
1906fe35ccd8e345af50b1cadad49116
  getHomeR91 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR92)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
6b334cf92ef59c8f50542ca450ca7430
  getHomeR92 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR93) -}
6f1ed6caebab290aa1ea86a041ee3beb
  getHomeR93 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("font-family"#) -}
3ac4f64ff42595bc48e91cfbb0d3e251
  getHomeR94 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR39
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR95
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
8ea9ef28db26a55b1eeaa5f4c0cd2136
  getHomeR95 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR96)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
2fd8d2e29ec1940bed68662023dd9924
  getHomeR96 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR97) -}
8fcc8f99d535053717cb273cdbaa2f8f
  getHomeR97 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("white"#) -}
cd1f657f76335dfd03c3dff38abf4b38
  getHomeR98 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR99)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
a465ce43c59b72028c3563122fc50e97
  getHomeR99 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR100) -}
952e374b37a34c6ee50d91c5b9e857fe
  getHomeR_d ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Strictness: m,
     Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Application.getHomeR_nt
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Internal.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fIsStringWidgetFor2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
6f185291e7d1adf10cdb30552c9021c5
  getHomeR_d1 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Strictness: m,
     Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Application.getHomeR_nt1
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Internal.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fIsStringWidgetFor2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
1b8b4478671db6b1f1c3aa5cc0df89bb
  getHomeR_d2 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Strictness: m,
     Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Application.getHomeR_nt2
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Internal.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fIsStringWidgetFor2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
3726c2980c863d4f69009ec8674b8554
  getHomeR_d3 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Strictness: m,
     Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Application.getHomeR_nt3
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Internal.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fIsStringWidgetFor2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
651ef376e48ad4108c93272755aa9c8e
  getHomeR_d4 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Strictness: m,
     Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Application.getHomeR_nt4
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Internal.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fIsStringWidgetFor2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
5e1fdcf4d061b9f6b92a3bdf162913c3
  getHomeR_d5 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Strictness: m,
     Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Application.getHomeR_nt5
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Internal.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fIsStringWidgetFor2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
898e8d8d77937e3219e2167887a9ee24
  getHomeR_ds ::
    Yesod.Core.Types.HandlerFor
      Foundation.App (GHC.Base.Maybe Data.ByteString.Internal.ByteString)
  {- Unfolding: (Yesod.Core.Handler.lookupSessionBS
                   @ (Yesod.Core.Types.HandlerFor Foundation.App)
                   (Yesod.Core.Class.Handler.$fMonadHandlerHandlerFor
                      @ Foundation.App)
                   Application.getHomeR206) -}
771a8fc7733c9e6092c093ab342e075d
  getHomeR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Application.getHomeR3
                   GHC.Tuple.()) -}
1b926e0f059b31f8fc04eaf20840f2ba
  getHomeR_eta1 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Application.getHomeR7
                   GHC.Tuple.()) -}
998f0b3b0cf04101b4adcf85a18aae59
  getHomeR_eta2 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Application.getHomeR11
                   GHC.Tuple.()) -}
c0f2b8361ab17c0d82f7333176e85044
  getHomeR_eta3 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Application.getHomeR15
                   GHC.Tuple.()) -}
7cb93dfb530dc54fb57a212e21334371
  getHomeR_eta4 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Application.getHomeR198
                   GHC.Tuple.()) -}
6a6641ecdad8f05360e2ced2339f36c2
  getHomeR_eta5 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Application.getHomeR202
                   GHC.Tuple.()) -}
2d4cac6ed4c267be4648603b456248b2
  getHomeR_m1 :: Yesod.Core.Types.WidgetFor Foundation.App ()
  {- Unfolding: (Yesod.Core.Widget.$fToWidgetHeadsite(->)1_$ctoWidget
                   @ (Yesod.Routes.Class.Route Foundation.App
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ Foundation.App
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ (Yesod.Routes.Class.Route Foundation.App
                         -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                         -> Data.Text.Internal.Text)
                      @ (Yesod.Routes.Class.Route Foundation.App
                         -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                         -> Data.Text.Internal.Text)
                      @~ <Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <Yesod.Routes.Class.Route
                                                             Foundation.App
                                                           -> [(Data.Text.Internal.Text,
                                                                Data.Text.Internal.Text)]
                                                           -> Data.Text.Internal.Text>_N <Yesod.Routes.Class.Route
                                                                                            Foundation.App
                                                                                          -> [(Data.Text.Internal.Text,
                                                                                               Data.Text.Internal.Text)]
                                                                                          -> Data.Text.Internal.Text>_N)
                   @ (Yesod.Core.Types.WidgetFor Foundation.App)
                   (Yesod.Core.Class.Handler.$fMonadWidgetWidgetFor @ Foundation.App)
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.App
                      @ Foundation.App
                      @~ <Foundation.App>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                              <Foundation.App>_N)) <Foundation.App>_N)
                   Application.getHomeR19) -}
7b9ed5bafa93157afcdad068584a74fc
  getHomeR_nt ::
    Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,A>m5,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Application.getHomeR_eta) -}
27f151bd89748ab393fe9f063ac73a1d
  getHomeR_nt1 ::
    Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,A>m5,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Application.getHomeR_eta1) -}
100f1a2e4335140bb4af0dbbb96793bc
  getHomeR_nt2 ::
    Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,A>m5,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Application.getHomeR_eta2) -}
9c068bd92b90b70a705c949a1eb34575
  getHomeR_nt3 ::
    Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,A>m5,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Application.getHomeR_eta3) -}
ae41556323bb2d8a8f9711b82b000b20
  getHomeR_nt4 ::
    Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,A>m5,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Application.getHomeR_eta4) -}
689fc14b4cea46190fc7b488c5adb7c0
  getHomeR_nt5 ::
    Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,A>m5,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Application.getHomeR_eta5) -}
a39ec60913c6c31eeba4c58bf663787d
  getLayoutAdmin :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2,
     Unfolding: InlineRule (0, True, True)
                Application.getLayoutAdmin1
                  `cast`
                ((<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                  ->_R Sym (GHC.Types.N:IO[0]
                                <Text.Blaze.Html.Html>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                                      <Foundation.App>_N
                                                                      <Text.Blaze.Html.Html>_R)) -}
d153ab111ac4d2b54d509b37934279fa
  getLayoutAdmin1 ::
    Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Text.Blaze.Internal.MarkupM () #)
  {- Arity: 2,
     Unfolding: (Foundation.$fYesodApp49
                   Application.getLayoutAdmin2
                     `cast`
                   ((<Yesod.Core.Types.WidgetData Foundation.App>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <()>_R)) ; Sym (Yesod.Core.Types.N:WidgetFor[0]
                                                       <Foundation.App>_N <()>_R))) -}
dd2debcdd33abc80b68033446a314790
  getLayoutAdmin10 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("> Produtos</h2>\n\
                 \<h2> <a id=\"prod\" href="#) -}
435b8177d8d7baa3c6b2a93a1f4f2f6c
  getLayoutAdmin11 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Application.getLayoutAdmin12) -}
bbe1df339dfcb7bfff8ada1e82e270d5
  getLayoutAdmin12 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Application.getLayoutAdmin13) -}
950080adc4839a9fef24ae90df72e2d0
  getLayoutAdmin13 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getLayoutAdmin14) -}
77bdd00efc82800950d37ec47254573c
  getLayoutAdmin14 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (">Login </a></li>\n\
                 \<li style=\"float:right\"> eae visitante </ul></li>\n\
                 \</ul>\n\
                 \<h1> RESTAURANTE RESTAURANTOSO</h1>\n\
                 \<h2> <a id=\"prod\" href="#) -}
072b189292e448b5c62428a72a466ee5
  getLayoutAdmin2 ::
    Yesod.Core.Types.WidgetData Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U,U,U(U,U,U,U,U,U,U,U,U),U,U)><S,U>,
     Unfolding: (\ (wd :: Yesod.Core.Types.WidgetData Foundation.App)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Application.getHomeR_m1
                         `cast`
                       (Yesod.Core.Types.N:WidgetFor[0] <Foundation.App>_N <()>_R)
                         wd)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case wd
                        `cast`
                      (Yesod.Core.Types.WidgetData
                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                   <Foundation.App>_N)))_R of wild { Yesod.Core.Types.WidgetData dt dt1 dt2 dt3 dt4 ->
                 case dt2 of wild1 { Yesod.Core.Types.RunHandlerEnv ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        ipv of ds11 { (#,#) ipv2 ipv3 ->
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv3
                        Application.getHomeR_d3
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x' { Yesod.Core.Types.GWData ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ipv10 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'
                        ipv2 of s2# { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        s2# of ds12 { (#,#) ipv11 ipv12 ->
                 let {
                   eta :: Data.Text.Internal.Text
                   = ds2
                       Foundation.LoginR
                         `cast`
                       (Sym (Foundation.D:R:RouteApp0[0]) ; (Yesod.Routes.Class.Route
                                                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                                                         <Foundation.App>_N)))_R)
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   eta1 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text eta
                 } in
                 let {
                   eta2 :: Text.Blaze.Html.Html
                   = Text.Blaze.Internal.Content @ () eta1 GHC.Tuple.()
                 } in
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv12
                        (Yesod.Core.Types.GWData
                           @ (Yesod.Routes.Class.Route Foundation.App)
                           (\ (ds13 :: Yesod.Routes.Class.Route Foundation.App
                                       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                       -> Data.Text.Internal.Text) ->
                            eta2)
                             `cast`
                           (Sym (Yesod.Core.Types.N:Body[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R))
                           (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                             `cast`
                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Script
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Script
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Stylesheet
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Stylesheet
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (Data.Map.Internal.Tip
                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Data.Text.Internal.Builder.Builder))
                           (GHC.Base.Nothing
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Text.Julius.Javascript))
                           (Yesod.Core.Types.$fIsStringWidgetFor2
                              @ (Yesod.Routes.Class.Route Foundation.App))
                             `cast`
                           (Sym (Yesod.Core.Types.N:Head[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R)))
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x'1 { Yesod.Core.Types.GWData ipv13 ipv14 ipv15 ipv16 ipv17 ipv18 ipv19 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'1
                        ipv11 of s2#1 { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        s2#1 of ds13 { (#,#) ipv20 ipv21 ->
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv21
                        Application.getLayoutAdmin_d2
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x'2 { Yesod.Core.Types.GWData ipv22 ipv23 ipv24 ipv25 ipv26 ipv27 ipv28 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'2
                        ipv20 of s2#2 { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        s2#2 of ds14 { (#,#) ipv29 ipv30 ->
                 let {
                   eta3 :: Data.Text.Internal.Text
                   = ds2
                       Foundation.ClienteR
                         `cast`
                       (Sym (Foundation.D:R:RouteApp0[0]) ; (Yesod.Routes.Class.Route
                                                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                                                         <Foundation.App>_N)))_R)
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   eta4 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text eta3
                 } in
                 let {
                   eta5 :: Text.Blaze.Html.Html
                   = Text.Blaze.Internal.Content @ () eta4 GHC.Tuple.()
                 } in
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv30
                        (Yesod.Core.Types.GWData
                           @ (Yesod.Routes.Class.Route Foundation.App)
                           (\ (ds15 :: Yesod.Routes.Class.Route Foundation.App
                                       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                       -> Data.Text.Internal.Text) ->
                            eta5)
                             `cast`
                           (Sym (Yesod.Core.Types.N:Body[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R))
                           (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                             `cast`
                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Script
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Script
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Stylesheet
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Stylesheet
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (Data.Map.Internal.Tip
                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Data.Text.Internal.Builder.Builder))
                           (GHC.Base.Nothing
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Text.Julius.Javascript))
                           (Yesod.Core.Types.$fIsStringWidgetFor2
                              @ (Yesod.Routes.Class.Route Foundation.App))
                             `cast`
                           (Sym (Yesod.Core.Types.N:Head[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R)))
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x'3 { Yesod.Core.Types.GWData ipv31 ipv32 ipv33 ipv34 ipv35 ipv36 ipv37 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'3
                        ipv29 of s2#3 { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        s2#3 of ds15 { (#,#) ipv38 ipv39 ->
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv39
                        Application.getLayoutAdmin_d1
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x'4 { Yesod.Core.Types.GWData ipv40 ipv41 ipv42 ipv43 ipv44 ipv45 ipv46 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'4
                        ipv38 of s2#4 { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        s2#4 of ds16 { (#,#) ipv47 ipv48 ->
                 let {
                   eta6 :: Data.Text.Internal.Text
                   = ds2
                       Foundation.ClienteR
                         `cast`
                       (Sym (Foundation.D:R:RouteApp0[0]) ; (Yesod.Routes.Class.Route
                                                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                                                         <Foundation.App>_N)))_R)
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   eta7 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text eta6
                 } in
                 let {
                   eta8 :: Text.Blaze.Html.Html
                   = Text.Blaze.Internal.Content @ () eta7 GHC.Tuple.()
                 } in
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv48
                        (Yesod.Core.Types.GWData
                           @ (Yesod.Routes.Class.Route Foundation.App)
                           (\ (ds17 :: Yesod.Routes.Class.Route Foundation.App
                                       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                       -> Data.Text.Internal.Text) ->
                            eta8)
                             `cast`
                           (Sym (Yesod.Core.Types.N:Body[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R))
                           (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                             `cast`
                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Script
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Script
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Stylesheet
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Stylesheet
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (Data.Map.Internal.Tip
                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Data.Text.Internal.Builder.Builder))
                           (GHC.Base.Nothing
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Text.Julius.Javascript))
                           (Yesod.Core.Types.$fIsStringWidgetFor2
                              @ (Yesod.Routes.Class.Route Foundation.App))
                             `cast`
                           (Sym (Yesod.Core.Types.N:Head[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R)))
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x'5 { Yesod.Core.Types.GWData ipv49 ipv50 ipv51 ipv52 ipv53 ipv54 ipv55 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'5
                        ipv47 of s2#5 { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        s2#5 of ds17 { (#,#) ipv56 ipv57 ->
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv57
                        Application.getLayoutAdmin_d
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x'6 { Yesod.Core.Types.GWData ipv58 ipv59 ipv60 ipv61 ipv62 ipv63 ipv64 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'6
                        ipv56 of s2#6 { DEFAULT ->
                 (# s2#6,
                    GHC.Tuple.() #) } } } } } } } } } } } } } } } } } } } } } } } }) -}
8784390044f32c2a08148c7a8fc6613a
  getLayoutAdmin3 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Application.getLayoutAdmin4) -}
34c39c726bb26bab02f0994f0c8598ff
  getLayoutAdmin4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Application.getLayoutAdmin5) -}
ac9a7e955496d134defd248585b273b1
  getLayoutAdmin5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getLayoutAdmin6) -}
9376793365174f47dcb1f2c9e6f8adc7
  getLayoutAdmin6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("> Pedidos</h2>\n"#) -}
43b3f639c0f4f19bd2caade1ab3c491d
  getLayoutAdmin7 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Application.getLayoutAdmin8) -}
bdea6e5d927e7a5bd1e22a665dacc511
  getLayoutAdmin8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Application.getLayoutAdmin9) -}
f7a268cd0edce4769fb74f32cbe01e98
  getLayoutAdmin9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getLayoutAdmin10) -}
e44e25ca6ac31b6ef9ec55b8959ec327
  getLayoutAdmin_d ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Strictness: m,
     Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Application.getLayoutAdmin_nt
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Internal.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fIsStringWidgetFor2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
a19af07d4d8e7119aeb7cf861785a5f2
  getLayoutAdmin_d1 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Strictness: m,
     Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Application.getLayoutAdmin_nt1
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Internal.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fIsStringWidgetFor2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
cc8a05744314807c10d560efefe24a51
  getLayoutAdmin_d2 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Strictness: m,
     Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Application.getLayoutAdmin_nt2
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Internal.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fIsStringWidgetFor2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
65100bdbe97e0afb82853462215bfa24
  getLayoutAdmin_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Application.getLayoutAdmin3
                   GHC.Tuple.()) -}
9ee22649cfa530e7e46605d0ded44a1b
  getLayoutAdmin_eta1 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Application.getLayoutAdmin7
                   GHC.Tuple.()) -}
91f46a6eeb7b42b3c91f688adac07de6
  getLayoutAdmin_eta2 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Application.getLayoutAdmin11
                   GHC.Tuple.()) -}
48d34478f1306d683bb6fca1930e0e10
  getLayoutAdmin_nt ::
    Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,A>m5,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Application.getLayoutAdmin_eta) -}
3ad2d398ed739c8e506554795adc4bfc
  getLayoutAdmin_nt1 ::
    Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,A>m5,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Application.getLayoutAdmin_eta1) -}
8acd806a9c747ebfd3518ec3523c7d41
  getLayoutAdmin_nt2 ::
    Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,A>m5,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Application.getLayoutAdmin_eta2) -}
acd118fe139ae1dc7b5fe55cdffa41f1
  getLayoutLogado ::
    Data.Text.Internal.Text -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 3,
     Strictness: <L,U><L,U(U,U(U,U,U,U,U,U,U,U,U),U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Application.getHomeR2
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R (<Yesod.Core.Types.HandlerData
                          Foundation.App Foundation.App>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Text.Blaze.Html.Html>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                                           <Foundation.App>_N
                                                                           <Text.Blaze.Html.Html>_R)) -}
1cdf4d92de5799dc6b91be01b1b5b7e6
  getLayoutVisitante :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2,
     Unfolding: InlineRule (0, True, True)
                Application.getLayoutVisitante1
                  `cast`
                ((<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                  ->_R Sym (GHC.Types.N:IO[0]
                                <Text.Blaze.Html.Html>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                                      <Foundation.App>_N
                                                                      <Text.Blaze.Html.Html>_R)) -}
41c7d5c5c875cd0d8e57cd7fa63283b6
  getLayoutVisitante1 ::
    Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Text.Blaze.Internal.MarkupM () #)
  {- Arity: 2,
     Unfolding: (Foundation.$fYesodApp49
                   Application.getHomeR197
                     `cast`
                   ((<Yesod.Core.Types.WidgetData Foundation.App>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <()>_R)) ; Sym (Yesod.Core.Types.N:WidgetFor[0]
                                                       <Foundation.App>_N <()>_R))) -}
instance [orphan] Yesod.Core.Class.Dispatch.YesodDispatch [Foundation.App]
  = Application.$fYesodDispatchApp
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

