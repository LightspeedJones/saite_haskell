
==================== FINAL INTERFACE ====================
2018-12-02 02:17:13.741257577 UTC

interface main:Application [orphan module] 8044
  interface hash: 8baae07a50e23d377c6b102cb362c978
  ABI hash: f3efd95a56e65391752394dbd35ec657
  export-list hash: 9a1c4302670016c0278a38d9037abecf
  orphan hash: bce5d011e560d2955a164787dfa9e4df
  flag hash: 4893e455fe1a95c8df846695f3209236
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: True
  where
exports:
  Application.getHomeR
  Application.getLayoutLogado
  Application.getLayoutVisitante
module dependencies: Foundation Handlers.Cliente Handlers.Login
                     Handlers.Produto
package dependencies: aeson-1.3.1.1 aeson-compat-0.3.9
                      ansi-terminal-0.8.2 appar-0.1.4 array-0.5.2.0 async-2.2.1
                      attoparsec-0.13.2.2 attoparsec-iso8601-1.0.1.0 auto-update-0.1.4
                      base-4.11.1.0 base-compat-0.10.5 base64-bytestring-1.0.0.1
                      basement-0.0.8 binary-0.8.5.1 blaze-builder-0.4.1.0
                      blaze-html-0.9.1.1 blaze-markup-0.8.2.2 bsb-http-chunked-0.0.0.4
                      byteable-0.1.1 byteorder-1.0.4 bytestring-0.10.8.2
                      case-insensitive-1.2.0.11 cereal-0.5.7.0 cipher-aes-0.2.11
                      clientsession-0.9.1.2 colour-2.3.4 conduit-1.3.1
                      conduit-extra-1.3.0 containers-0.5.11.0 cookie-0.4.4
                      cprng-aes-0.6.1 crypto-api-0.13.3 crypto-cipher-types-0.0.9
                      crypto-random-0.0.9 css-text-0.1.3.0 data-default-class-0.1.2.0
                      deepseq-1.4.3.0 directory-1.3.1.5 dlist-0.8.0.5 easy-file-0.2.2
                      email-validate-2.3.2.9 entropy-0.4.1.4 exceptions-0.10.0
                      fast-logger-2.4.11 filepath-1.4.2 ghc-boot-th-8.4.4
                      ghc-prim-0.5.2.0 hashable-1.2.7.0 haskell-src-exts-1.20.3
                      haskell-src-meta-0.8.0.3 http-api-data-0.3.8.1 http-date-0.0.8
                      http-types-0.12.2 http2-1.6.4 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.2 iproute-1.7.6 lifted-base-0.2.3.12
                      memory-0.14.18 monad-control-1.0.2.3 monad-logger-0.3.30
                      monad-loops-0.4.3 mono-traversable-1.0.9.0 mtl-2.2.2
                      network-2.6.3.6 network-byte-order-0.0.0.0 network-uri-2.6.1.0
                      old-locale-1.0.0.7 old-time-1.1.0.3 parsec-3.1.13.0
                      path-pieces-0.2.1 persistent-2.8.2 persistent-postgresql-2.8.2.0
                      persistent-template-2.5.4 postgresql-libpq-0.9.4.2
                      postgresql-simple-0.5.4.0 pretty-1.1.3.6 primitive-0.6.3.0
                      process-1.6.3.0 psqueues-0.2.7.0 random-1.1 resource-pool-0.2.3.2
                      resourcet-1.2.2 scientific-0.3.6.2 securemem-0.1.10
                      shakespeare-2.0.20 silently-1.2.5 simple-sendfile-0.2.27
                      skein-1.0.9.4 split-0.2.3.3 stm-2.4.5.1 stm-chans-3.0.0.4
                      streaming-commons-0.2.1.0 tagged-0.8.5 tagsoup-0.14.7
                      template-haskell-2.13.0.0 text-1.2.3.1 time-1.8.0.2
                      time-locale-compat-0.1.1.5 transformers-0.5.5.0
                      transformers-base-0.4.5.2 unix-2.7.2.2 unix-compat-0.5.1
                      unix-time-0.3.8 unliftio-0.2.8.1 unliftio-core-0.1.2.0
                      unordered-containers-0.2.9.0 utf8-string-1.0.1.1 uuid-types-1.0.3
                      vault-0.3.1.2 vector-0.12.0.1 vector-algorithms-0.7.0.4 wai-3.2.1.2
                      wai-extra-3.0.24.3 wai-logger-2.3.2 warp-3.2.25 word8-0.1.3
                      xss-sanitize-0.3.6 yesod-1.6.0 yesod-core-1.6.8.1 yesod-form-1.6.3
                      yesod-persistent-1.6.0.1 zlib-0.6.2
orphans: persistent-template-2.5.4:Database.Persist.TH
         aeson-compat-0.3.9:Data.Aeson.Compat colour-2.3.4:Data.Colour
         crypto-api-0.13.3:Crypto.Classes
         basement-0.0.8:Basement.UArray.Base basement-0.0.8:Basement.Block
         network-2.6.3.6:Network.Socket
         haskell-src-exts-1.20.3:Language.Haskell.Exts.Parser
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistUnique
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistStore
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         hashable-1.2.7.0:Data.Hashable.Generic
         unix-time-0.3.8:Data.UnixTime.Diff stm-2.4.5.1:Control.Monad.STM
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.1:Data.Text.Lazy text-1.2.3.1:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         basement-0.0.8:Basement.Block.Base basement-0.0.8:Basement.Monad
                         basement-0.0.8:Basement.MutableBuilder basement-0.0.8:Basement.Nat
                         basement-0.0.8:Basement.NonEmpty
                         basement-0.0.8:Basement.Numerical.Subtractive
                         basement-0.0.8:Basement.PrimType basement-0.0.8:Basement.String
                         basement-0.0.8:Basement.String.Encoding.ASCII7
                         basement-0.0.8:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.8:Basement.String.Encoding.UTF16
                         basement-0.0.8:Basement.String.Encoding.UTF32
                         basement-0.0.8:Basement.Types.OffsetSize
                         basement-0.0.8:Basement.UArray.Base
                         basement-0.0.8:Basement.UTF8.Base
                         conduit-1.3.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1:Data.Conduit.Internal.Pipe
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.5:Data.DList email-validate-2.3.2.9:Text.Email.Parser
                         ghc-boot-th-8.4.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.4:GHC.LanguageExtensions.Type
                         haskell-src-exts-1.20.3:Language.Haskell.Exts.SrcLoc
                         haskell-src-exts-1.20.3:Language.Haskell.Exts.Syntax
                         iproute-1.7.6:Data.IP.Addr iproute-1.7.6:Data.IP.Range
                         main:Foundation monad-control-1.0.2.3:Control.Monad.Trans.Control
                         monad-logger-0.3.30:Control.Monad.Logger
                         mono-traversable-1.0.9.0:Data.MonoTraversable
                         mono-traversable-1.0.9.0:Data.NonNull
                         mono-traversable-1.0.9.0:Data.Sequences
                         network-uri-2.6.1.0:Network.URI
                         persistent-2.8.2:Database.Persist.Class.PersistConfig
                         persistent-2.8.2:Database.Persist.Class.PersistEntity
                         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.8.2:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.8.2.0:Database.Persist.Postgresql
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.20:Text.Internal.Css
                         shakespeare-2.0.20:Text.Shakespeare tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
                         yesod-core-1.6.8.1:Yesod.Core.Class.Handler
                         yesod-core-1.6.8.1:Yesod.Core.Internal.LiteApp
                         yesod-core-1.6.8.1:Yesod.Core.Types
                         zlib-0.6.2:Codec.Compression.Zlib.Stream
import  -/  base-4.11.1.0:Control.Applicative 55d9b3a7491623b0362290e162d67308
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  blaze-html-0.9.1.1:Text.Blaze.Html fdd818245cad1bbfcedd87b21c62946f
import  -/  blaze-markup-0.8.2.2:Text.Blaze.Internal 7539c43623397f23e7aba6515d74b4b1
import  -/  Foundation 759822151ca21f88554c5d415722ac95
  exports: bf35f3a755e4679019142bf94c9bfdc7
  App fad4d7498437d0835053b4479d34e8e2
  CardapioR 79a69a1a4e990bdd225ed0e5ebab70bd
  ClienteR de0544d122933f9a09ef776125f76cda
  Handler 75ae7b29b0bc8728adc2f28c19257c8c
  HomeR e02ee93d63494a36efbb06c3c46b9774
  LoginR 73c262bba89870ff65909bd48a395702
  LogoutR 2e7c434db91d939b51683981f88daa19
  resourcesApp 70ddf22613765e2f7bb68e3b4d6122b4
import  -/  Handlers.Cliente 6e137413fb5dd8bd17e672d1fdb16d65
  exports: 3c2e56b0f2bb11d45c4b9e894313682f
  getClienteR 53b4f783afa0cceb5659d1d44b35fb5d
  postClienteR 875d215c7ab2be5ccb86154479f3efaa
import  -/  Handlers.Login e6eea3af2ff568e8dab478ba0e6171e0
  exports: bc54a4c0f9101cd541fb9f399985c8f1
  getLoginR b01694190d07b16e0eb947614f6955d6
  getLogoutR 28bc76c742e55f1d598dcb6d9d102c3f
  postLoginR 710c62db10d9e0a57d2654a77e9d6c80
import  -/  Handlers.Produto 61a08b937e823b5c84afaecb82ebbe44
  exports: e2479415d7c33ebd89529d66ec207d8a
  getCardapioR af65c9dc5da9558d46f18258088021c9
import  -/  monad-logger-0.3.30:Control.Monad.Logger 8543a8ea2bc3183d80bcc2e19c1fd67d
import  -/  shakespeare-2.0.20:Text.Internal.Css 17c2e6de13b11d0d8e75d34fa99c9d4a
import  -/  shakespeare-2.0.20:Text.Lucius b430c66fd9a3ba305bfbf21371e6ecf1
import  -/  text-1.2.3.1:Data.Text cb97f965b33763b648b5393c0517cf50
import  -/  text-1.2.3.1:Data.Text.Internal 4893d0339f20e05978e1af2720305fa2
import  -/  wai-3.2.1.2:Network.Wai.Internal 7e011f5addc4b26cba9288193a3561ff
import  -/  yesod-1.6.0:Yesod 12dd731b07dae980742b80692ae0952f
import  -/  yesod-core-1.6.8.1:Yesod.Core.Class.Dispatch 580729c09df770bee163f3e7fe09b3e0
import  -/  yesod-core-1.6.8.1:Yesod.Core.Class.Yesod b52f2d36e084040c2f01914b6a7090fc
import  -/  yesod-core-1.6.8.1:Yesod.Core.Handler e612adc064f65691fdfb53152b949d63
import  -/  yesod-core-1.6.8.1:Yesod.Core.Internal.Run 427cd485f4047287637b02d5bcd0fd9a
import  -/  yesod-core-1.6.8.1:Yesod.Core.Internal.TH 3c4a92783209f9d5e38919d2f76db0a7
import  -/  yesod-core-1.6.8.1:Yesod.Core.Widget 876e385706692ff3cccbda9bd1bf970b
addDependentFile "templates/home.lucius" 50c55426b3f43df268a12b7dc4402d0a
addDependentFile "templates/home.lucius" 50c55426b3f43df268a12b7dc4402d0a
65866027817cb86c52a20d85a2dd92eb
  $fYesodDispatchApp ::
    Yesod.Core.Class.Dispatch.YesodDispatch Foundation.App
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fYesodApp
                  Application.$fYesodDispatchApp_$cyesodDispatch -}
8a4bce037bcb6ccd89118dba502c494f
  $fYesodDispatchApp_$cyesodDispatch ::
    Yesod.Core.Types.YesodRunnerEnv Foundation.App
    -> Network.Wai.Application
  {- Arity: 2,
     Strictness: <L,U(U,U,U,U,C(U(U,1*U(U,U,U))))><S(LLLLLLLSLLLLLLLL),1*U(U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
f139dc24a34d3bc4fcec2509e05b1036
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Application.$trModule3
                   Application.$trModule1) -}
05ffa4fd2fbb085cae04ea7e58c78394
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Application.$trModule2) -}
15ec12f3884c1c5f1cf36b0ba6365f42
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Application"#) -}
bf6d4784a169d182e0d8c34c07f9a5aa
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Application.$trModule4) -}
a7191f8af22e18a07d2980fdaea72188
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
ea63157f4612b679a52d240a63041ab6
  getHomeR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U(U,U(U,U,U,U,U,U,U,U,U),U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Application.getHomeR1
                  `cast`
                ((<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                  ->_R Sym (GHC.Types.N:IO[0]
                                <Text.Blaze.Html.Html>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                                      <Foundation.App>_N
                                                                      <Text.Blaze.Html.Html>_R)) -}
04c154f313d9f7b7fb5ac2f890ef264d
  getHomeR1 ::
    Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U(U,U(U,U,U,U,U,U,U,U,U),U,U)><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App Foundation.App)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Application.getHomeR_ds
                         `cast`
                       (Yesod.Core.Types.N:HandlerFor[0]
                            <Foundation.App>_N
                            <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_R)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> Foundation.$fYesodApp44
                        Application.getHomeR185
                          `cast`
                        ((<Yesod.Core.Types.WidgetData Foundation.App>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <()>_R)) ; Sym (Yesod.Core.Types.N:WidgetFor[0]
                                                            <Foundation.App>_N <()>_R))
                        r
                        ipv
                   GHC.Base.Just a1
                   -> Application.getHomeR2
                        (case a1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                         Data.Text.Encoding.$wdecodeUtf8With
                           Data.Text.Encoding.Error.lenientDecode
                           ww1
                           ww2
                           ww3
                           ww4 })
                        r
                        ipv } }) -}
0b89fb03794a7be1976f02f3bc9ba9c1
  getHomeR10 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" </ul></li>\n\
                 \</ul>\n\
                 \<h1> RESTAURANTE RESTAURANTOSO</h1>\n\
                 \<h2> <a id=\"card\" href="#) -}
c173d06d2833715554a20fb86041e062
  getHomeR100 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR101)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
f7577f996cb726e831aa635c986fbd9e
  getHomeR101 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR102) -}
8cd97158f8b14367e0fdbd73af744686
  getHomeR102 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("text-decoration"#) -}
5918a07454fb2e2c8b978f1adbb627e8
  getHomeR103 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR107
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR104
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
3f9d14c4696992eced4f690dc12bf317
  getHomeR104 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR105)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
290243292f31c8854b21977e7ed16f57
  getHomeR105 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR106) -}
597b623ffdf76a296d17821c8ca63141
  getHomeR106 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("14px 16px"#) -}
e919c814080e41d1eb21a0d4d961cee9
  getHomeR107 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR108)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
be8d5ab920ad48e0046af3bb76947304
  getHomeR108 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR109) -}
3b10712affd81a0efe3aa2b5ffd12779
  getHomeR109 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("padding"#) -}
0cc23466c8b6f947ca0d619be9a4f302
  getHomeR11 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Application.getHomeR12) -}
96f3097f97dcb31adeb6012cb71579f2
  getHomeR110 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR114
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR111
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
a4b08dc18eeee7974252a1956ebf4d42
  getHomeR111 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR112)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
73155cc1bf43815374a867ad6628fa41
  getHomeR112 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR113) -}
dfb1e436e1036fce657c19e838e205a2
  getHomeR113 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("center"#) -}
509dcd2523cd6008385aa56c50ad3758
  getHomeR114 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR115)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
fb835f7c8c49070064ce03eecd33e001
  getHomeR115 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR116) -}
a67e44f42225516ec71d7821743432ae
  getHomeR116 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("text-align"#) -}
a556f516f29361c6f496bd4eedb9a715
  getHomeR117 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR121
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR118
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
930d7630a78382257dcc5fecc50d5614
  getHomeR118 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR119)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
bb812070a2f5d3eba17af198404d277b
  getHomeR119 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR120) -}
b1815d976f07e7bfd491aa0ca1488e71
  getHomeR12 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Application.getHomeR13) -}
6656cc25a84d0cce392577ec9e46b4c4
  getHomeR120 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("block"#) -}
052f96ffb5805ed0bd32adcaa4ea288b
  getHomeR121 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR122)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
dd7a8c907420fe8f6f19b43b58ca1aa6
  getHomeR122 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR123) -}
c2278efad75569e4b2306bb0526eef22
  getHomeR123 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("display"#) -}
a5533e4ffb9bf8908024080b2ddeacde
  getHomeR124 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR125)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
d855a222ea674a4168a2ec03d4c4740e
  getHomeR125 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR126) -}
16bd4bbd1e301a54f3a7a90a90815152
  getHomeR126 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("li"#) -}
832c5b3fb4916d9e1f5e6a66f004228e
  getHomeR127 ::
    Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR128) -}
af7db19e16007425017d81c805f5150a
  getHomeR128 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR124
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR129
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
8f02b69bfad1e6b8b7a0b99280569add
  getHomeR129 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR130
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
4635cb89efce9f0a6665bc88fcedc938
  getHomeR13 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR14) -}
ec33cff71ab644c501fc2ebd4f3c96ba
  getHomeR130 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR134
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR131
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
acb33ec2ca49457c6f962b7de8724fc6
  getHomeR131 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR132)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
40fceef2c367be46ff0edea7b9813c80
  getHomeR132 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR133) -}
9e5c576f8dcee28b30e4907f5f480e2d
  getHomeR133 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("left"#) -}
5e602af5ac6968a11bb0b7f19256614e
  getHomeR134 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR135)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
addf040f2be3fc044fa68f80e955bdce
  getHomeR135 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR136) -}
611d66288e95e886118675c4ce55ffc0
  getHomeR136 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("float"#) -}
0a897aa6d1f479a7da926c811a891453
  getHomeR137 ::
    Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR138) -}
09ec8695e2a59665e846b8413d7199c2
  getHomeR138 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR167
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR139
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
672cdd15f1a9495138ca4e089146c973
  getHomeR139 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR163
                   Application.getHomeR140) -}
e70290619951d4634e1a109b5dc05a84
  getHomeR14 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (">Sair </a></li>\n\
                 \<li style=\"float:right\"> eae "#) -}
113611179d364768c392a5603f1b4eeb
  getHomeR140 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR159
                   Application.getHomeR141) -}
30616a0f1452f46df7e9b0265c5610bc
  getHomeR141 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR155
                   Application.getHomeR142) -}
18f26a4e6eb565c27c265067df51e94d
  getHomeR142 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR148
                   Application.getHomeR143) -}
7744fe801ed1a3b26150ee5c8f0d3aab
  getHomeR143 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR144
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
4a5a0dda6e2f579d9c7d516946c90b9b
  getHomeR144 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR55
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR145
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
69288845dadebabada2f9c24cd4a53be
  getHomeR145 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR146)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
5b1f28e61bc6d0a2066c90b5af38c74e
  getHomeR146 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR147) -}
fb8127c7a6069925463628f7534129c6
  getHomeR147 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#333"#) -}
4b5d65fed27ed8cb8b76cd193050783d
  getHomeR148 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR152
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR149
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
7e386da02acce95f228109b644a75b7c
  getHomeR149 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR150)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
7b340b13fa1d1fcc6fa6de3393b7e2b4
  getHomeR15 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Application.getHomeR16) -}
13ed04cd5ec7e0d5beb3e0bf7f17565a
  getHomeR150 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR151) -}
6fe59f9b9064b82eb71651773839ff77
  getHomeR151 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("hidden"#) -}
158a0049002f9fc4cc6d32f5cc5139dc
  getHomeR152 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR153)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
b73aa1ef7d18d4f347976e739b9339ec
  getHomeR153 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR154) -}
47f44c494e1a86c98320ba7361149e8c
  getHomeR154 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("overflow"#) -}
20b289ee2f94941b6b526154d57d5487
  getHomeR155 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR107
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR156
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
1d6e43cf69981d41730feca93796c4fc
  getHomeR156 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR157)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
cd2d5bf279faa047cdd2aaa666022f76
  getHomeR157 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR158) -}
2386f66bf56042397c39cf68aa33c190
  getHomeR158 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("0"#) -}
c6121d11766584dec5af6bab0768a847
  getHomeR159 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR160
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR156
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
4bc644ba8a06a36ade7be229b665af51
  getHomeR16 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Application.getHomeR17) -}
dc584b47fd47a324287d22d6d4ddf2a7
  getHomeR160 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR161)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
0659f18bfc18549bd358ce0b7db06842
  getHomeR161 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR162) -}
17d5050deeea2aa8021ac015862261fa
  getHomeR162 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("margin"#) -}
3e50cb7c0a04dc7ed84bad14c6819e33
  getHomeR163 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR164
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR97
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
f0fbc521662a762541cb4ad34213a8ce
  getHomeR164 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR165)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
4b0b7fd3ce3992fc07b727de6c559540
  getHomeR165 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR166) -}
91714790d722bf913f14798f6fb0a55f
  getHomeR166 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("list-style-type"#) -}
ffad525c8873ad4b6f56944037188369
  getHomeR167 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR168)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
4b9d5ec4703264273415130809327384
  getHomeR168 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR169) -}
dfb1b9c8e9f5067d59877f62753e686f
  getHomeR169 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ul"#) -}
106a705b2fd21f056ab720bba370c5d9
  getHomeR17 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR18) -}
691dced420ae702324c62e8a43a8c082
  getHomeR170 ::
    Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR171) -}
3170931e9264d65fb812ad435f633485
  getHomeR171 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR182
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR172
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
2ce04d543e2edbcdb56059a67bbe243c
  getHomeR172 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR175
                   Application.getHomeR173) -}
71cfe8d68db2a0ffb4f726159e90e6b3
  getHomeR173 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR75
                   Application.getHomeR174) -}
6f1e9b44861e23834044631f5f141643
  getHomeR174 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR110
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
dd9b4a41c35e7439ee0b031163af850a
  getHomeR175 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR179
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR176
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
07f2935cc00f1fe60b1082e06e2e6139
  getHomeR176 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR177)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
5cbeb552f737ca42dca864c5339678ac
  getHomeR177 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR178) -}
da564fc9a25ec2743ce6f9b84ab4c1bc
  getHomeR178 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("30px"#) -}
72435f7c121bc4f76bba80a92e7471e0
  getHomeR179 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR180)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
b3331fce04574649d22b6b238de02861
  getHomeR18 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("<ul><li style=\"float:right\"> <a href="#) -}
9952b0394c60a42f6e8017af53708490
  getHomeR180 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR181) -}
89b9257324f578aa953c5f0b43485f89
  getHomeR181 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("font-size"#) -}
7805da84781965d9370949c5b46cd401
  getHomeR182 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR183)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
eaaea2cab71aab01da9385b2f5df04a9
  getHomeR183 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR184) -}
a86055cab16abad0265c6d9c306159d2
  getHomeR184 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("h1"#) -}
a0efeb268d8ab8fbccdc9452f51d80e9
  getHomeR185 ::
    Yesod.Core.Types.WidgetData Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U,U,U(U,U,U,U,U,U,U,U,U),U,U)><S,U>,
     Unfolding: (\ (wd :: Yesod.Core.Types.WidgetData Foundation.App)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Application.getHomeR_m1
                         `cast`
                       (Yesod.Core.Types.N:WidgetFor[0] <Foundation.App>_N <()>_R)
                         wd)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case wd
                        `cast`
                      (Yesod.Core.Types.WidgetData
                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                   <Foundation.App>_N)))_R of wild { Yesod.Core.Types.WidgetData dt dt1 dt2 dt3 dt4 ->
                 case dt2 of wild1 { Yesod.Core.Types.RunHandlerEnv ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        ipv of ds11 { (#,#) ipv2 ipv3 ->
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv3
                        Application.getHomeR_d3
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x' { Yesod.Core.Types.GWData ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ipv10 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'
                        ipv2 of s2# { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        s2# of ds12 { (#,#) ipv11 ipv12 ->
                 let {
                   eta :: Data.Text.Internal.Text
                   = ds2
                       Foundation.LoginR
                         `cast`
                       (Sym (Foundation.D:R:RouteApp0[0]) ; (Yesod.Routes.Class.Route
                                                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                                                         <Foundation.App>_N)))_R)
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   eta1 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text eta
                 } in
                 let {
                   eta2 :: Text.Blaze.Html.Html
                   = Text.Blaze.Internal.Content @ () eta1 GHC.Tuple.()
                 } in
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv12
                        (Yesod.Core.Types.GWData
                           @ (Yesod.Routes.Class.Route Foundation.App)
                           (\ (ds13 :: Yesod.Routes.Class.Route Foundation.App
                                       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                       -> Data.Text.Internal.Text) ->
                            eta2)
                             `cast`
                           (Sym (Yesod.Core.Types.N:Body[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R))
                           (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                             `cast`
                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Script
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Script
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Stylesheet
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Stylesheet
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (Data.Map.Internal.Tip
                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Data.Text.Internal.Builder.Builder))
                           (GHC.Base.Nothing
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Text.Julius.Javascript))
                           (Yesod.Core.Types.$fIsStringWidgetFor2
                              @ (Yesod.Routes.Class.Route Foundation.App))
                             `cast`
                           (Sym (Yesod.Core.Types.N:Head[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R)))
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x'1 { Yesod.Core.Types.GWData ipv13 ipv14 ipv15 ipv16 ipv17 ipv18 ipv19 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'1
                        ipv11 of s2#1 { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        s2#1 of ds13 { (#,#) ipv20 ipv21 ->
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv21
                        Application.getHomeR_d5
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x'2 { Yesod.Core.Types.GWData ipv22 ipv23 ipv24 ipv25 ipv26 ipv27 ipv28 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'2
                        ipv20 of s2#2 { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        s2#2 of ds14 { (#,#) ipv29 ipv30 ->
                 let {
                   eta3 :: Data.Text.Internal.Text
                   = ds2
                       Foundation.ClienteR
                         `cast`
                       (Sym (Foundation.D:R:RouteApp0[0]) ; (Yesod.Routes.Class.Route
                                                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                                                         <Foundation.App>_N)))_R)
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   eta4 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text eta3
                 } in
                 let {
                   eta5 :: Text.Blaze.Html.Html
                   = Text.Blaze.Internal.Content @ () eta4 GHC.Tuple.()
                 } in
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv30
                        (Yesod.Core.Types.GWData
                           @ (Yesod.Routes.Class.Route Foundation.App)
                           (\ (ds15 :: Yesod.Routes.Class.Route Foundation.App
                                       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                       -> Data.Text.Internal.Text) ->
                            eta5)
                             `cast`
                           (Sym (Yesod.Core.Types.N:Body[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R))
                           (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                             `cast`
                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Script
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Script
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Stylesheet
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Stylesheet
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (Data.Map.Internal.Tip
                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Data.Text.Internal.Builder.Builder))
                           (GHC.Base.Nothing
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Text.Julius.Javascript))
                           (Yesod.Core.Types.$fIsStringWidgetFor2
                              @ (Yesod.Routes.Class.Route Foundation.App))
                             `cast`
                           (Sym (Yesod.Core.Types.N:Head[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R)))
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x'3 { Yesod.Core.Types.GWData ipv31 ipv32 ipv33 ipv34 ipv35 ipv36 ipv37 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'3
                        ipv29 of s2#3 { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        s2#3 of ds15 { (#,#) ipv38 ipv39 ->
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv39
                        Application.getHomeR_d4
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x'4 { Yesod.Core.Types.GWData ipv40 ipv41 ipv42 ipv43 ipv44 ipv45 ipv46 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        dt
                        x'4
                        ipv38 of s2#4 { DEFAULT ->
                 (# s2#4, GHC.Tuple.() #) } } } } } } } } } } } } } } } } } }) -}
f8d272538a765ad7faf3ac3012f3ccb0
  getHomeR186 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Application.getHomeR187) -}
7e9f54b8ede3b5a4d6ca91de3d5ae567
  getHomeR187 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Application.getHomeR188) -}
8c11dac2c4a77f95e1a5cf64e785a648
  getHomeR188 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR189) -}
6883544ea1fb1c9ef10b240ffb6b0d26
  getHomeR189 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("> Fa\\195\\167a seu cadastro!</h2>\n"#) -}
1c88bb7b78835d536829f24809935119
  getHomeR19 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Internal.Css.Css
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: (\ (_render :: Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text) ->
                 Application.getHomeR20) -}
e3bc75d4ba695a87e33ea1fcb4b66d7c
  getHomeR190 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Application.getHomeR191) -}
b016e25efa529f3d7a6d8f5999359fb3
  getHomeR191 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Application.getHomeR192) -}
8f309837e691cac43c519ef27bf0852b
  getHomeR192 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR193) -}
bf2720f8152a23b0eeea9ba047055f7c
  getHomeR193 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (">Login </a></li>\n\
                 \<li style=\"float:right\"> eae visitante </ul></li>\n\
                 \</ul>\n\
                 \<h1> RESTAURANTE RESTAURANTOSO</h1>\n\
                 \<h2> <a id=\"cadastro\" href="#) -}
2d291b43e3d48c4e668937a735705121
  getHomeR194 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR195) -}
8f6f938cf0a5e780b8c9e28f3e2e5007
  getHomeR195 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_NOME"#) -}
29899b6f9541f97ec1127d2804fcf773
  getHomeR2 ::
    Data.Text.Internal.Text
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Text.Blaze.Internal.MarkupM () #)
  {- Arity: 3,
     Strictness: <L,U><L,U(U,U(U,U,U,U,U,U,U,U,U),U,U)><S,U>,
     Unfolding: (\ (x :: Data.Text.Internal.Text)
                   (eta :: Yesod.Core.Types.HandlerData Foundation.App Foundation.App)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 let {
                   eta2 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text x
                 } in
                 let {
                   eta3 :: Text.Blaze.Html.Html
                   = Text.Blaze.Internal.Content @ () eta2 GHC.Tuple.()
                 } in
                 Foundation.$fYesodApp44
                   (\ (wd :: Yesod.Core.Types.WidgetData Foundation.App)[OneShot]
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case (Application.getHomeR_m1
                            `cast`
                          (Yesod.Core.Types.N:WidgetFor[0] <Foundation.App>_N <()>_R)
                            wd)
                           `cast`
                         (GHC.Types.N:IO[0] <()>_R)
                           s of ds1 { (#,#) ipv ipv1 ->
                    case wd
                           `cast`
                         (Yesod.Core.Types.WidgetData
                            (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                      <Foundation.App>_N)))_R of wild { Yesod.Core.Types.WidgetData dt dt1 dt2 dt3 dt4 ->
                    case dt2 of wild1 { Yesod.Core.Types.RunHandlerEnv ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           ipv of ds11 { (#,#) ipv2 ipv3 ->
                    case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                           @ (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App)))
                           ipv3
                           Application.getHomeR_d3
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R of x' { Yesod.Core.Types.GWData ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ipv10 ->
                    case GHC.Prim.writeMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           x'
                           ipv2 of s2# { DEFAULT ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           s2# of ds12 { (#,#) ipv11 ipv12 ->
                    let {
                      eta4 :: Data.Text.Internal.Text
                      = ds2
                          Foundation.LogoutR
                            `cast`
                          (Sym (Foundation.D:R:RouteApp0[0]) ; (Yesod.Routes.Class.Route
                                                                  (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                                                            <Foundation.App>_N)))_R)
                          (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                    } in
                    let {
                      eta5 :: Text.Blaze.Internal.ChoiceString
                      = Text.Blaze.Internal.Text eta4
                    } in
                    let {
                      eta6 :: Text.Blaze.Html.Html
                      = Text.Blaze.Internal.Content @ () eta5 GHC.Tuple.()
                    } in
                    case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                           @ (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App)))
                           ipv12
                           (Yesod.Core.Types.GWData
                              @ (Yesod.Routes.Class.Route Foundation.App)
                              (\ (ds13 :: Yesod.Routes.Class.Route Foundation.App
                                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                          -> Data.Text.Internal.Text) ->
                               eta6)
                                `cast`
                              (Sym (Yesod.Core.Types.N:Body[0]
                                        <Yesod.Routes.Class.Route Foundation.App>_R))
                              (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                `cast`
                              (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                              (GHC.Base.id
                                 @ [Yesod.Core.Types.Script
                                      (Yesod.Routes.Class.Route Foundation.App)])
                                `cast`
                              (Sym (Yesod.Core.Types.N:UniqueList[0]
                                        <Yesod.Core.Types.Script
                                           (Yesod.Routes.Class.Route Foundation.App)>_R))
                              (GHC.Base.id
                                 @ [Yesod.Core.Types.Stylesheet
                                      (Yesod.Routes.Class.Route Foundation.App)])
                                `cast`
                              (Sym (Yesod.Core.Types.N:UniqueList[0]
                                        <Yesod.Core.Types.Stylesheet
                                           (Yesod.Routes.Class.Route Foundation.App)>_R))
                              (Data.Map.Internal.Tip
                                 @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                 @ ((Yesod.Routes.Class.Route Foundation.App
                                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                     -> Data.Text.Internal.Text)
                                    -> Data.Text.Internal.Builder.Builder))
                              (GHC.Base.Nothing
                                 @ ((Yesod.Routes.Class.Route Foundation.App
                                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                     -> Data.Text.Internal.Text)
                                    -> Text.Julius.Javascript))
                              (Yesod.Core.Types.$fIsStringWidgetFor2
                                 @ (Yesod.Routes.Class.Route Foundation.App))
                                `cast`
                              (Sym (Yesod.Core.Types.N:Head[0]
                                        <Yesod.Routes.Class.Route Foundation.App>_R)))
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R of x'1 { Yesod.Core.Types.GWData ipv13 ipv14 ipv15 ipv16 ipv17 ipv18 ipv19 ->
                    case GHC.Prim.writeMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           x'1
                           ipv11 of s2#1 { DEFAULT ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           s2#1 of ds13 { (#,#) ipv20 ipv21 ->
                    case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                           @ (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App)))
                           ipv21
                           Application.getHomeR_d2
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R of x'2 { Yesod.Core.Types.GWData ipv22 ipv23 ipv24 ipv25 ipv26 ipv27 ipv28 ->
                    case GHC.Prim.writeMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           x'2
                           ipv20 of s2#2 { DEFAULT ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           s2#2 of ds14 { (#,#) ipv29 ipv30 ->
                    case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                           @ (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App)))
                           ipv30
                           (Yesod.Core.Types.GWData
                              @ (Yesod.Routes.Class.Route Foundation.App)
                              (\ (ds15 :: Yesod.Routes.Class.Route Foundation.App
                                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                          -> Data.Text.Internal.Text) ->
                               eta3)
                                `cast`
                              (Sym (Yesod.Core.Types.N:Body[0]
                                        <Yesod.Routes.Class.Route Foundation.App>_R))
                              (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                `cast`
                              (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                              (GHC.Base.id
                                 @ [Yesod.Core.Types.Script
                                      (Yesod.Routes.Class.Route Foundation.App)])
                                `cast`
                              (Sym (Yesod.Core.Types.N:UniqueList[0]
                                        <Yesod.Core.Types.Script
                                           (Yesod.Routes.Class.Route Foundation.App)>_R))
                              (GHC.Base.id
                                 @ [Yesod.Core.Types.Stylesheet
                                      (Yesod.Routes.Class.Route Foundation.App)])
                                `cast`
                              (Sym (Yesod.Core.Types.N:UniqueList[0]
                                        <Yesod.Core.Types.Stylesheet
                                           (Yesod.Routes.Class.Route Foundation.App)>_R))
                              (Data.Map.Internal.Tip
                                 @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                 @ ((Yesod.Routes.Class.Route Foundation.App
                                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                     -> Data.Text.Internal.Text)
                                    -> Data.Text.Internal.Builder.Builder))
                              (GHC.Base.Nothing
                                 @ ((Yesod.Routes.Class.Route Foundation.App
                                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                     -> Data.Text.Internal.Text)
                                    -> Text.Julius.Javascript))
                              (Yesod.Core.Types.$fIsStringWidgetFor2
                                 @ (Yesod.Routes.Class.Route Foundation.App))
                                `cast`
                              (Sym (Yesod.Core.Types.N:Head[0]
                                        <Yesod.Routes.Class.Route Foundation.App>_R)))
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R of x'3 { Yesod.Core.Types.GWData ipv31 ipv32 ipv33 ipv34 ipv35 ipv36 ipv37 ->
                    case GHC.Prim.writeMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           x'3
                           ipv29 of s2#3 { DEFAULT ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           s2#3 of ds15 { (#,#) ipv38 ipv39 ->
                    case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                           @ (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App)))
                           ipv39
                           Application.getHomeR_d1
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R of x'4 { Yesod.Core.Types.GWData ipv40 ipv41 ipv42 ipv43 ipv44 ipv45 ipv46 ->
                    case GHC.Prim.writeMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           x'4
                           ipv38 of s2#4 { DEFAULT ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           s2#4 of ds16 { (#,#) ipv47 ipv48 ->
                    let {
                      eta7 :: Data.Text.Internal.Text
                      = ds2
                          Foundation.CardapioR
                            `cast`
                          (Sym (Foundation.D:R:RouteApp0[0]) ; (Yesod.Routes.Class.Route
                                                                  (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                                                            <Foundation.App>_N)))_R)
                          (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                    } in
                    let {
                      eta8 :: Text.Blaze.Internal.ChoiceString
                      = Text.Blaze.Internal.Text eta7
                    } in
                    let {
                      eta9 :: Text.Blaze.Html.Html
                      = Text.Blaze.Internal.Content @ () eta8 GHC.Tuple.()
                    } in
                    case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                           @ (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App)))
                           ipv48
                           (Yesod.Core.Types.GWData
                              @ (Yesod.Routes.Class.Route Foundation.App)
                              (\ (ds17 :: Yesod.Routes.Class.Route Foundation.App
                                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                          -> Data.Text.Internal.Text) ->
                               eta9)
                                `cast`
                              (Sym (Yesod.Core.Types.N:Body[0]
                                        <Yesod.Routes.Class.Route Foundation.App>_R))
                              (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                `cast`
                              (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                              (GHC.Base.id
                                 @ [Yesod.Core.Types.Script
                                      (Yesod.Routes.Class.Route Foundation.App)])
                                `cast`
                              (Sym (Yesod.Core.Types.N:UniqueList[0]
                                        <Yesod.Core.Types.Script
                                           (Yesod.Routes.Class.Route Foundation.App)>_R))
                              (GHC.Base.id
                                 @ [Yesod.Core.Types.Stylesheet
                                      (Yesod.Routes.Class.Route Foundation.App)])
                                `cast`
                              (Sym (Yesod.Core.Types.N:UniqueList[0]
                                        <Yesod.Core.Types.Stylesheet
                                           (Yesod.Routes.Class.Route Foundation.App)>_R))
                              (Data.Map.Internal.Tip
                                 @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                 @ ((Yesod.Routes.Class.Route Foundation.App
                                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                     -> Data.Text.Internal.Text)
                                    -> Data.Text.Internal.Builder.Builder))
                              (GHC.Base.Nothing
                                 @ ((Yesod.Routes.Class.Route Foundation.App
                                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                     -> Data.Text.Internal.Text)
                                    -> Text.Julius.Javascript))
                              (Yesod.Core.Types.$fIsStringWidgetFor2
                                 @ (Yesod.Routes.Class.Route Foundation.App))
                                `cast`
                              (Sym (Yesod.Core.Types.N:Head[0]
                                        <Yesod.Routes.Class.Route Foundation.App>_R)))
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R of x'5 { Yesod.Core.Types.GWData ipv49 ipv50 ipv51 ipv52 ipv53 ipv54 ipv55 ->
                    case GHC.Prim.writeMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           x'5
                           ipv47 of s2#5 { DEFAULT ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           s2#5 of ds17 { (#,#) ipv56 ipv57 ->
                    case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                           @ (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App)))
                           ipv57
                           Application.getHomeR_d
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                           <Foundation.App>_N)))_R)_R of x'6 { Yesod.Core.Types.GWData ipv58 ipv59 ipv60 ipv61 ipv62 ipv63 ipv64 ->
                    case GHC.Prim.writeMutVar#
                           @ GHC.Prim.RealWorld
                           @ (Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                           dt
                           x'6
                           ipv56 of s2#6 { DEFAULT ->
                    (# s2#6,
                       GHC.Tuple.() #) } } } } } } } } } } } } } } } } } } } } } } } })
                     `cast`
                   ((<Yesod.Core.Types.WidgetData Foundation.App>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <()>_R)) ; Sym (Yesod.Core.Types.N:WidgetFor[0]
                                                       <Foundation.App>_N <()>_R))
                   eta
                   eta1) -}
3964b0b47a79e3cfeaa6decbb447a3c7
  getHomeR20 :: Text.Internal.Css.Css
  {- Strictness: m2,
     Unfolding: (Text.Internal.Css.CssNoWhitespace
                   Application.getHomeR21) -}
29b451e72380d7926f4cd6f572d598a9
  getHomeR21 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR170
                   Application.getHomeR22) -}
a00c35c339cfb0dca7ff0a8ebcc07531
  getHomeR22 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR137
                   Application.getHomeR23) -}
df78d49d46d7bd17ae218aa34fef2e05
  getHomeR23 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR127
                   Application.getHomeR24) -}
aa17ac1ef00598547155a742e3585f0a
  getHomeR24 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR89
                   Application.getHomeR25) -}
258ab7032fe568dc2168a8796e91644d
  getHomeR25 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR71
                   Application.getHomeR26) -}
da08de3ce69bd01572dd35282a45b03c
  getHomeR26 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR61
                   Application.getHomeR27) -}
1e8eb0e8655012697e0457ba7c9f23d3
  getHomeR27 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR48
                   Application.getHomeR28) -}
5cc33743d5bac253310ab2d1efd21378
  getHomeR28 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR43
                   Application.getHomeR29) -}
958e62d7ebf0237a82166a225da970c8
  getHomeR29 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Application.getHomeR30
                   (GHC.Types.[]
                      @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved))) -}
91363cb171d0075add8e4065b5b91b5a
  getHomeR3 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Application.getHomeR4) -}
33610bbdcd40fa1c98bba019eb22cd6b
  getHomeR30 :: Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR31) -}
042f0bc61c78f295782d3777645a7dfa
  getHomeR31 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR40
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR32
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
62dc7794dc5d654e7d7ed2b5ebc8c1ed
  getHomeR32 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR33
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
d0eb84ed429b43dfbaf6f9050d0bac70
  getHomeR33 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR37
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR34
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
6a562d3ee41fc55b38ab960b17f2a90a
  getHomeR34 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR35)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
1192e4268b20f182e17ebb3bf68fceb1
  getHomeR35 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR36) -}
f1eba2af135b32a18a2999a0e240fdb8
  getHomeR36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("black"#) -}
521ef291070b28385db7fe92ec159aea
  getHomeR37 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR38)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
f274ef0a9cc23683b1836a917a42e916
  getHomeR38 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR39) -}
e08ddfcffee92516ccb98266f29826a8
  getHomeR39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("color"#) -}
95c4ff8001c9e2ef9cbb463f2c0692f4
  getHomeR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Application.getHomeR5) -}
ed1f4e004eb810cde2c9a7dffc19e574
  getHomeR40 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR41)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
3547d6473d9f7a10f0be3739fa083f29
  getHomeR41 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR42) -}
86ea3beea6984df72f2da670a132935e
  getHomeR42 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#cadastro"#) -}
5fbabbef2b0e767ee79f41164fd93a75
  getHomeR43 :: Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR44) -}
aca9a28c4e477b2174aa7cb79ed8bd19
  getHomeR44 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR45
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR32
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
c9c7d614d62a9bd5d190db6376ca922d
  getHomeR45 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR46)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
d81e2138bf17cec116d57b0b317dc2ec
  getHomeR46 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR47) -}
c9c5923181f1d879e221e3ee71d761dd
  getHomeR47 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#card"#) -}
26694758506beaa5f26aa7313b442eff
  getHomeR48 :: Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR49) -}
31914bd2287ecd9445588ad0f7cfeeaa
  getHomeR49 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR58
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR50
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
714ee7beb4f89aa48c9a9cc03df03a7f
  getHomeR5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR6) -}
7c24a2d242cf007dd75772bddfb7e6df
  getHomeR50 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR51
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
dadb2a5b03cc236a98ae8b3678e3b111
  getHomeR51 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR55
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR52
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
4604dce5c195f9b08399fc3f2b48659c
  getHomeR52 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR53)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
ef242f33242f64ff5779d629d1ecf610
  getHomeR53 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR54) -}
8db01a8302c5b62aaab76baf50f6917a
  getHomeR54 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#4CAF50"#) -}
26df01e1da4bf4419baa73be8eb42a1e
  getHomeR55 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR56)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
e40cdc7fcd9d91ed3f80587e9a456c97
  getHomeR56 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR57) -}
cac764f20e69d02f74a0830fc36a3886
  getHomeR57 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("background-color"#) -}
b9dc9be81fa2100352f5e1f580594325
  getHomeR58 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR59)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
de0150f5c3b630e84a5bc4f1ba823295
  getHomeR59 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR60) -}
3ba90bd62de69cc80ab5d2cb02297343
  getHomeR6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("> Cardapio</h2>\n"#) -}
afcef154832a761dd80c524ddf5ccbb9
  getHomeR60 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (".active"#) -}
baa2ecd4a5e7e981070d9d277025cf35
  getHomeR61 :: Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR62) -}
329566f4487245afcef2e2a475e56359
  getHomeR62 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR68
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR63
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
98466b99867b0fd7bde91917ad324672
  getHomeR63 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR64
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
acd40ef121bccc894816165ef8b05999
  getHomeR64 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR55
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR65
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
e6e56cbbac07e044fae03f9de68ffe1d
  getHomeR65 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR66)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
317c3fd87db9247a367c5b01fae83548
  getHomeR66 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR67) -}
1c849ddcc60cdd80d0c93904ef37c00e
  getHomeR67 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#111"#) -}
059cb4d0d823e8ac6af35b09ebe7df51
  getHomeR68 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR69)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
86cd3a90363cc3433f119802c8cae9e9
  getHomeR69 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR70) -}
d43873c06dc2a001c70ba9bc7702ddd2
  getHomeR7 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Application.getHomeR8) -}
950a45761493602252a3808fcc0a68e9
  getHomeR70 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("li a:hover:not(.active)"#) -}
a953c46553ae3f0408ee7e6a90757f94
  getHomeR71 :: Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR72) -}
9407b4501be65000eeb50aa6ff4e54f5
  getHomeR72 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR86
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR73
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
e6a9488135ad23e8d9831d373c8b2af9
  getHomeR73 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR82
                   Application.getHomeR74) -}
ae2856dae846f2fc88034c2a2cca7481
  getHomeR74 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR75
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
b0be879e7e24317f6b67a8619e2c303e
  getHomeR75 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR79
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR76
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
737e1ef6d3435665156829200d2232b6
  getHomeR76 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR77)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
acd18266d1ea41b168e33e9fcc909c88
  getHomeR77 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR78) -}
3d69ea9bc758275c250b5d18b0a233af
  getHomeR78 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("segoe ui light"#) -}
7708a5059eb04bb13446b778d9cc2559
  getHomeR79 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR80)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
1b7d9cfbb46c9a2b7391807b2590dcae
  getHomeR8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Application.getHomeR9) -}
35d6663bc7bc60d68f798f7c70707fc6
  getHomeR80 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR81) -}
daef43358d14de331c3549d079213e1e
  getHomeR81 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("font-family"#) -}
be47efacf88faa119d9e590dbeb4bd18
  getHomeR82 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR37
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR83
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
87b650835ee96b6092bf46c8fb6e28a1
  getHomeR83 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR84)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
75e1f1193a3863893e564e78bae2302c
  getHomeR84 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR85) -}
d66368e75a8865e58c2f426904ee86c2
  getHomeR85 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("white"#) -}
b13f098094094df6f74c14dbbafd2c2f
  getHomeR86 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR87)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
0a0b70978461500cb0e8e46cda481750
  getHomeR87 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR88) -}
f2bbd9d9cda26436346a3f33624579cb
  getHomeR88 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("a"#) -}
f4002cc8c97f669d333a2b55b74154d2
  getHomeR89 :: Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR90) -}
d645769354654877f6148a18960736a3
  getHomeR9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR10) -}
ed1c93439f76de20dcc2937a15411466
  getHomeR90 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR124
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0]))))
                   Application.getHomeR91
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
ab9594f72d41dc5ecaf0d92c1955e106
  getHomeR91 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR117
                   Application.getHomeR92) -}
30f89ab0444270a6047ebe3269e4a00e
  getHomeR92 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR82
                   Application.getHomeR93) -}
f03a95b176b1b3e183d6ed4c74fe057b
  getHomeR93 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR110
                   Application.getHomeR94) -}
7301fb8e9a35f8300fbf547bf5ccaaf2
  getHomeR94 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR103
                   Application.getHomeR95) -}
08a11a7b7c0c2879f432c9859c7e230a
  getHomeR95 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Application.getHomeR96
                   Application.getHomeR74) -}
831b7aea7f5948cb6b5291397ded90bd
  getHomeR96 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Application.getHomeR100
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))
                   Application.getHomeR97
                     `cast`
                   ((forall (s :: <*>_N).
                     <Data.Text.Internal.Builder.Buffer s
                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                     ->_R Sym (GHC.ST.N:ST[0]
                                   <s>_N
                                   <[Data.Text.Internal.Text]>_R)) ; (Sym (Data.Text.Internal.Builder.N:Builder[0]) ; Sub (Sym (Text.Internal.Css.D:R:StrResolved[0]))))) -}
3a89fc28746b60a201832eb95e14f3ca
  getHomeR97 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (x :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta :: Data.Text.Internal.Builder.Buffer s)
                   (eta1 :: GHC.Prim.State# s) ->
                 ((Text.Internal.Css.fromText Application.getHomeR98)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> x buf)
                    eta)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta1) -}
167ef0624cb709c489eaca33059698f6
  getHomeR98 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Application.getHomeR99) -}
0e98cf345fab96c3f24e4ad0f4561103
  getHomeR99 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("none"#) -}
f9a2eb0ce3bf97b5ee63501a9f068257
  getHomeR_d ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Strictness: m,
     Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Application.getHomeR_nt
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Internal.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fIsStringWidgetFor2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
936a138eb0a8fabe9f47457e0d5a6ad9
  getHomeR_d1 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Strictness: m,
     Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Application.getHomeR_nt1
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Internal.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fIsStringWidgetFor2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
2eaeab743cc4ec39cb04662a51fe96e8
  getHomeR_d2 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Strictness: m,
     Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Application.getHomeR_nt2
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Internal.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fIsStringWidgetFor2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
5ff1da54cd1a88aa190c5ed345a91ee3
  getHomeR_d3 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Strictness: m,
     Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Application.getHomeR_nt3
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Internal.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fIsStringWidgetFor2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
54bdad93093021a1d5af151e3bd99285
  getHomeR_d4 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Strictness: m,
     Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Application.getHomeR_nt4
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Internal.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fIsStringWidgetFor2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
fbbd46f1b8089a19e4f4daa3ea5393b0
  getHomeR_d5 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Strictness: m,
     Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Application.getHomeR_nt5
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Internal.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fIsStringWidgetFor2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
32d0c7bceab977d8250095ab63085de4
  getHomeR_ds ::
    Yesod.Core.Types.HandlerFor
      Foundation.App (GHC.Base.Maybe Data.ByteString.Internal.ByteString)
  {- Unfolding: (Yesod.Core.Handler.lookupSessionBS
                   @ (Yesod.Core.Types.HandlerFor Foundation.App)
                   (Yesod.Core.Class.Handler.$fMonadHandlerHandlerFor
                      @ Foundation.App)
                   Application.getHomeR194) -}
771a8fc7733c9e6092c093ab342e075d
  getHomeR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Application.getHomeR3
                   GHC.Tuple.()) -}
1b926e0f059b31f8fc04eaf20840f2ba
  getHomeR_eta1 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Application.getHomeR7
                   GHC.Tuple.()) -}
998f0b3b0cf04101b4adcf85a18aae59
  getHomeR_eta2 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Application.getHomeR11
                   GHC.Tuple.()) -}
c0f2b8361ab17c0d82f7333176e85044
  getHomeR_eta3 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Application.getHomeR15
                   GHC.Tuple.()) -}
d3022d336147c765820b7a199b4dc6ea
  getHomeR_eta4 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Application.getHomeR186
                   GHC.Tuple.()) -}
950feaff5b3ad1d0e2be2e0be84d9283
  getHomeR_eta5 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Application.getHomeR190
                   GHC.Tuple.()) -}
24cef42a8205e4fe0734cd0b80d272ff
  getHomeR_m1 :: Yesod.Core.Types.WidgetFor Foundation.App ()
  {- Unfolding: (Yesod.Core.Widget.$fToWidgetHeadsite(->)1_$ctoWidget
                   @ (Yesod.Routes.Class.Route Foundation.App
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ Foundation.App
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ (Yesod.Routes.Class.Route Foundation.App
                         -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                         -> Data.Text.Internal.Text)
                      @ (Yesod.Routes.Class.Route Foundation.App
                         -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                         -> Data.Text.Internal.Text)
                      @~ <Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <Yesod.Routes.Class.Route
                                                             Foundation.App
                                                           -> [(Data.Text.Internal.Text,
                                                                Data.Text.Internal.Text)]
                                                           -> Data.Text.Internal.Text>_N <Yesod.Routes.Class.Route
                                                                                            Foundation.App
                                                                                          -> [(Data.Text.Internal.Text,
                                                                                               Data.Text.Internal.Text)]
                                                                                          -> Data.Text.Internal.Text>_N)
                   @ (Yesod.Core.Types.WidgetFor Foundation.App)
                   (Yesod.Core.Class.Handler.$fMonadWidgetWidgetFor @ Foundation.App)
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.App
                      @ Foundation.App
                      @~ <Foundation.App>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                              <Foundation.App>_N)) <Foundation.App>_N)
                   Application.getHomeR19) -}
1565895d5c8ecc6ee9e8a2e4017fc397
  getHomeR_nt ::
    Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,A>m5,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Application.getHomeR_eta) -}
a88b184aa845178a7f62f71b00dde769
  getHomeR_nt1 ::
    Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,A>m5,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Application.getHomeR_eta1) -}
9fdf0fa50bc45a082488e4b3c689a8e8
  getHomeR_nt2 ::
    Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,A>m5,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Application.getHomeR_eta2) -}
a43a26206c7b505d11ec2157c630aca4
  getHomeR_nt3 ::
    Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,A>m5,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Application.getHomeR_eta3) -}
ef24d65fcd2820d7ecdca299c6eb2254
  getHomeR_nt4 ::
    Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,A>m5,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Application.getHomeR_eta4) -}
e274dfcc7da962a83b26732e2a4e29d7
  getHomeR_nt5 ::
    Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,A>m5,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Application.getHomeR_eta5) -}
b9e0049d6d713cd935a10b91b2420775
  getLayoutLogado ::
    Data.Text.Internal.Text -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 3,
     Strictness: <L,U><L,U(U,U(U,U,U,U,U,U,U,U,U),U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Application.getHomeR2
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R (<Yesod.Core.Types.HandlerData
                          Foundation.App Foundation.App>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Text.Blaze.Html.Html>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                                           <Foundation.App>_N
                                                                           <Text.Blaze.Html.Html>_R)) -}
ced2f532829b1f476f67dac1ff84ae5a
  getLayoutVisitante :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2,
     Unfolding: InlineRule (0, True, True)
                Application.getLayoutVisitante1
                  `cast`
                ((<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                  ->_R Sym (GHC.Types.N:IO[0]
                                <Text.Blaze.Html.Html>_R)) ; Sym (Yesod.Core.Types.N:HandlerFor[0]
                                                                      <Foundation.App>_N
                                                                      <Text.Blaze.Html.Html>_R)) -}
b7fdde5bfcafc6ecc2a81ae5830e8c16
  getLayoutVisitante1 ::
    Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Text.Blaze.Internal.MarkupM () #)
  {- Arity: 2,
     Unfolding: (Foundation.$fYesodApp44
                   Application.getHomeR185
                     `cast`
                   ((<Yesod.Core.Types.WidgetData Foundation.App>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <()>_R)) ; Sym (Yesod.Core.Types.N:WidgetFor[0]
                                                       <Foundation.App>_N <()>_R))) -}
instance [orphan] Yesod.Core.Class.Dispatch.YesodDispatch [Foundation.App]
  = Application.$fYesodDispatchApp
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

